!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADDR_MASK	tools/camp/ShadowMemory.hpp	21;"	d
ADDR_MASK	tools/campSampling/ShadowMemory.hpp	21;"	d
ADDR_MASK	tools/objtrace/ShadowMemory.hpp	21;"	d
ARM	include/corelab/Metadata/NamedMetadata.h	/^				ARM = 1,$/;"	e	enum:corelab::EsperantoNamer::EsperantoPlatform
AVR	include/corelab/Metadata/NamedMetadata.h	/^				AVR = 2$/;"	e	enum:corelab::EsperantoNamer::EsperantoPlatform
Adjacencies	include/corelab/Metadata/typedefs.h	/^  typedef DenseMap<Vertex,VertexList> Adjacencies;$/;"	t	namespace:corelab
After	include/corelab/Utilities/InstInsertPt.h	/^      static InstInsertPt After(Instruction *i, BasicBlock *bb = 0) {$/;"	f	class:corelab::InstInsertPt
AllocInfo	tools/objtrace/ctxObjtraceRuntime.h	/^typedef std::set<size_t> AllocInfo;$/;"	t
AllocInfo	tools/objtrace/objtraceruntime.h	/^typedef std::set<size_t> AllocInfo;$/;"	t
AllocMap	tools/objtrace/ctxObjtraceRuntime.h	/^typedef std::map<FullID, AllocInfo> AllocMap;$/;"	t
AllocMap	tools/objtrace/objtraceruntime.h	/^typedef std::map<FullID, AllocInfo> AllocMap;$/;"	t
AllocPage	tools/camp/ShadowMemory.hpp	/^		static inline void AllocPage (void* addr, size_t size){$/;"	f	class:ShadowMemoryManager
AllocPage	tools/campSampling/ShadowMemory.hpp	/^		static inline void AllocPage (void* addr, size_t size){$/;"	f	class:ShadowMemoryManager
AllocPage	tools/objtrace/ShadowMemory.hpp	/^		static inline void AllocPage (void* addr, size_t size){$/;"	f	class:ShadowMemoryManager
BBID	include/corelab/CAMP/campCommon.h	/^		typedef uint16_t 	BBID;$/;"	t	namespace:corelab::CAMP
BBID	lib/CAMP/campCommon.h	/^		typedef uint16_t 	BBID;$/;"	t	namespace:corelab::CAMP
BBList	include/corelab/Metadata/typedefs.h	/^  typedef std::vector<BasicBlock*>              BBList;$/;"	t	namespace:corelab
BBSet	include/corelab/Metadata/typedefs.h	/^  typedef DenseSet<BasicBlock *>                BBSet;$/;"	t	namespace:corelab
BBSets	include/corelab/Metadata/typedefs.h	/^  typedef std::vector<BBSet>                    BBSets;$/;"	t	namespace:corelab
BI	include/corelab/Metadata/typedefs.h	/^  typedef BBSet::const_iterator                 BI;$/;"	t	namespace:corelab
BOOST_ROOT_DIR	lib/AliasAnalysis/Makefile	/^BOOST_ROOT_DIR=$(BOOST_ROOT)$/;"	m
BUILD_RELINKED	lib/AliasAnalysis/Makefile	/^BUILD_RELINKED=1$/;"	m
BUILD_RELINKED	lib/Utilities/Makefile	/^BUILD_RELINKED=1$/;"	m
Before	include/corelab/Utilities/InstInsertPt.h	/^      static InstInsertPt Before(Instruction *i, BasicBlock *bb=0) {$/;"	f	class:corelab::InstInsertPt
Beginning	include/corelab/Utilities/InstInsertPt.h	/^      static InstInsertPt Beginning(BasicBlock *bb) {$/;"	f	class:corelab::InstInsertPt
Beginning	include/corelab/Utilities/InstInsertPt.h	/^      static InstInsertPt Beginning(Function *f) {$/;"	f	class:corelab::InstInsertPt
BlockCounts	include/corelab/Utilities/ProfileInfo.h	/^    typedef std::map<const BType*, double> BlockCounts;$/;"	t	class:llvm::ProfileInfoT
BlockInformation	include/corelab/Utilities/ProfileInfo.h	/^    std::map<const FType*, BlockCounts> BlockInformation;$/;"	m	class:llvm::ProfileInfoT
CAMP	include/corelab/CAMP/campCommon.h	/^	namespace CAMP$/;"	n	namespace:corelab
CAMP	include/corelab/CAMP/campDebug.h	/^	namespace CAMP$/;"	n	namespace:corelab
CAMP	include/corelab/CAMP/campTimer.h	/^	namespace CAMP$/;"	n	namespace:corelab
CAMP	lib/CAMP/campCommon.h	/^	namespace CAMP$/;"	n	namespace:corelab
CAMP	lib/CAMP/campDebug.h	/^	namespace CAMP$/;"	n	namespace:corelab
CAMPCache	include/corelab/CAMP/CampCache.h	/^			CAMPCache() : ModulePass(ID) {}$/;"	f	class:corelab::CAMPCache
CAMPCache	include/corelab/CAMP/CampCache.h	/^	class CAMPCache: public ModulePass$/;"	c	namespace:corelab
CAMPCache	lib/CAMP/CampCache.h	/^			CAMPCache() : ModulePass(ID) {}$/;"	f	class:corelab::CAMPCache
CAMPCache	lib/CAMP/CampCache.h	/^	class CAMPCache: public ModulePass$/;"	c	namespace:corelab
CAMPExectime	include/corelab/CAMP/CampExectime.h	/^			CAMPExectime() : ModulePass(ID) {}$/;"	f	class:corelab::CAMPExectime
CAMPExectime	include/corelab/CAMP/CampExectime.h	/^	class CAMPExectime : public ModulePass$/;"	c	namespace:corelab
CAMPExectime	lib/CAMP/CampExectime.h	/^			CAMPExectime() : ModulePass(ID) {}$/;"	f	class:corelab::CAMPExectime
CAMPExectime	lib/CAMP/CampExectime.h	/^	class CAMPExectime : public ModulePass$/;"	c	namespace:corelab
CAMPInstaller	include/corelab/CAMP/CAMP.h	/^			CAMPInstaller() : ModulePass(ID) {}$/;"	f	class:corelab::CAMPInstaller
CAMPInstaller	include/corelab/CAMP/CAMP.h	/^	class CAMPInstaller : public ModulePass$/;"	c	namespace:corelab
CAMPInstaller	lib/CAMP/CAMP.h	/^			CAMPInstaller() : ModulePass(ID) {}$/;"	f	class:corelab::CAMPInstaller
CAMPInstaller	lib/CAMP/CAMP.h	/^	class CAMPInstaller : public ModulePass$/;"	c	namespace:corelab
CAMPPlain	include/corelab/CAMP/CampPlain.h	/^			CAMPPlain() : ModulePass(ID) {}$/;"	f	class:corelab::CAMPPlain
CAMPPlain	include/corelab/CAMP/CampPlain.h	/^	class CAMPPlain : public ModulePass$/;"	c	namespace:corelab
CAMPPlain	lib/CAMP/CampPlain.h	/^			CAMPPlain() : ModulePass(ID) {}$/;"	f	class:corelab::CAMPPlain
CAMPPlain	lib/CAMP/CampPlain.h	/^	class CAMPPlain : public ModulePass$/;"	c	namespace:corelab
CAMP_CONTEXT_TREE_APPROACH	lib/CAMP/CAMP.cpp	35;"	d	file:
CAMP_CONTEXT_TREE_APPROACH	lib/CAMP/CampCache.cpp	6;"	d	file:
CAMP_CONTEXT_TREE_APPROACH	lib/CAMP/CampExectime.cpp	34;"	d	file:
CAMP_CONTEXT_TREE_APPROACH	lib/ObjTrace/CtxObjtrace.cpp	35;"	d	file:
CONTEXT_CALL	include/corelab/Metadata/Metadata.h	/^		CONTEXT_CALL = 0x0,$/;"	e	enum:corelab::__anon7
CONTEXT_ITER_CNT_MERGED	include/corelab/CAMP/campCommon.h	24;"	d
CONTEXT_ITER_CNT_MERGED	lib/CAMP/campCommon.h	24;"	d
CONTEXT_LOOP	include/corelab/Metadata/Metadata.h	/^		CONTEXT_LOOP = 0x1$/;"	e	enum:corelab::__anon7
CONTEXT_TYPE	include/corelab/Metadata/Metadata.h	/^	} CONTEXT_TYPE;$/;"	t	namespace:corelab	typeref:enum:corelab::__anon7
CORELAB_CAMP_COMMON_H	include/corelab/CAMP/campCommon.h	2;"	d
CORELAB_CAMP_COMMON_H	lib/CAMP/campCommon.h	2;"	d
CORELAB_CAMP_DEBUG_H	include/corelab/CAMP/campDebug.h	9;"	d
CORELAB_CAMP_DEBUG_H	lib/CAMP/campDebug.h	9;"	d
CORELAB_CAMP_META_H	include/corelab/CAMP/campMeta.h	2;"	d
CORELAB_CAMP_META_H	lib/CAMP/campMeta.h	2;"	d
CORELAB_CAMP_RUNTIME_H	tools/camp/campExecRuntime.h	2;"	d
CORELAB_CAMP_RUNTIME_H	tools/camp/campRuntime.h	2;"	d
CORELAB_CAMP_RUNTIME_H	tools/campSampling/campRuntime.h	2;"	d
CORELAB_CAMP_RUNTIME_H	tools/objtrace/ctxObjtraceRuntime.h	2;"	d
CORELAB_CAMP_TIMER_H	include/corelab/CAMP/campTimer.h	2;"	d
CORELAB_TYPEDEFS_H	include/corelab/Metadata/typedefs.h	2;"	d
CallCountOf	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::map<FunctionName, unsigned> CallCountOf;\/\/for Statistics$/;"	t	class:corelab::IndirectCallAnal
CallCountOf	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::map<FunctionName, unsigned> CallCountOf;\/\/for Statistics$/;"	t	class:corelab::IndirectCallAnal
CallStack	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::vector<const Function *> CallStack; \/\/To fine recursive funcall$/;"	t	class:corelab::RecursiveFuncAnal
CallStack	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::vector<const Function *> CallStack; \/\/To fine recursive funcall$/;"	t	class:corelab::RecursiveFuncAnal
CampID	tools/camp/campExecRuntime.h	/^typedef uint32_t CampID;$/;"	t
CampID	tools/camp/campRuntime.h	/^typedef uint32_t CampID;$/;"	t
CampID	tools/campSampling/campRuntime.h	/^typedef uint32_t CampID;$/;"	t
CampIDCounterMap	tools/camp/campRuntime.h	/^typedef std::map<CampID, uint8_t> CampIDCounterMap; \/\/for sampling$/;"	t
CampIDCounterMap	tools/campSampling/campRuntime.h	/^typedef std::map<CampID, uint8_t> CampIDCounterMap; \/\/for sampling$/;"	t
CandidateFunctions	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::vector<Function *> CandidateFunctions;$/;"	t	class:corelab::IndirectCallAnal
CandidateFunctions	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::vector<Function *> CandidateFunctions; $/;"	t	class:corelab::LoopTraverse
CandidateFunctions	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::vector<Function *> CandidateFunctions;$/;"	t	class:corelab::RecursiveFuncAnal
CandidateFunctions	include/corelab/CAMP/ContextTreeBuilder.h	/^			typedef std::vector<Function *> CandidateFunctions;$/;"	t	class:corelab::ContextTreeBuilder
CandidateFunctions	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::vector<Function *> CandidateFunctions;$/;"	t	class:corelab::IndirectCallAnal
CandidateFunctions	lib/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::vector<Function *> CandidateFunctions; $/;"	t	class:corelab::LoopTraverse
CandidateFunctions	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::vector<Function *> CandidateFunctions;$/;"	t	class:corelab::RecursiveFuncAnal
CandidateFunctions	lib/CAMP/ContextTreeBuilder.h	/^			typedef std::vector<Function *> CandidateFunctions;$/;"	t	class:corelab::ContextTreeBuilder
CntxID	include/corelab/CAMP/campCommon.h	/^		typedef uint16_t 	CntxID;$/;"	t	namespace:corelab::CAMP
CntxID	lib/CAMP/campCommon.h	/^		typedef uint16_t 	CntxID;$/;"	t	namespace:corelab::CAMP
CntxID	tools/camp/campExecRuntime.h	/^typedef uint16_t CntxID;$/;"	t
CntxID	tools/camp/campRuntime.h	/^typedef uint16_t CntxID;$/;"	t
CntxID	tools/campSampling/campRuntime.h	/^typedef uint16_t CntxID;$/;"	t
CntxID	tools/objtrace/ctxObjtraceRuntime.h	/^typedef uint16_t CntxID;$/;"	t
CntxIDorInstrID	include/corelab/CAMP/ContextTreeBuilder.h	/^	typedef CntxID CntxIDorInstrID;\/\/whether (CntxID or InstrID) which is given by corealb::LoadNamer.$/;"	t	namespace:corelab
CntxIDorInstrID	lib/CAMP/ContextTreeBuilder.h	/^	typedef CntxID CntxIDorInstrID;\/\/whether (CntxID or InstrID) which is given by corealb::LoadNamer.$/;"	t	namespace:corelab
ContextInfo	include/corelab/Metadata/Metadata.h	/^	} ContextInfo;$/;"	t	namespace:corelab	typeref:struct:corelab::__anon8
ContextTree	include/corelab/CAMP/ContextTreeBuilder.h	/^			ContextTree(bool b, ContextTreeNode *p, UniqueContextID ucID_)$/;"	f	class:corelab::ContextTree
ContextTree	include/corelab/CAMP/ContextTreeBuilder.h	/^	class ContextTree{$/;"	c	namespace:corelab
ContextTree	lib/CAMP/ContextTreeBuilder.h	/^			ContextTree(bool b, ContextTreeNode *p, UniqueContextID ucID_)$/;"	f	class:corelab::ContextTree
ContextTree	lib/CAMP/ContextTreeBuilder.h	/^	class ContextTree{$/;"	c	namespace:corelab
ContextTreeBuilder	include/corelab/CAMP/ContextTreeBuilder.h	/^			ContextTreeBuilder() : ModulePass(ID) { assignerUcID = 0; maxDepth = 0; nCallSiteNode=0; nLoopNode=0;}$/;"	f	class:corelab::ContextTreeBuilder
ContextTreeBuilder	include/corelab/CAMP/ContextTreeBuilder.h	/^	class ContextTreeBuilder : public ModulePass$/;"	c	namespace:corelab
ContextTreeBuilder	lib/CAMP/ContextTreeBuilder.h	/^			ContextTreeBuilder() : ModulePass(ID) { assignerUcID = 0; maxDepth = 0; nCallSiteNode=0; nLoopNode=0;}$/;"	f	class:corelab::ContextTreeBuilder
ContextTreeBuilder	lib/CAMP/ContextTreeBuilder.h	/^	class ContextTreeBuilder : public ModulePass$/;"	c	namespace:corelab
ContextTreeNode	include/corelab/CAMP/ContextTreeBuilder.h	/^	typedef ContextTree ContextTreeNode;$/;"	t	namespace:corelab
ContextTreeNode	lib/CAMP/ContextTreeBuilder.h	/^	typedef ContextTree ContextTreeNode;$/;"	t	namespace:corelab
CtxObjtrace	include/corelab/ObjTrace/CtxObjtrace.h	/^			CtxObjtrace() : ModulePass(ID) {}$/;"	f	class:corelab::CtxObjtrace
CtxObjtrace	include/corelab/ObjTrace/CtxObjtrace.h	/^	class CtxObjtrace  : public ModulePass$/;"	c	namespace:corelab
CtxObjtrace	lib/ObjTrace/CtxObjtrace.h	/^			CtxObjtrace() : ModulePass(ID) {}$/;"	f	class:corelab::CtxObjtrace
CtxObjtrace	lib/ObjTrace/CtxObjtrace.h	/^	class CtxObjtrace  : public ModulePass$/;"	c	namespace:corelab
DEBUG	tools/objtrace/objtraceruntime.h	9;"	d
DEBUG_TYPE	include/corelab/AliasAnalysis/TestClient.hpp	17;"	d
DEBUG_TYPE	include/corelab/CAMP/CAMP.h	15;"	d
DEBUG_TYPE	include/corelab/CAMP/CampExectime.h	16;"	d
DEBUG_TYPE	include/corelab/CAMP/RegiInterIterDepFinder.h	11;"	d
DEBUG_TYPE	include/corelab/ObjTrace/ObjTrace.h	15;"	d
DEBUG_TYPE	lib/AliasAnalysis/IndirectCallAnal.cpp	13;"	d	file:
DEBUG_TYPE	lib/AliasAnalysis/LoopTraverse.cpp	6;"	d	file:
DEBUG_TYPE	lib/AliasAnalysis/RecursiveFuncAnal.cpp	5;"	d	file:
DEBUG_TYPE	lib/CAMP/CAMP.h	15;"	d
DEBUG_TYPE	lib/CAMP/CampExectime.h	16;"	d
DEBUG_TYPE	lib/CAMP/RegiInterIterDepFinder.h	11;"	d
DEBUG_TYPE	lib/ObjTrace/ObjTrace.h	15;"	d
DEP_ELEM_SEQ_MASK	include/corelab/CAMP/campCommon.h	64;"	d
DEP_ELEM_SEQ_MASK	lib/CAMP/campCommon.h	64;"	d
DEP_ELEM_SEQ_OFF	include/corelab/CAMP/campCommon.h	66;"	d
DEP_ELEM_SEQ_OFF	lib/CAMP/campCommon.h	66;"	d
DEP_ELEM_SIID_MASK	include/corelab/CAMP/campCommon.h	63;"	d
DEP_ELEM_SIID_MASK	lib/CAMP/campCommon.h	63;"	d
DEP_ELEM_SIID_OFF	include/corelab/CAMP/campCommon.h	65;"	d
DEP_ELEM_SIID_OFF	lib/CAMP/campCommon.h	65;"	d
DIRS	Makefile	/^DIRS = lib tools$/;"	m
DIRS	lib/Makefile	/^DIRS=\\$/;"	m
DIRS	tools/Makefile	/^DIRS=\\$/;"	m
DONT_BUILD_RELINKED	tools/camp/Makefile	/^DONT_BUILD_RELINKED=1$/;"	m
DONT_BUILD_RELINKED	tools/campSampling/Makefile	/^DONT_BUILD_RELINKED=1$/;"	m
DONT_BUILD_RELINKED	tools/objtrace/Makefile	/^DONT_BUILD_RELINKED=1$/;"	m
DO_NOTHING	lib/AliasAnalysis/RecursiveFuncAnal.cpp	11;"	d	file:
DO_NOTHING	lib/Utilities/FindFunctionExitBB.cpp	9;"	d	file:
Debug	include/corelab/CAMP/campDebug.h	/^		namespace Debug$/;"	n	namespace:corelab::CAMP
Debug	lib/CAMP/campDebug.h	/^		namespace Debug$/;"	n	namespace:corelab::CAMP
DepElem	include/corelab/CAMP/campCommon.h	/^		} DepElem;$/;"	t	namespace:corelab::CAMP	typeref:struct:corelab::CAMP::__anon4
DepElem	lib/CAMP/campCommon.h	/^		} DepElem;$/;"	t	namespace:corelab::CAMP	typeref:struct:corelab::CAMP::__anon1
DepElemID	include/corelab/CAMP/campCommon.h	/^		typedef uint32_t 	DepElemID;$/;"	t	namespace:corelab::CAMP
DepElemID	lib/CAMP/campCommon.h	/^		typedef uint32_t 	DepElemID;$/;"	t	namespace:corelab::CAMP
DepElemIDSet	include/corelab/CAMP/campCommon.h	/^		typedef unordered_set<DepElemID>	DepElemIDSet;$/;"	t	namespace:corelab::CAMP
DepElemIDSet	lib/CAMP/campCommon.h	/^		typedef unordered_set<DepElemID>	DepElemIDSet;$/;"	t	namespace:corelab::CAMP
DepID	tools/camp/campExecRuntime.h	/^typedef uint64_t DepID;$/;"	t
DepID	tools/camp/campRuntime.h	/^typedef uint64_t DepID;$/;"	t
DepID	tools/campSampling/campRuntime.h	/^typedef uint64_t DepID;$/;"	t
DeviceEntry	include/corelab/Metadata/NamedMetadata.h	/^			typedef struct DeviceEntry {$/;"	s	class:corelab::EsperantoNamer
DeviceEntry	include/corelab/Metadata/NamedMetadata.h	/^			} DeviceEntry;$/;"	t	class:corelab::EsperantoNamer	typeref:struct:corelab::EsperantoNamer::DeviceEntry
DeviceMap	include/corelab/Metadata/NamedMetadata.h	/^	class DeviceMap{$/;"	c	namespace:corelab
DeviceMapEntry	include/corelab/Metadata/NamedMetadata.h	/^	class DeviceMapEntry{$/;"	c	namespace:corelab
DumpBacktrace	include/corelab/CAMP/campDebug.h	/^			DumpBacktrace ()$/;"	f	namespace:corelab::CAMP::Debug
DumpBacktrace	lib/CAMP/campDebug.h	/^			DumpBacktrace ()$/;"	f	namespace:corelab::CAMP::Debug
DumpBacktrace	tools/camp/ShadowMemory.hpp	/^inline static void DumpBacktrace (){$/;"	f
DumpBacktrace	tools/campSampling/ShadowMemory.hpp	/^inline static void DumpBacktrace (){$/;"	f
DumpBacktrace	tools/objtrace/ShadowMemory.hpp	/^inline static void DumpBacktrace (){$/;"	f
EXTRA_DIST	Makefile	/^EXTRA_DIST = include$/;"	m
Edge	include/corelab/Metadata/typedefs.h	/^  typedef std::pair<Vertex,Vertex> Edge;$/;"	t	namespace:corelab
Edge	include/corelab/Utilities/ProfileInfo.h	/^    typedef std::pair<const BType*, const BType*> Edge;$/;"	t	class:llvm::ProfileInfoT
EdgeInformation	include/corelab/Utilities/ProfileInfo.h	/^    std::map<const FType*, EdgeWeights> EdgeInformation;$/;"	m	class:llvm::ProfileInfoT
EdgeWeight	include/corelab/Utilities/ProfileInfo.h	/^    typedef std::pair<Edge, double> EdgeWeight;$/;"	t	class:llvm::ProfileInfoT
EdgeWeights	include/corelab/Utilities/ProfileInfo.h	/^    typedef std::map<Edge, double> EdgeWeights;$/;"	t	class:llvm::ProfileInfoT
ElapsedFromBase	include/corelab/CAMP/campTimer.h	/^			ElapsedFromBase ()$/;"	f	namespace:corelab::CAMP::Timer
ElapsedFromLast	include/corelab/CAMP/campTimer.h	/^			ElapsedFromLast ()$/;"	f	namespace:corelab::CAMP::Timer
End	include/corelab/Utilities/InstInsertPt.h	/^      static InstInsertPt End(BasicBlock *bb) {$/;"	f	class:corelab::InstInsertPt
EsperantoNamer	include/corelab/Metadata/NamedMetadata.h	/^	class EsperantoNamer: public ModulePass$/;"	c	namespace:corelab
EsperantoNamer	lib/Metadata/EsperantoNamer.cpp	/^	EsperantoNamer::EsperantoNamer() : ModulePass(ID) { }$/;"	f	class:corelab::EsperantoNamer
EsperantoPlatform	include/corelab/Metadata/NamedMetadata.h	/^			typedef enum EsperantoPlatform {$/;"	g	class:corelab::EsperantoNamer
EsperantoPlatform	include/corelab/Metadata/NamedMetadata.h	/^			} EsperantoPlatform;$/;"	t	class:corelab::EsperantoNamer	typeref:enum:corelab::EsperantoNamer::EsperantoPlatform
ExitBBMap	include/corelab/Utilities/FindFunctionExitBB.hpp	/^			typedef std::unordered_map<Function *, ExitBBs> ExitBBMap;$/;"	t	struct:corelab::FindFunctionExitBB
ExitBBs	include/corelab/Utilities/FindFunctionExitBB.hpp	/^			typedef std::pair<llvm::ReturnInst *, std::vector<UnreachableInst *>> ExitBBs;$/;"	t	struct:corelab::FindFunctionExitBB
ExternalCallList	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::vector<const Instruction *> ExternalCallList;$/;"	t	class:corelab::LoopTraverse
ExternalCallList	include/corelab/CAMP/CAMP.h	/^			typedef std::vector<const Instruction *> ExternalCallList;$/;"	t	class:corelab::CAMPInstaller
ExternalCallList	include/corelab/CAMP/CampExectime.h	/^			typedef std::vector<const Instruction *> ExternalCallList;$/;"	t	class:corelab::CAMPExectime
ExternalCallList	include/corelab/ObjTrace/CtxObjtrace.h	/^			typedef std::vector<const Instruction *> ExternalCallList;$/;"	t	class:corelab::CtxObjtrace
ExternalCallList	lib/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::vector<const Instruction *> ExternalCallList;$/;"	t	class:corelab::LoopTraverse
ExternalCallList	lib/CAMP/CAMP.h	/^			typedef std::vector<const Instruction *> ExternalCallList;$/;"	t	class:corelab::CAMPInstaller
ExternalCallList	lib/CAMP/CampExectime.h	/^			typedef std::vector<const Instruction *> ExternalCallList;$/;"	t	class:corelab::CAMPExectime
ExternalCallList	lib/ObjTrace/CtxObjtrace.h	/^			typedef std::vector<const Instruction *> ExternalCallList;$/;"	t	class:corelab::CtxObjtrace
FindFunctionExitBB	include/corelab/Utilities/FindFunctionExitBB.hpp	/^			FindFunctionExitBB(): ModulePass(ID) { }$/;"	f	struct:corelab::FindFunctionExitBB
FindFunctionExitBB	include/corelab/Utilities/FindFunctionExitBB.hpp	/^	struct FindFunctionExitBB: public ModulePass{$/;"	s	namespace:corelab
FullID	include/corelab/ObjTrace/CtxObjtrace.h	/^	typedef uint64_t FullID;$/;"	t	namespace:corelab
FullID	include/corelab/ObjTrace/ObjTrace.h	/^  typedef uint64_t FullID;$/;"	t	namespace:corelab
FullID	lib/ObjTrace/CtxObjtrace.h	/^	typedef uint64_t FullID;$/;"	t	namespace:corelab
FullID	lib/ObjTrace/ObjTrace.h	/^  typedef uint64_t FullID;$/;"	t	namespace:corelab
FullID	tools/objtrace/ctxObjtraceRuntime.h	/^typedef uint64_t FullID;$/;"	t
FullID	tools/objtrace/objtraceruntime.h	/^typedef uint64_t FullID;$/;"	t
FunToMaxDepth	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      typedef DenseMap<const Function *, unsigned> FunToMaxDepth;$/;"	t	class:corelab::LoopTraverse
FunToMaxDepth	lib/AliasAnalysis/LoopTraverse.hpp	/^      typedef DenseMap<const Function *, unsigned> FunToMaxDepth;$/;"	t	class:corelab::LoopTraverse
FuncID	include/corelab/CAMP/campCommon.h	/^		typedef uint16_t 	FuncID;$/;"	t	namespace:corelab::CAMP
FuncID	lib/CAMP/campCommon.h	/^		typedef uint16_t 	FuncID;$/;"	t	namespace:corelab::CAMP
FuncSet	include/corelab/Metadata/typedefs.h	/^  typedef DenseSet<Function *>                  FuncSet;$/;"	t	namespace:corelab
FunctionInformation	include/corelab/Utilities/ProfileInfo.h	/^    std::map<const FType*, double> FunctionInformation;$/;"	m	class:llvm::ProfileInfoT
FunctionName	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::string FunctionName; \/\/Still, i can't trust llvm::StringRef$/;"	t	class:corelab::IndirectCallAnal
FunctionName	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::string FunctionName; \/\/Still, i can't trust llvm::StringRef$/;"	t	class:corelab::IndirectCallAnal
FunctionTableEntry	include/corelab/Metadata/NamedMetadata.h	/^			typedef struct FunctionTableEntry{$/;"	s	class:corelab::EsperantoNamer
FunctionTableEntry	include/corelab/Metadata/NamedMetadata.h	/^			} FunctionTableEntry;$/;"	t	class:corelab::EsperantoNamer	typeref:struct:corelab::EsperantoNamer::FunctionTableEntry
GET_BLK_ID	lib/Metadata/Namer.cpp	32;"	d	file:
GET_BLOCK_ID	tools/objtrace/ctxObjtraceRuntime.cpp	32;"	d	file:
GET_FUNC_ID	lib/Metadata/Namer.cpp	33;"	d	file:
GET_INSTR_ID	lib/ObjTrace/CtxObjtrace.cpp	37;"	d	file:
GET_INSTR_ID	tools/objtrace/ctxObjtraceRuntime.cpp	33;"	d	file:
GET_INST_ID	lib/Metadata/Namer.cpp	31;"	d	file:
GET_SHADOW_ADDR_HISTORY_TB	tools/camp/ShadowMemory.hpp	29;"	d
GET_SHADOW_ADDR_HISTORY_TB	tools/campSampling/ShadowMemory.hpp	29;"	d
GET_SHADOW_ADDR_HISTORY_TB	tools/objtrace/ShadowMemory.hpp	29;"	d
GET_SHADOW_ADDR_MALLOC_MAP	tools/camp/ShadowMemory.hpp	30;"	d
GET_SHADOW_ADDR_MALLOC_MAP	tools/campSampling/ShadowMemory.hpp	30;"	d
GET_SHADOW_ADDR_MALLOC_MAP	tools/objtrace/ShadowMemory.hpp	30;"	d
GET_TYPE	lib/Metadata/Namer.cpp	34;"	d	file:
GLOBAL_CTORS_H	include/corelab/Utilities/GlobalCtors.h	2;"	d
GetPathMode	include/corelab/Utilities/ProfileInfo.h	/^    enum GetPathMode {$/;"	g	class:llvm::ProfileInfoT
GetPathToDest	include/corelab/Utilities/ProfileInfo.h	/^      GetPathToDest = 4,$/;"	e	enum:llvm::ProfileInfoT::GetPathMode
GetPathToExit	include/corelab/Utilities/ProfileInfo.h	/^      GetPathToExit = 1,$/;"	e	enum:llvm::ProfileInfoT::GetPathMode
GetPathToValue	include/corelab/Utilities/ProfileInfo.h	/^      GetPathToValue = 2,$/;"	e	enum:llvm::ProfileInfoT::GetPathMode
GetPathWithNewEdges	include/corelab/Utilities/ProfileInfo.h	/^      GetPathWithNewEdges = 8$/;"	e	enum:llvm::ProfileInfoT::GetPathMode
GetTimeInSec	include/corelab/CAMP/campTimer.h	/^			GetTimeInSec ()$/;"	f	namespace:corelab::CAMP::Timer
HAS_UNWIND	lib/Utilities/Makefile	/^HAS_UNWIND := ${shell				\\$/;"	m
HistoryElem	tools/camp/campRuntime.h	/^typedef struct HistoryElem {$/;"	s
HistoryElem	tools/camp/campRuntime.h	/^} HistoryElem;$/;"	t	typeref:struct:HistoryElem
HistoryElem	tools/campSampling/campRuntime.h	/^typedef struct HistoryElem {$/;"	s
HistoryElem	tools/campSampling/campRuntime.h	/^} HistoryElem;$/;"	t	typeref:struct:HistoryElem
ID	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			static char ID;$/;"	m	class:corelab::IndirectCallAnal
ID	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      static char ID;$/;"	m	class:corelab::LoopTraverse
ID	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      static char ID;$/;"	m	class:corelab::RecursiveFuncAnal
ID	include/corelab/AliasAnalysis/TestClient.hpp	/^			static char ID;$/;"	m	class:corelab::TestAAClient
ID	include/corelab/CAMP/CAMP.h	/^			static char ID;$/;"	m	class:corelab::CAMPInstaller
ID	include/corelab/CAMP/CampCache.h	/^			static char ID;$/;"	m	class:corelab::CAMPCache
ID	include/corelab/CAMP/CampExectime.h	/^			static char ID;$/;"	m	class:corelab::CAMPExectime
ID	include/corelab/CAMP/CampPlain.h	/^			static char ID;$/;"	m	class:corelab::CAMPPlain
ID	include/corelab/CAMP/ContextTreeBuilder.h	/^			static char ID;$/;"	m	class:corelab::ContextTreeBuilder
ID	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			static char ID;$/;"	m	class:corelab::RegiInterIterDepFinder
ID	include/corelab/Metadata/LoadNamer.h	/^			static char ID;$/;"	m	class:corelab::LoadNamer
ID	include/corelab/Metadata/Metadata.h	/^			static char ID;$/;"	m	class:corelab::Namer
ID	include/corelab/Metadata/NamedMetadata.h	/^			static char ID;$/;"	m	class:corelab::EsperantoNamer
ID	include/corelab/ObjTrace/CtxObjtrace.h	/^			static char ID;$/;"	m	class:corelab::CtxObjtrace
ID	include/corelab/ObjTrace/ObjTrace.h	/^      static char ID;$/;"	m	class:corelab::ObjTrace
ID	include/corelab/Utilities/FindFunctionExitBB.hpp	/^			static char ID;$/;"	m	struct:corelab::FindFunctionExitBB
ID	include/corelab/Utilities/ProfileInfo.h	/^    static char ID; \/\/ Class identification, replacement for typeinfo$/;"	m	class:llvm::ProfileInfoT
ID	lib/AliasAnalysis/IndirectCallAnal.cpp	/^char IndirectCallAnal::ID = 0;$/;"	m	class:IndirectCallAnal	file:
ID	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			static char ID;$/;"	m	class:corelab::IndirectCallAnal
ID	lib/AliasAnalysis/LoopTraverse.cpp	/^char LoopTraverse::ID = 0;$/;"	m	class:LoopTraverse	file:
ID	lib/AliasAnalysis/LoopTraverse.hpp	/^      static char ID;$/;"	m	class:corelab::LoopTraverse
ID	lib/AliasAnalysis/RecursiveFuncAnal.cpp	/^char RecursiveFuncAnal::ID = 0;$/;"	m	class:RecursiveFuncAnal	file:
ID	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      static char ID;$/;"	m	class:corelab::RecursiveFuncAnal
ID	lib/CAMP/CAMP.cpp	/^char CAMPInstaller::ID = 0;$/;"	m	class:CAMPInstaller	file:
ID	lib/CAMP/CAMP.h	/^			static char ID;$/;"	m	class:corelab::CAMPInstaller
ID	lib/CAMP/CampCache.cpp	/^char CAMPCache::ID = 0;$/;"	m	class:CAMPCache	file:
ID	lib/CAMP/CampCache.h	/^			static char ID;$/;"	m	class:corelab::CAMPCache
ID	lib/CAMP/CampExectime.cpp	/^char CAMPExectime::ID = 0;$/;"	m	class:CAMPExectime	file:
ID	lib/CAMP/CampExectime.h	/^			static char ID;$/;"	m	class:corelab::CAMPExectime
ID	lib/CAMP/CampPlain.cpp	/^char CAMPPlain::ID = 0;$/;"	m	class:CAMPPlain	file:
ID	lib/CAMP/CampPlain.h	/^			static char ID;$/;"	m	class:corelab::CAMPPlain
ID	lib/CAMP/ContextTreeBuilder.cpp	/^char ContextTreeBuilder::ID = 0;$/;"	m	class:ContextTreeBuilder	file:
ID	lib/CAMP/ContextTreeBuilder.h	/^			static char ID;$/;"	m	class:corelab::ContextTreeBuilder
ID	lib/CAMP/RegiInterIterDepFinder.cpp	/^char RegiInterIterDepFinder::ID = 0;$/;"	m	class:RegiInterIterDepFinder	file:
ID	lib/CAMP/RegiInterIterDepFinder.h	/^			static char ID;$/;"	m	class:corelab::RegiInterIterDepFinder
ID	lib/Metadata/EsperantoNamer.cpp	/^	char EsperantoNamer::ID = 0;$/;"	m	class:corelab::EsperantoNamer	file:
ID	lib/Metadata/LoadNamer.cpp	/^	char LoadNamer::ID = 0;$/;"	m	class:corelab::LoadNamer	file:
ID	lib/Metadata/Namer.cpp	/^	char Namer::ID = 0;$/;"	m	class:corelab::Namer	file:
ID	lib/ObjTrace/CtxObjtrace.cpp	/^char CtxObjtrace::ID = 0;$/;"	m	class:CtxObjtrace	file:
ID	lib/ObjTrace/CtxObjtrace.h	/^			static char ID;$/;"	m	class:corelab::CtxObjtrace
ID	lib/ObjTrace/ObjTrace.cpp	/^char ObjTrace::ID = 0;$/;"	m	class:ObjTrace	file:
ID	lib/ObjTrace/ObjTrace.h	/^      static char ID;$/;"	m	class:corelab::ObjTrace
ID	lib/Utilities/FindFunctionExitBB.cpp	/^char FindFunctionExitBB::ID = 0;$/;"	m	class:FindFunctionExitBB	file:
INSTR_CALL	include/corelab/Metadata/Metadata.h	/^		INSTR_CALL = 0x1,$/;"	e	enum:corelab::__anon6
INSTR_LOAD	include/corelab/Metadata/Metadata.h	/^		INSTR_LOAD = 0x2,$/;"	e	enum:corelab::__anon6
INSTR_OTHER	include/corelab/Metadata/Metadata.h	/^		INSTR_OTHER = 0x8$/;"	e	enum:corelab::__anon6
INSTR_STORE	include/corelab/Metadata/Metadata.h	/^		INSTR_STORE = 0x4,$/;"	e	enum:corelab::__anon6
INSTR_TYPE	include/corelab/Metadata/Metadata.h	/^	} INSTR_TYPE;$/;"	t	namespace:corelab	typeref:enum:corelab::__anon6
INST_INSERTION_POINT_H	include/corelab/Utilities/InstInsertPt.h	2;"	d
IndirectCall	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef const Instruction * IndirectCall;$/;"	t	class:corelab::IndirectCallAnal
IndirectCall	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      typedef const Instruction * IndirectCall;$/;"	t	class:corelab::LoopTraverse
IndirectCall	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef const Instruction * IndirectCall;$/;"	t	class:corelab::RecursiveFuncAnal
IndirectCall	include/corelab/CAMP/ContextTreeBuilder.h	/^			typedef const Instruction * IndirectCall;$/;"	t	class:corelab::ContextTreeBuilder
IndirectCall	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef const Instruction * IndirectCall;$/;"	t	class:corelab::IndirectCallAnal
IndirectCall	lib/AliasAnalysis/LoopTraverse.hpp	/^      typedef const Instruction * IndirectCall;$/;"	t	class:corelab::LoopTraverse
IndirectCall	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef const Instruction * IndirectCall;$/;"	t	class:corelab::RecursiveFuncAnal
IndirectCall	lib/CAMP/ContextTreeBuilder.h	/^			typedef const Instruction * IndirectCall;$/;"	t	class:corelab::ContextTreeBuilder
IndirectCallAnal	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			IndirectCallAnal() : ModulePass(ID) {}$/;"	f	class:corelab::IndirectCallAnal
IndirectCallAnal	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^	class IndirectCallAnal : public ModulePass {$/;"	c	namespace:corelab
IndirectCallAnal	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			IndirectCallAnal() : ModulePass(ID) {}$/;"	f	class:corelab::IndirectCallAnal
IndirectCallAnal	lib/AliasAnalysis/IndirectCallAnal.hpp	/^	class IndirectCallAnal : public ModulePass {$/;"	c	namespace:corelab
IndirectCallList	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::vector<IndirectCall> IndirectCallList;$/;"	t	class:corelab::IndirectCallAnal
IndirectCallList	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::vector<const Instruction *> IndirectCallList;$/;"	t	class:corelab::LoopTraverse
IndirectCallList	include/corelab/CAMP/CAMP.h	/^			typedef std::vector<const Instruction *> IndirectCallList;$/;"	t	class:corelab::CAMPInstaller
IndirectCallList	include/corelab/CAMP/CampExectime.h	/^			typedef std::vector<const Instruction *> IndirectCallList;$/;"	t	class:corelab::CAMPExectime
IndirectCallList	include/corelab/ObjTrace/CtxObjtrace.h	/^			typedef std::vector<const Instruction *> IndirectCallList;$/;"	t	class:corelab::CtxObjtrace
IndirectCallList	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::vector<IndirectCall> IndirectCallList;$/;"	t	class:corelab::IndirectCallAnal
IndirectCallList	lib/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::vector<const Instruction *> IndirectCallList;$/;"	t	class:corelab::LoopTraverse
IndirectCallList	lib/CAMP/CAMP.h	/^			typedef std::vector<const Instruction *> IndirectCallList;$/;"	t	class:corelab::CAMPInstaller
IndirectCallList	lib/CAMP/CampExectime.h	/^			typedef std::vector<const Instruction *> IndirectCallList;$/;"	t	class:corelab::CAMPExectime
IndirectCallList	lib/ObjTrace/CtxObjtrace.h	/^			typedef std::vector<const Instruction *> IndirectCallList;$/;"	t	class:corelab::CtxObjtrace
IndirectCallMap	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::unordered_map<IndirectCall, CandidateFunctions> IndirectCallMap; \/\/ 1:m (one to many matching)$/;"	t	class:corelab::LoopTraverse
IndirectCallMap	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::unordered_map<IndirectCall, CandidateFunctions> IndirectCallMap; \/\/ 1:m (one to many matching)$/;"	t	class:corelab::RecursiveFuncAnal
IndirectCallMap	include/corelab/CAMP/ContextTreeBuilder.h	/^			typedef std::unordered_map<IndirectCall, CandidateFunctions> IndirectCallMap; \/\/ 1:m (one to many matching)$/;"	t	class:corelab::ContextTreeBuilder
IndirectCallMap	lib/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::unordered_map<IndirectCall, CandidateFunctions> IndirectCallMap; \/\/ 1:m (one to many matching)$/;"	t	class:corelab::LoopTraverse
IndirectCallMap	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::unordered_map<IndirectCall, CandidateFunctions> IndirectCallMap; \/\/ 1:m (one to many matching)$/;"	t	class:corelab::RecursiveFuncAnal
IndirectCallMap	lib/CAMP/ContextTreeBuilder.h	/^			typedef std::unordered_map<IndirectCall, CandidateFunctions> IndirectCallMap; \/\/ 1:m (one to many matching)$/;"	t	class:corelab::ContextTreeBuilder
InstInsertPt	include/corelab/Utilities/InstInsertPt.h	/^      InstInsertPt()$/;"	f	class:corelab::InstInsertPt
InstInsertPt	include/corelab/Utilities/InstInsertPt.h	/^      InstInsertPt(bool b4, Instruction *position)$/;"	f	class:corelab::InstInsertPt
InstInsertPt	include/corelab/Utilities/InstInsertPt.h	/^      InstInsertPt(const InstInsertPt &pt)$/;"	f	class:corelab::InstInsertPt
InstInsertPt	include/corelab/Utilities/InstInsertPt.h	/^  class InstInsertPt {$/;"	c	namespace:corelab
InstInsertPts	include/corelab/Utilities/InstInsertPt.h	/^  typedef std::vector<InstInsertPt> InstInsertPts;$/;"	t	namespace:corelab
InstrID	include/corelab/CAMP/campCommon.h	/^		typedef uint16_t 	InstrID;$/;"	t	namespace:corelab::CAMP
InstrID	include/corelab/ObjTrace/ObjTrace.h	/^  typedef uint16_t InstrID;$/;"	t	namespace:corelab
InstrID	lib/CAMP/campCommon.h	/^		typedef uint16_t 	InstrID;$/;"	t	namespace:corelab::CAMP
InstrID	lib/ObjTrace/ObjTrace.h	/^  typedef uint16_t InstrID;$/;"	t	namespace:corelab
InstrID	tools/camp/campExecRuntime.h	/^typedef uint16_t InstrID;$/;"	t
InstrID	tools/camp/campRuntime.h	/^typedef uint16_t InstrID;$/;"	t
InstrID	tools/campSampling/campRuntime.h	/^typedef uint16_t InstrID;$/;"	t
InstrID	tools/objtrace/ctxObjtraceRuntime.h	/^typedef uint32_t InstrID;$/;"	t
InstrType	include/corelab/CAMP/campCommon.h	/^		} InstrType;$/;"	t	namespace:corelab::CAMP	typeref:enum:corelab::CAMP::__anon5
InstrType	lib/CAMP/campCommon.h	/^		} InstrType;$/;"	t	namespace:corelab::CAMP	typeref:enum:corelab::CAMP::__anon2
IterCnt	include/corelab/CAMP/campCommon.h	/^		typedef uint8_t 	IterCnt;$/;"	t	namespace:corelab::CAMP
IterCnt	lib/CAMP/campCommon.h	/^		typedef uint8_t 	IterCnt;$/;"	t	namespace:corelab::CAMP
IterRelation	tools/camp/campRuntime.h	/^typedef uint32_t IterRelation;$/;"	t
IterRelation	tools/camp/campRuntime.h	/^typedef uint64_t IterRelation;$/;"	t
IterRelation	tools/campSampling/campRuntime.h	/^typedef uint32_t IterRelation;$/;"	t
IterRelation	tools/campSampling/campRuntime.h	/^typedef uint64_t IterRelation;$/;"	t
IterRelation	tools/objtrace/ctxObjtraceRuntime.h	/^typedef uint32_t IterRelation;$/;"	t
IterRelation	tools/objtrace/ctxObjtraceRuntime.h	/^typedef uint64_t IterRelation;$/;"	t
IterStack	tools/camp/campRuntime.h	/^typedef union IterStack{$/;"	u
IterStack	tools/camp/campRuntime.h	/^} IterStack;$/;"	t	typeref:union:IterStack
IterStack	tools/campSampling/campRuntime.h	/^typedef union IterStack{$/;"	u
IterStack	tools/campSampling/campRuntime.h	/^} IterStack;$/;"	t	typeref:union:IterStack
IterStack	tools/objtrace/ctxObjtraceRuntime.h	/^typedef union IterStack{$/;"	u
IterStack	tools/objtrace/ctxObjtraceRuntime.h	/^} IterStack;$/;"	t	typeref:union:IterStack
Iterator	include/corelab/CAMP/CampCache.h	/^			int Iterator;$/;"	m	class:corelab::CAMPCache
Iterator	lib/CAMP/CampCache.h	/^			int Iterator;$/;"	m	class:corelab::CAMPCache
LEVEL	Makefile	/^LEVEL = .$/;"	m
LEVEL	lib/AliasAnalysis/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/CAMP/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/Makefile	/^LEVEL=..$/;"	m
LEVEL	lib/Metadata/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/ObjTrace/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/Utilities/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	tools/Makefile	/^LEVEL=..$/;"	m
LEVEL	tools/camp/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	tools/campSampling/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	tools/objtrace/Makefile	/^LEVEL=..\/..$/;"	m
LIBRARYNAME	lib/AliasAnalysis/Makefile	/^LIBRARYNAME=AliasAnalysis$/;"	m
LIBRARYNAME	lib/CAMP/Makefile	/^LIBRARYNAME=CAMP$/;"	m
LIBRARYNAME	lib/Metadata/Makefile	/^LIBRARYNAME=Metadata$/;"	m
LIBRARYNAME	lib/ObjTrace/Makefile	/^LIBRARYNAME=ObjTrace$/;"	m
LIBRARYNAME	lib/Utilities/Makefile	/^LIBRARYNAME=Utils$/;"	m
LIBRARYNAME	tools/camp/Makefile	/^LIBRARYNAME=campExecTime$/;"	m
LIBRARYNAME	tools/campSampling/Makefile	/^LIBRARYNAME=campSampling$/;"	m
LIBRARYNAME	tools/objtrace/Makefile	/^LIBRARYNAME=objtrace$/;"	m
LLVM_ANALYSIS_PROFILEINFO_H	include/corelab/Utilities/ProfileInfo.h	22;"	d
LLVM_CORELAB_CAMP_COTEXT_TREE_BUILDER_H	include/corelab/CAMP/ContextTreeBuilder.h	2;"	d
LLVM_CORELAB_CAMP_COTEXT_TREE_BUILDER_H	lib/CAMP/ContextTreeBuilder.h	2;"	d
LLVM_CORELAB_CAMP_INSTALLER_H	include/corelab/CAMP/CAMP.h	2;"	d
LLVM_CORELAB_CAMP_INSTALLER_H	include/corelab/CAMP/CampExectime.h	2;"	d
LLVM_CORELAB_CAMP_INSTALLER_H	include/corelab/CAMP/CampPlain.h	2;"	d
LLVM_CORELAB_CAMP_INSTALLER_H	lib/CAMP/CAMP.h	2;"	d
LLVM_CORELAB_CAMP_INSTALLER_H	lib/CAMP/CampExectime.h	2;"	d
LLVM_CORELAB_CAMP_INSTALLER_H	lib/CAMP/CampPlain.h	2;"	d
LLVM_CORELAB_CTX_OBJ_H	include/corelab/ObjTrace/CtxObjtrace.h	2;"	d
LLVM_CORELAB_CTX_OBJ_H	lib/ObjTrace/CtxObjtrace.h	2;"	d
LLVM_CORELAB_INDIRECT_CALL_ANAL_H	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	2;"	d
LLVM_CORELAB_INDIRECT_CALL_ANAL_H	lib/AliasAnalysis/IndirectCallAnal.hpp	2;"	d
LLVM_CORELAB_LOADNAMER_H	include/corelab/Metadata/LoadNamer.h	2;"	d
LLVM_CORELAB_LOOP_TRAVERSE_H	include/corelab/AliasAnalysis/LoopTraverse.hpp	2;"	d
LLVM_CORELAB_LOOP_TRAVERSE_H	lib/AliasAnalysis/LoopTraverse.hpp	2;"	d
LLVM_CORELAB_METADATA_MANAGER	include/corelab/Metadata/Metadata.h	2;"	d
LLVM_CORELAB_NAMEDMETADATA_H	include/corelab/Metadata/NamedMetadata.h	2;"	d
LLVM_CORELAB_OBJTRACE_H	include/corelab/ObjTrace/ObjTrace.h	2;"	d
LLVM_CORELAB_OBJTRACE_H	lib/ObjTrace/ObjTrace.h	2;"	d
LLVM_CORELAB_OBJTRACE_RUNTIME_H	tools/objtrace/objtraceruntime.h	2;"	d
LLVM_CORELAB_RECURSIVE_FUNC_ANAL_H	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	2;"	d
LLVM_CORELAB_RECURSIVE_FUNC_ANAL_H	lib/AliasAnalysis/RecursiveFuncAnal.hpp	2;"	d
LLVM_CORELAB_REGI_INTER_ITER_DEP_FINDER_H	include/corelab/CAMP/RegiInterIterDepFinder.h	2;"	d
LLVM_CORELAB_REGI_INTER_ITER_DEP_FINDER_H	lib/CAMP/RegiInterIterDepFinder.h	2;"	d
LLVM_CORELAB_TEST_AA_CLIENT_H	include/corelab/AliasAnalysis/TestClient.hpp	2;"	d
LOAD	include/corelab/CAMP/campCommon.h	/^			LOAD 	= 0x00,$/;"	e	enum:corelab::CAMP::__anon5
LOAD	lib/CAMP/campCommon.h	/^			LOAD 	= 0x00,$/;"	e	enum:corelab::CAMP::__anon2
LOADABLE_MODULE	lib/AliasAnalysis/Makefile	/^LOADABLE_MODULE = 1$/;"	m
LOADABLE_MODULE	lib/CAMP/Makefile	/^LOADABLE_MODULE = 1$/;"	m
LOADABLE_MODULE	lib/Metadata/Makefile	/^LOADABLE_MODULE = 1$/;"	m
LOADABLE_MODULE	lib/ObjTrace/Makefile	/^LOADABLE_MODULE = 1$/;"	m
LOADABLE_MODULE	lib/Utilities/Makefile	/^LOADABLE_MODULE = 1$/;"	m
LoadHistoryMap	tools/camp/campRuntime.h	/^typedef std::map<CampID, IterStack> LoadHistoryMap;$/;"	t
LoadHistoryMap	tools/campSampling/campRuntime.h	/^typedef std::map<CampID, IterStack> LoadHistoryMap;$/;"	t
LoadNamer	include/corelab/Metadata/LoadNamer.h	/^			LoadNamer() : ModulePass(ID) {}$/;"	f	class:corelab::LoadNamer
LoadNamer	include/corelab/Metadata/LoadNamer.h	/^	class LoadNamer : public ModulePass$/;"	c	namespace:corelab
LoadStoreInfo	tools/objtrace/ctxObjtraceRuntime.h	/^typedef std::set<FullID> LoadStoreInfo;$/;"	t
LoadStoreInfo	tools/objtrace/objtraceruntime.h	/^typedef std::set<FullID> LoadStoreInfo;$/;"	t
LoadStoreMap	tools/objtrace/ctxObjtraceRuntime.h	/^typedef std::map<FullID, LoadStoreInfo> LoadStoreMap;$/;"	t
LoadStoreMap	tools/objtrace/objtraceruntime.h	/^typedef std::map<FullID, LoadStoreInfo> LoadStoreMap;$/;"	t
LocIDMapForCallSite	include/corelab/CAMP/ContextTreeBuilder.h	/^	typedef DenseMap<const Instruction *, LocalContextID> LocIDMapForCallSite;\/\/ if key is instrID of indirect call, then value is -1$/;"	t	namespace:corelab
LocIDMapForCallSite	lib/CAMP/ContextTreeBuilder.h	/^	typedef DenseMap<const Instruction *, LocalContextID> LocIDMapForCallSite;\/\/ if key is instrID of indirect call, then value is -1$/;"	t	namespace:corelab
LocIDMapForIndirectCalls	include/corelab/CAMP/ContextTreeBuilder.h	/^	typedef DenseMap<const Instruction *, std::vector<std::pair<Function *, LocalContextID>>> LocIDMapForIndirectCalls;$/;"	t	namespace:corelab
LocIDMapForIndirectCalls	lib/CAMP/ContextTreeBuilder.h	/^	typedef DenseMap<const Instruction *, std::vector<std::pair<Function *, LocalContextID>>> LocIDMapForIndirectCalls;$/;"	t	namespace:corelab
LocIDMapForLoop	include/corelab/CAMP/ContextTreeBuilder.h	/^	typedef std::unordered_map<CntxID, LocalContextID> LocIDMapForLoop; \/\/ CntxID == LoopID;$/;"	t	namespace:corelab
LocIDMapForLoop	lib/CAMP/ContextTreeBuilder.h	/^	typedef std::unordered_map<CntxID, LocalContextID> LocIDMapForLoop; \/\/ CntxID == LoopID;$/;"	t	namespace:corelab
LocalContextID	include/corelab/CAMP/ContextTreeBuilder.h	/^	typedef uint16_t LocalContextID;$/;"	t	namespace:corelab
LocalContextID	lib/CAMP/ContextTreeBuilder.h	/^	typedef uint16_t LocalContextID;$/;"	t	namespace:corelab
LoopEntry	include/corelab/Metadata/Metadata.h	/^	} LoopEntry;$/;"	t	namespace:corelab	typeref:struct:corelab::__anon9
LoopID	include/corelab/CAMP/CAMP.h	/^			typedef CntxID LoopID;$/;"	t	class:corelab::CAMPInstaller
LoopID	include/corelab/CAMP/CampExectime.h	/^			typedef CntxID LoopID;$/;"	t	class:corelab::CAMPExectime
LoopID	include/corelab/CAMP/RegiInterIterDepFinder.h	/^	typedef CntxID LoopID;$/;"	t	namespace:corelab
LoopID	include/corelab/ObjTrace/CtxObjtrace.h	/^			typedef CntxID LoopID;$/;"	t	class:corelab::CtxObjtrace
LoopID	lib/CAMP/CAMP.h	/^			typedef CntxID LoopID;$/;"	t	class:corelab::CAMPInstaller
LoopID	lib/CAMP/CampExectime.h	/^			typedef CntxID LoopID;$/;"	t	class:corelab::CAMPExectime
LoopID	lib/CAMP/RegiInterIterDepFinder.h	/^	typedef CntxID LoopID;$/;"	t	namespace:corelab
LoopID	lib/ObjTrace/CtxObjtrace.h	/^			typedef CntxID LoopID;$/;"	t	class:corelab::CtxObjtrace
LoopIdOf	include/corelab/CAMP/ContextTreeBuilder.h	/^			typedef DenseMap<const Loop *, CntxID > LoopIdOf; \/\/ CntxID == LoopID;$/;"	t	class:corelab::ContextTreeBuilder
LoopIdOf	lib/CAMP/ContextTreeBuilder.h	/^			typedef DenseMap<const Loop *, CntxID > LoopIdOf; \/\/ CntxID == LoopID;$/;"	t	class:corelab::ContextTreeBuilder
LoopInfoOfFunc	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      typedef DenseMap<const Function *, LoopInfo * > LoopInfoOfFunc; $/;"	t	class:corelab::LoopTraverse
LoopInfoOfFunc	include/corelab/CAMP/ContextTreeBuilder.h	/^			typedef DenseMap<const Function *, LoopInfo * > LoopInfoOfFunc; $/;"	t	class:corelab::ContextTreeBuilder
LoopInfoOfFunc	lib/AliasAnalysis/LoopTraverse.hpp	/^      typedef DenseMap<const Function *, LoopInfo * > LoopInfoOfFunc; $/;"	t	class:corelab::LoopTraverse
LoopInfoOfFunc	lib/CAMP/ContextTreeBuilder.h	/^			typedef DenseMap<const Function *, LoopInfo * > LoopInfoOfFunc; $/;"	t	class:corelab::ContextTreeBuilder
LoopNodeTraverse	lib/CAMP/ContextTreeBuilder.cpp	/^bool ContextTreeBuilder::LoopNodeTraverse(ContextTreeNode *loopNode){$/;"	f	class:ContextTreeBuilder
LoopOfCntxID	include/corelab/CAMP/ContextTreeBuilder.h	/^			typedef std::map<CntxID, const Loop *> LoopOfCntxID;\/\/inverse of LoopIdOf$/;"	t	class:corelab::ContextTreeBuilder
LoopOfCntxID	lib/CAMP/ContextTreeBuilder.h	/^			typedef std::map<CntxID, const Loop *> LoopOfCntxID;\/\/inverse of LoopIdOf$/;"	t	class:corelab::ContextTreeBuilder
LoopTraverse	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      LoopTraverse() : ModulePass(ID) {}$/;"	f	class:corelab::LoopTraverse
LoopTraverse	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^  class LoopTraverse : public ModulePass {$/;"	c	namespace:corelab
LoopTraverse	lib/AliasAnalysis/LoopTraverse.hpp	/^      LoopTraverse() : ModulePass(ID) {}$/;"	f	class:corelab::LoopTraverse
LoopTraverse	lib/AliasAnalysis/LoopTraverse.hpp	/^  class LoopTraverse : public ModulePass {$/;"	c	namespace:corelab
MAX_CNTX_LV	include/corelab/CAMP/campCommon.h	18;"	d
MAX_CNTX_LV	lib/CAMP/campCommon.h	18;"	d
MAX_LINE_SIZE	tools/camp/campExecRuntime.cpp	29;"	d	file:
MAX_LINE_SIZE	tools/objtrace/ctxObjtraceRuntime.cpp	19;"	d	file:
MI	include/corelab/Utilities/ProfileInfo.h	/^    ProfileInfoT<MachineFunction, MachineBasicBlock> *MI() {$/;"	f	class:llvm::ProfileInfoT
MIN_CNTX_LV	include/corelab/CAMP/campCommon.h	19;"	d
MIN_CNTX_LV	lib/CAMP/campCommon.h	19;"	d
MachineProfile	include/corelab/Utilities/ProfileInfo.h	/^    ProfileInfoT<MachineFunction, MachineBasicBlock> *MachineProfile;$/;"	m	class:llvm::ProfileInfoT
MachineProfileInfo	include/corelab/Utilities/ProfileInfo.h	/^  typedef ProfileInfoT<MachineFunction, MachineBasicBlock> MachineProfileInfo;$/;"	t	namespace:llvm
Matching	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::unordered_map<IndirectCall, CandidateFunctions> Matching; \/\/ 1:m (one to many matching)$/;"	t	class:corelab::IndirectCallAnal
Matching	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			typedef std::map<IndirectCall, CandidateFunctions> Matching; \/\/ 1:m (one to many matching)$/;"	t	class:corelab::IndirectCallAnal
MetadataNode	include/corelab/Metadata/NamedMetadata.h	/^			typedef struct MetadataNode {$/;"	s	class:corelab::EsperantoNamer
MetadataNode	include/corelab/Metadata/NamedMetadata.h	/^			} MetadataNode;$/;"	t	class:corelab::EsperantoNamer	typeref:struct:corelab::EsperantoNamer::MetadataNode
MissingValue	include/corelab/Utilities/ProfileInfo.h	/^    static const double MissingValue;$/;"	m	class:llvm::ProfileInfoT
N_SHIFT_FOR_ONE_ELEM	tools/camp/ShadowMemory.hpp	26;"	d
N_SHIFT_FOR_ONE_ELEM	tools/campSampling/ShadowMemory.hpp	26;"	d
N_SHIFT_FOR_ONE_ELEM	tools/objtrace/ShadowMemory.hpp	26;"	d
N_SHIFT_FOR_ONE_SIZE_T	tools/camp/ShadowMemory.hpp	27;"	d
N_SHIFT_FOR_ONE_SIZE_T	tools/campSampling/ShadowMemory.hpp	27;"	d
N_SHIFT_FOR_ONE_SIZE_T	tools/objtrace/ShadowMemory.hpp	27;"	d
Namer	include/corelab/Metadata/Metadata.h	/^	class Namer: public ModulePass$/;"	c	namespace:corelab
Namer	lib/Metadata/Namer.cpp	/^	Namer::Namer() : ModulePass(ID) {}$/;"	f	class:corelab::Namer
NonRecursiveFuncList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::unordered_set<const Function *> NonRecursiveFuncList;$/;"	t	class:corelab::RecursiveFuncAnal
NonRecursiveFuncList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::unordered_set<const Function *> NonRecursiveFuncList;$/;"	t	class:corelab::RecursiveFuncAnal
NumLoopCarriedDepMap	include/corelab/CAMP/RegiInterIterDepFinder.h	/^	typedef std::map<LoopID, unsigned> NumLoopCarriedDepMap;\/\/inverse of LoopIdOf$/;"	t	namespace:corelab
NumLoopCarriedDepMap	lib/CAMP/RegiInterIterDepFinder.h	/^	typedef std::map<LoopID, unsigned> NumLoopCarriedDepMap;\/\/inverse of LoopIdOf$/;"	t	namespace:corelab
OESI	include/corelab/Metadata/typedefs.h	/^  typedef OutEdgeSet::const_iterator            OESI;$/;"	t	namespace:corelab
OUT	include/corelab/CAMP/campCommon.h	15;"	d
OUT	lib/CAMP/campCommon.h	15;"	d
ObjTrace	include/corelab/ObjTrace/ObjTrace.h	/^      ObjTrace() : ModulePass(ID) {}$/;"	f	class:corelab::ObjTrace
ObjTrace	include/corelab/ObjTrace/ObjTrace.h	/^  class ObjTrace : public ModulePass {$/;"	c	namespace:corelab
ObjTrace	lib/ObjTrace/ObjTrace.h	/^      ObjTrace() : ModulePass(ID) {}$/;"	f	class:corelab::ObjTrace
ObjTrace	lib/ObjTrace/ObjTrace.h	/^  class ObjTrace : public ModulePass {$/;"	c	namespace:corelab
OutEdge	include/corelab/Metadata/typedefs.h	/^  typedef std::pair<TerminatorInst *, unsigned> OutEdge;$/;"	t	namespace:corelab
OutEdgeList	include/corelab/Metadata/typedefs.h	/^  typedef std::vector<OutEdge>                  OutEdgeList;$/;"	t	namespace:corelab
OutEdgeSet	include/corelab/Metadata/typedefs.h	/^  typedef DenseSet<OutEdge>                     OutEdgeSet;$/;"	t	namespace:corelab
PAGE_SIZE	tools/camp/ShadowMemory.hpp	24;"	d
PAGE_SIZE	tools/campSampling/ShadowMemory.hpp	24;"	d
PAGE_SIZE	tools/objtrace/ShadowMemory.hpp	24;"	d
Path	include/corelab/Utilities/ProfileInfo.h	/^    typedef std::map<const BType*, const BType*> Path;$/;"	t	class:llvm::ProfileInfoT
ProfileInfo	include/corelab/Utilities/ProfileInfo.h	/^  typedef ProfileInfoT<Function, BasicBlock> ProfileInfo;$/;"	t	namespace:llvm
ProfileInfoT	include/corelab/Utilities/ProfileInfo.h	/^  class ProfileInfoT {$/;"	c	namespace:llvm
RANDOM_SAMPLING_CYCLE	tools/campSampling/campRuntime.cpp	28;"	d	file:
RecursiveCallList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::vector<const Instruction *> RecursiveCallList;$/;"	t	class:corelab::RecursiveFuncAnal
RecursiveCallList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::vector<const Instruction *> RecursiveCallList;$/;"	t	class:corelab::RecursiveFuncAnal
RecursiveFunCallList	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::vector<const Instruction *> RecursiveFunCallList;$/;"	t	class:corelab::LoopTraverse
RecursiveFunCallList	include/corelab/CAMP/ContextTreeBuilder.h	/^			typedef std::vector<const Instruction *> RecursiveFunCallList;$/;"	t	class:corelab::ContextTreeBuilder
RecursiveFunCallList	lib/AliasAnalysis/LoopTraverse.hpp	/^      typedef std::vector<const Instruction *> RecursiveFunCallList;$/;"	t	class:corelab::LoopTraverse
RecursiveFunCallList	lib/CAMP/ContextTreeBuilder.h	/^			typedef std::vector<const Instruction *> RecursiveFunCallList;$/;"	t	class:corelab::ContextTreeBuilder
RecursiveFuncAnal	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveFuncAnal() : ModulePass(ID) {}$/;"	f	class:corelab::RecursiveFuncAnal
RecursiveFuncAnal	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^  class RecursiveFuncAnal : public ModulePass {$/;"	c	namespace:corelab
RecursiveFuncAnal	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveFuncAnal() : ModulePass(ID) {}$/;"	f	class:corelab::RecursiveFuncAnal
RecursiveFuncAnal	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^  class RecursiveFuncAnal : public ModulePass {$/;"	c	namespace:corelab
RecursiveFuncList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::unordered_set<const Function *> RecursiveFuncList;$/;"	t	class:corelab::RecursiveFuncAnal
RecursiveFuncList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef std::unordered_set<const Function *> RecursiveFuncList;$/;"	t	class:corelab::RecursiveFuncAnal
RegiInterIterDepFinder	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			RegiInterIterDepFinder() : ModulePass(ID) {}$/;"	f	class:corelab::RegiInterIterDepFinder
RegiInterIterDepFinder	include/corelab/CAMP/RegiInterIterDepFinder.h	/^	class RegiInterIterDepFinder : public ModulePass$/;"	c	namespace:corelab
RegiInterIterDepFinder	lib/CAMP/RegiInterIterDepFinder.h	/^			RegiInterIterDepFinder() : ModulePass(ID) {}$/;"	f	class:corelab::RegiInterIterDepFinder
RegiInterIterDepFinder	lib/CAMP/RegiInterIterDepFinder.h	/^	class RegiInterIterDepFinder : public ModulePass$/;"	c	namespace:corelab
SAMPLING_THRESHOLD	tools/camp/campRuntime.h	42;"	d
SAMPLING_THRESHOLD	tools/campSampling/campRuntime.h	42;"	d
SCCList	include/corelab/Metadata/typedefs.h	/^  typedef std::list<SCCNode *> SCCList;$/;"	t	namespace:corelab
SCCSet	include/corelab/Metadata/typedefs.h	/^  typedef DenseSet<SCCNode*> SCCSet;$/;"	t	namespace:corelab
SET	include/corelab/AliasAnalysis/TestClient.hpp	20;"	d
SHADOW_MEM_H	tools/camp/ShadowMemory.hpp	2;"	d
SHADOW_MEM_H	tools/campSampling/ShadowMemory.hpp	2;"	d
SHADOW_MEM_H	tools/objtrace/ShadowMemory.hpp	2;"	d
SHADOW_XMASK1	tools/camp/ShadowMemory.hpp	22;"	d
SHADOW_XMASK1	tools/campSampling/ShadowMemory.hpp	22;"	d
SHADOW_XMASK1	tools/objtrace/ShadowMemory.hpp	22;"	d
SHADOW_XMASK2	tools/camp/ShadowMemory.hpp	23;"	d
SHADOW_XMASK2	tools/campSampling/ShadowMemory.hpp	23;"	d
SHADOW_XMASK2	tools/objtrace/ShadowMemory.hpp	23;"	d
SHARED_LIBRARY	lib/AliasAnalysis/Makefile	/^SHARED_LIBRARY=1$/;"	m
SHARED_LIBRARY	lib/Utilities/Makefile	/^SHARED_LIBRARY=1$/;"	m
SHARED_LIBRARY	tools/camp/Makefile	/^SHARED_LIBRARY=1$/;"	m
SHARED_LIBRARY	tools/campSampling/Makefile	/^SHARED_LIBRARY=1$/;"	m
SHARED_LIBRARY	tools/objtrace/Makefile	/^SHARED_LIBRARY=1$/;"	m
SIZE_ELEM	tools/camp/ShadowMemory.hpp	25;"	d
SIZE_ELEM	tools/campSampling/ShadowMemory.hpp	25;"	d
SIZE_ELEM	tools/objtrace/ShadowMemory.hpp	25;"	d
STANDARD_LIBRARY_FUNCTIONS_NAME_H	include/corelab/Utilities/StandardLibraryFunctionsName.h	2;"	d
STK_CNTXID_SIZE	include/corelab/CAMP/campCommon.h	22;"	d
STK_CNTXID_SIZE	lib/CAMP/campCommon.h	22;"	d
STK_ITERCNT_SIZE	include/corelab/CAMP/campCommon.h	23;"	d
STK_ITERCNT_SIZE	lib/CAMP/campCommon.h	23;"	d
STK_MAX_SIZE	tools/camp/campRuntime.h	7;"	d
STK_MAX_SIZE	tools/campSampling/campRuntime.h	7;"	d
STK_MAX_SIZE	tools/objtrace/ctxObjtraceRuntime.h	8;"	d
STK_MAX_SIZE_DIV_BY_8	tools/camp/campRuntime.h	8;"	d
STK_MAX_SIZE_DIV_BY_8	tools/campSampling/campRuntime.h	8;"	d
STK_MAX_SIZE_DIV_BY_8	tools/objtrace/ctxObjtraceRuntime.h	9;"	d
STORE	include/corelab/CAMP/campCommon.h	/^			STORE = 0x01$/;"	e	enum:corelab::CAMP::__anon5
STORE	lib/CAMP/campCommon.h	/^			STORE = 0x01$/;"	e	enum:corelab::CAMP::__anon2
SegFaultHandler	tools/camp/ShadowMemory.hpp	/^		static void SegFaultHandler (int sig, siginfo_t* si, void* unused){$/;"	f	class:ShadowMemoryManager
SegFaultHandler	tools/campSampling/ShadowMemory.hpp	/^		static void SegFaultHandler (int sig, siginfo_t* si, void* unused){$/;"	f	class:ShadowMemoryManager
SegFaultHandler	tools/objtrace/ShadowMemory.hpp	/^		static void SegFaultHandler (int sig, siginfo_t* si, void* unused){$/;"	f	class:ShadowMemoryManager
Set	include/corelab/CAMP/campTimer.h	/^			Set ()$/;"	f	namespace:corelab::CAMP::Timer
ShadowMemoryManager	tools/camp/ShadowMemory.hpp	/^class ShadowMemoryManager{$/;"	c
ShadowMemoryManager	tools/campSampling/ShadowMemory.hpp	/^class ShadowMemoryManager{$/;"	c
ShadowMemoryManager	tools/objtrace/ShadowMemory.hpp	/^class ShadowMemoryManager{$/;"	c
StoreHistoryElem	tools/camp/campRuntime.h	/^typedef struct StoreHistoryElem {$/;"	s
StoreHistoryElem	tools/camp/campRuntime.h	/^} StoreHistoryElem;$/;"	t	typeref:struct:StoreHistoryElem
StoreHistoryElem	tools/campSampling/campRuntime.h	/^typedef struct StoreHistoryElem {$/;"	s
StoreHistoryElem	tools/campSampling/campRuntime.h	/^} StoreHistoryElem;$/;"	t	typeref:struct:StoreHistoryElem
TRED_BINARY	lib/Utilities/Makefile	/^TRED_BINARY=${shell which tred || which cat }$/;"	m
TREE_MAX_DEPTH_LIMIT	include/corelab/CAMP/ContextTreeBuilder.h	19;"	d
TREE_MAX_DEPTH_LIMIT	lib/CAMP/ContextTreeBuilder.h	19;"	d
TestAAClient	include/corelab/AliasAnalysis/TestClient.hpp	/^			TestAAClient() : ModulePass(ID) {}$/;"	f	class:corelab::TestAAClient
TestAAClient	include/corelab/AliasAnalysis/TestClient.hpp	/^	class TestAAClient : public ModulePass$/;"	c	namespace:corelab
ThreadNo	include/corelab/Metadata/typedefs.h	/^  typedef unsigned                              ThreadNo;$/;"	t	namespace:corelab
Timer	include/corelab/CAMP/campTimer.h	/^		namespace Timer$/;"	n	namespace:corelab::CAMP
UNIMPLEMENTED	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	16;"	d
UNIMPLEMENTED	include/corelab/AliasAnalysis/LoopTraverse.hpp	15;"	d
UNIMPLEMENTED	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	15;"	d
UNIMPLEMENTED	include/corelab/AliasAnalysis/TestClient.hpp	21;"	d
UNIMPLEMENTED	lib/AliasAnalysis/IndirectCallAnal.hpp	16;"	d
UNIMPLEMENTED	lib/AliasAnalysis/LoopTraverse.hpp	15;"	d
UNIMPLEMENTED	lib/AliasAnalysis/RecursiveFuncAnal.hpp	15;"	d
UNUSED	include/corelab/CAMP/campCommon.h	16;"	d
UNUSED	lib/CAMP/campCommon.h	16;"	d
UniqueContextID	include/corelab/CAMP/ContextTreeBuilder.h	/^	typedef uint32_t UniqueContextID;$/;"	t	namespace:corelab
UniqueContextID	lib/CAMP/ContextTreeBuilder.h	/^	typedef uint32_t UniqueContextID;$/;"	t	namespace:corelab
VI	include/corelab/Metadata/typedefs.h	/^  typedef ValueSet::const_iterator              VI;$/;"	t	namespace:corelab
VLI	include/corelab/Metadata/typedefs.h	/^  typedef std::vector<Value*>::const_iterator   VLI;$/;"	t	namespace:corelab
ValueList	include/corelab/Metadata/typedefs.h	/^  typedef std::vector<Value*>                   ValueList;$/;"	t	namespace:corelab
ValueLists	include/corelab/Metadata/typedefs.h	/^  typedef std::vector<std::vector<Value*> >     ValueLists;$/;"	t	namespace:corelab
ValueSet	include/corelab/Metadata/typedefs.h	/^  typedef DenseSet<llvm::Value *>               ValueSet;$/;"	t	namespace:corelab
ValueSets	include/corelab/Metadata/typedefs.h	/^  typedef std::vector<ValueSet>                 ValueSets;$/;"	t	namespace:corelab
Vertex	include/corelab/Metadata/typedefs.h	/^  typedef std::pair<unsigned,SCCNode*> Vertex;$/;"	t	namespace:corelab
VertexList	include/corelab/Metadata/typedefs.h	/^  typedef std::vector<Vertex> VertexList;$/;"	t	namespace:corelab
Weight	include/corelab/Metadata/typedefs.h	/^  typedef double Weight;$/;"	t	namespace:corelab
Weights	include/corelab/Metadata/typedefs.h	/^  typedef DenseMap<Edge, Weight> Weights;$/;"	t	namespace:corelab
X86	include/corelab/Metadata/NamedMetadata.h	/^				X86 = 0,$/;"	e	enum:corelab::EsperantoNamer::EsperantoPlatform
X86TIMER_HPP	tools/camp/x86timer.hpp	2;"	d
X86TIMER_HPP	tools/objtrace/x86timer.hpp	2;"	d
_X86_	tools/camp/campExecRuntime.cpp	18;"	d	file:
__FIND_FUNCTION_EXIT_BB_HPP	include/corelab/Utilities/FindFunctionExitBB.hpp	2;"	d
__GNUC__	tools/camp/x86timer.hpp	6;"	d
__GNUC__	tools/objtrace/x86timer.hpp	6;"	d
__sync_synchronize	configure	/^        __sync_synchronize();$/;"	f
_ascii	configure	/^ _ascii (); _ebcdic ();$/;"	f
_before	include/corelab/Utilities/InstInsertPt.h	/^      bool                                    _before;$/;"	m	class:corelab::InstInsertPt
addCallSiteInfo	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTree::addCallSiteInfo(const Instruction *invokeOrCallInst_, Function *f, LocIDMapForCallSite &locIdOf_callSite){$/;"	f	class:ContextTree
addChild	include/corelab/CAMP/ContextTreeBuilder.h	/^			void addChild(ContextTreeNode *c){$/;"	f	class:corelab::ContextTree
addChild	lib/CAMP/ContextTreeBuilder.h	/^			void addChild(ContextTreeNode *c){$/;"	f	class:corelab::ContextTree
addLoopInfo	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTree::addLoopInfo(Loop *l, CntxID cntxID_, LocIDMapForLoop &locIdOf_loop){$/;"	f	class:ContextTree
addMetadata	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::addMetadata() {$/;"	f	class:corelab::EsperantoNamer
addProfilingCodeForCallSite	lib/CAMP/CAMP.cpp	/^void CAMPInstaller::addProfilingCodeForCallSite(Instruction *invokeOrCallInst, Value *locIDVal){$/;"	f	class:CAMPInstaller
addProfilingCodeForCallSite	lib/CAMP/CampExectime.cpp	/^void CAMPExectime::addProfilingCodeForCallSite(Instruction *invokeOrCallInst, Value *locIDVal){$/;"	f	class:CAMPExectime
addProfilingCodeForCallSite	lib/ObjTrace/CtxObjtrace.cpp	/^void CtxObjtrace::addProfilingCodeForCallSite(Instruction *invokeOrCallInst, Value *locIDVal){$/;"	f	class:CtxObjtrace
addProfilingCodeForLoop	lib/CAMP/CAMP.cpp	/^void CAMPInstaller::addProfilingCodeForLoop(Loop *L, Value *locIDVal){$/;"	f	class:CAMPInstaller
addProfilingCodeForLoop	lib/CAMP/CampExectime.cpp	/^void CAMPExectime::addProfilingCodeForLoop(Loop *L, Value *locIDVal){$/;"	f	class:CAMPExectime
addProfilingCodeForLoop	lib/ObjTrace/CtxObjtrace.cpp	/^void CtxObjtrace::addProfilingCodeForLoop(Loop *L, Value *locIDVal){$/;"	f	class:CtxObjtrace
addTargetComparisonCodeForIndCall	lib/CAMP/CAMP.cpp	/^Value *CAMPInstaller::addTargetComparisonCodeForIndCall(const Instruction *invokeOrCallInst, std::vector<std::pair<Function *, LocalContextID>> &targetLocIDs){$/;"	f	class:CAMPInstaller
addTargetComparisonCodeForIndCall	lib/CAMP/CampExectime.cpp	/^Value *CAMPExectime::addTargetComparisonCodeForIndCall(const Instruction *invokeOrCallInst, std::vector<std::pair<Function *, LocalContextID>> &targetLocIDs){$/;"	f	class:CAMPExectime
addTargetComparisonCodeForIndCall	lib/ObjTrace/CtxObjtrace.cpp	/^Value *CtxObjtrace::addTargetComparisonCodeForIndCall(const Instruction *invokeOrCallInst, std::vector<std::pair<Function *, LocalContextID>> &targetLocIDs){$/;"	f	class:CtxObjtrace
allocIdMap	tools/objtrace/objtraceruntime.cpp	/^AllocMap *allocIdMap;$/;"	v
alreadyChecked	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<Instruction*> alreadyChecked;$/;"	m	class:corelab::EsperantoNamer
appendToConstructorArray	lib/Utilities/GlobalCtors.cpp	/^  static void appendToConstructorArray( Function *f, const std::string &name, const unsigned int priority = 65535, const bool ascending = true) {$/;"	f	namespace:corelab
armtimer	tools/camp/armtimer.hpp	/^class armtimer{$/;"	c
as_func_failure	configure	/^as_func_failure () {$/;"	f
as_func_ret_failure	configure	/^as_func_ret_failure () {$/;"	f
as_func_ret_success	configure	/^as_func_ret_success () {$/;"	f
as_func_success	configure	/^as_func_success () {$/;"	f
assignerUcID	include/corelab/CAMP/ContextTreeBuilder.h	/^			UniqueContextID assignerUcID;$/;"	m	class:corelab::ContextTreeBuilder
assignerUcID	lib/CAMP/ContextTreeBuilder.h	/^			UniqueContextID assignerUcID;$/;"	m	class:corelab::ContextTreeBuilder
base	include/corelab/CAMP/campTimer.h	/^			static double base;$/;"	m	namespace:corelab::CAMP::Timer
basicBlockCount	include/corelab/Metadata/Metadata.h	/^			uint16_t basicBlockCount;$/;"	m	class:corelab::Namer
basicBlockId	include/corelab/Metadata/Metadata.h	/^		uint16_t basicBlockId;$/;"	m	struct:corelab::__anon8
basicBlockId	include/corelab/Metadata/Metadata.h	/^		uint16_t basicBlockId;$/;"	m	struct:corelab::__anon9
bbTripCountMap_t	include/corelab/Metadata/typedefs.h	/^  typedef DenseMap<BasicBlock*, unsigned int>   bbTripCountMap_t;$/;"	t	namespace:corelab
before	include/corelab/Utilities/InstInsertPt.h	/^      bool before() const {$/;"	f	class:corelab::InstInsertPt
begin	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      const_iterator          begin() const { return recFuncList.begin(); }$/;"	f	class:corelab::RecursiveFuncAnal
begin	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      iterator                begin()       { return recFuncList.begin(); }$/;"	f	class:corelab::RecursiveFuncAnal
begin	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      const_iterator          begin() const { return recFuncList.begin(); }$/;"	f	class:corelab::RecursiveFuncAnal
begin	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      iterator                begin()       { return recFuncList.begin(); }$/;"	f	class:corelab::RecursiveFuncAnal
buildCalledFunctionList	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::buildCalledFunctionList(){$/;"	f	class:corelab::EsperantoNamer
buildClassNameList	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::buildClassNameList(){$/;"	f	class:corelab::EsperantoNamer
buildRemoteCallFunctionTable	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::buildRemoteCallFunctionTable(){$/;"	f	class:corelab::EsperantoNamer
buildTypeBasedMatching	lib/AliasAnalysis/IndirectCallAnal.cpp	/^void IndirectCallAnal::buildTypeBasedMatching(){$/;"	f	class:IndirectCallAnal
callAfterMain	lib/Utilities/GlobalCtors.cpp	/^  void callAfterMain( Function *f, const unsigned int priority ) {$/;"	f	namespace:corelab
callBeforeMain	lib/Utilities/GlobalCtors.cpp	/^  void callBeforeMain( Function *f, const unsigned int priority) {$/;"	f	namespace:corelab
callCntOf	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			CallCountOf callCntOf; \/\/for Statistics, # of indirect call count for eeach target Candidate functions.	$/;"	m	class:corelab::IndirectCallAnal
callCntOf	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			CallCountOf callCntOf; \/\/for Statistics, # of indirect call count for eeach target Candidate functions.	$/;"	m	class:corelab::IndirectCallAnal
callCount	include/corelab/Metadata/Metadata.h	/^			uint16_t callCount;$/;"	m	class:corelab::Namer
callHistory	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      CallStack callHistory; \/\/mutually recursive functions may be represented as one recursive function$/;"	m	class:corelab::RecursiveFuncAnal
callHistory	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      CallStack callHistory; \/\/mutually recursive functions may be represented as one recursive function$/;"	m	class:corelab::RecursiveFuncAnal
callMap	include/corelab/Metadata/NamedMetadata.h	/^			std::map<CallInst*, DeviceEntry*> callMap;$/;"	m	class:corelab::EsperantoNamer
calledFunctionList	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<Function*> calledFunctionList;$/;"	m	class:corelab::EsperantoNamer
callingFunctionId	include/corelab/Metadata/Metadata.h	/^		uint16_t callingFunctionId;$/;"	m	struct:corelab::__anon8
callsWithNoTarget	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      std::vector<IndirectCall> callsWithNoTarget;$/;"	m	class:corelab::RecursiveFuncAnal
callsWithNoTarget	include/corelab/CAMP/ContextTreeBuilder.h	/^			std::vector<IndirectCall> callsWithNoTarget;$/;"	m	class:corelab::ContextTreeBuilder
callsWithNoTarget	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      std::vector<IndirectCall> callsWithNoTarget;$/;"	m	class:corelab::RecursiveFuncAnal
callsWithNoTarget	lib/CAMP/ContextTreeBuilder.h	/^			std::vector<IndirectCall> callsWithNoTarget;$/;"	m	class:corelab::ContextTreeBuilder
campCallSiteBegin	include/corelab/CAMP/CAMP.h	/^			Constant *campCallSiteBegin;$/;"	m	class:corelab::CAMPInstaller
campCallSiteBegin	lib/CAMP/CAMP.h	/^			Constant *campCallSiteBegin;$/;"	m	class:corelab::CAMPInstaller
campCallSiteBegin	tools/camp/campRuntime.cpp	/^void campCallSiteBegin (CntxID cntxID) {$/;"	f
campCallSiteBegin	tools/campSampling/campRuntime.cpp	/^void campCallSiteBegin (CntxID cntxID) {$/;"	f
campCallSiteEnd	include/corelab/CAMP/CAMP.h	/^			Constant *campCallSiteEnd;$/;"	m	class:corelab::CAMPInstaller
campCallSiteEnd	lib/CAMP/CAMP.h	/^			Constant *campCallSiteEnd;$/;"	m	class:corelab::CAMPInstaller
campCallSiteEnd	tools/camp/campRuntime.cpp	/^void campCallSiteEnd  (CntxID cntxID) {$/;"	f
campCallSiteEnd	tools/campSampling/campRuntime.cpp	/^void campCallSiteEnd  (CntxID cntxID) {$/;"	f
campCalloc	include/corelab/CAMP/CAMP.h	/^			Constant *campCalloc;$/;"	m	class:corelab::CAMPInstaller
campCalloc	lib/CAMP/CAMP.h	/^			Constant *campCalloc;$/;"	m	class:corelab::CAMPInstaller
campCalloc	tools/camp/campRuntime.cpp	/^campCalloc (size_t size, size_t num){$/;"	f
campCalloc	tools/campSampling/campRuntime.cpp	/^campCalloc (size_t size, size_t num){$/;"	f
campDisableCtxtChange	include/corelab/CAMP/CAMP.h	/^			Constant *campDisableCtxtChange;$/;"	m	class:corelab::CAMPInstaller
campDisableCtxtChange	lib/CAMP/CAMP.h	/^			Constant *campDisableCtxtChange;$/;"	m	class:corelab::CAMPInstaller
campDisableCtxtChange	tools/camp/campRuntime.cpp	/^extern "C" void campDisableCtxtChange(){$/;"	f
campDisableCtxtChange	tools/campSampling/campRuntime.cpp	/^extern "C" void campDisableCtxtChange(){$/;"	f
campEnableCtxtChange	include/corelab/CAMP/CAMP.h	/^			Constant *campEnableCtxtChange;$/;"	m	class:corelab::CAMPInstaller
campEnableCtxtChange	lib/CAMP/CAMP.h	/^			Constant *campEnableCtxtChange;$/;"	m	class:corelab::CAMPInstaller
campEnableCtxtChange	tools/camp/campRuntime.cpp	/^extern "C" void campEnableCtxtChange(){$/;"	f
campEnableCtxtChange	tools/campSampling/campRuntime.cpp	/^extern "C" void campEnableCtxtChange(){$/;"	f
campExecCallSiteBegin	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecCallSiteBegin;$/;"	m	class:corelab::CAMPExectime
campExecCallSiteBegin	lib/CAMP/CampExectime.h	/^			Constant *campExecCallSiteBegin;$/;"	m	class:corelab::CAMPExectime
campExecCallSiteBegin	tools/camp/campExecRuntime.cpp	/^void campExecCallSiteBegin (CntxID cntxID) {$/;"	f
campExecCallSiteEnd	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecCallSiteEnd;$/;"	m	class:corelab::CAMPExectime
campExecCallSiteEnd	lib/CAMP/CampExectime.h	/^			Constant *campExecCallSiteEnd;$/;"	m	class:corelab::CAMPExectime
campExecCallSiteEnd	tools/camp/campExecRuntime.cpp	/^void campExecCallSiteEnd  (CntxID cntxID) {$/;"	f
campExecDisableCtxtChange	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecDisableCtxtChange;$/;"	m	class:corelab::CAMPExectime
campExecDisableCtxtChange	lib/CAMP/CampExectime.h	/^			Constant *campExecDisableCtxtChange;$/;"	m	class:corelab::CAMPExectime
campExecDisableCtxtChange	tools/camp/campExecRuntime.cpp	/^extern "C" void campExecDisableCtxtChange(){$/;"	f
campExecEnableCtxtChange	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecEnableCtxtChange;$/;"	m	class:corelab::CAMPExectime
campExecEnableCtxtChange	lib/CAMP/CampExectime.h	/^			Constant *campExecEnableCtxtChange;$/;"	m	class:corelab::CAMPExectime
campExecEnableCtxtChange	tools/camp/campExecRuntime.cpp	/^extern "C" void campExecEnableCtxtChange(){$/;"	f
campExecFinalize	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecFinalize;$/;"	m	class:corelab::CAMPExectime
campExecFinalize	lib/CAMP/CampExectime.h	/^			Constant *campExecFinalize;$/;"	m	class:corelab::CAMPExectime
campExecFinalize	tools/camp/campExecRuntime.cpp	/^void campExecFinalize (bool removeLoop) {	\/\/ edit later$/;"	f
campExecInitialize	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecInitialize;$/;"	m	class:corelab::CAMPExectime
campExecInitialize	lib/CAMP/CampExectime.h	/^			Constant *campExecInitialize;$/;"	m	class:corelab::CAMPExectime
campExecInitialize	tools/camp/campExecRuntime.cpp	/^void campExecInitialize (size_t ldrCnt, size_t strCnt, size_t callCnt, size_t loopCnt, size_t maxLoopDepth) {$/;"	f
campExecLoopBegin	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecLoopBegin;$/;"	m	class:corelab::CAMPExectime
campExecLoopBegin	lib/CAMP/CampExectime.h	/^			Constant *campExecLoopBegin;$/;"	m	class:corelab::CAMPExectime
campExecLoopBegin	tools/camp/campExecRuntime.cpp	/^void campExecLoopBegin (CntxID cntxID) { \/\/arg is LocId$/;"	f
campExecLoopEnd	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecLoopEnd;$/;"	m	class:corelab::CAMPExectime
campExecLoopEnd	lib/CAMP/CampExectime.h	/^			Constant *campExecLoopEnd;$/;"	m	class:corelab::CAMPExectime
campExecLoopEnd	tools/camp/campExecRuntime.cpp	/^void campExecLoopEnd (CntxID cntxID) {$/;"	f
campExecLoopNext	include/corelab/CAMP/CampExectime.h	/^			Constant *campExecLoopNext;$/;"	m	class:corelab::CAMPExectime
campExecLoopNext	lib/CAMP/CampExectime.h	/^			Constant *campExecLoopNext;$/;"	m	class:corelab::CAMPExectime
campExecLoopNext	tools/camp/campExecRuntime.cpp	/^void campExecLoopNext () {$/;"	f
campFinalize	include/corelab/CAMP/CAMP.h	/^			Constant *campFinalize;$/;"	m	class:corelab::CAMPInstaller
campFinalize	include/corelab/CAMP/CampPlain.h	/^			Constant *campFinalize;$/;"	m	class:corelab::CAMPPlain
campFinalize	lib/CAMP/CAMP.h	/^			Constant *campFinalize;$/;"	m	class:corelab::CAMPInstaller
campFinalize	lib/CAMP/CampPlain.h	/^			Constant *campFinalize;$/;"	m	class:corelab::CAMPPlain
campFinalize	tools/camp/campRuntime.cpp	/^void campFinalize () {$/;"	f
campFinalize	tools/campSampling/campRuntime.cpp	/^void campFinalize () {$/;"	f
campFree	include/corelab/CAMP/CAMP.h	/^			Constant *campFree;$/;"	m	class:corelab::CAMPInstaller
campFree	lib/CAMP/CAMP.h	/^			Constant *campFree;$/;"	m	class:corelab::CAMPInstaller
campFree	tools/camp/campRuntime.cpp	/^campFree (void* addr){$/;"	f
campFree	tools/campSampling/campRuntime.cpp	/^campFree (void* addr){$/;"	f
campID	tools/camp/campRuntime.h	/^	CampID campID;$/;"	m	struct:StoreHistoryElem
campID	tools/campSampling/campRuntime.h	/^	CampID campID;$/;"	m	struct:StoreHistoryElem
campInitialize	include/corelab/CAMP/CAMP.h	/^			Constant *campInitialize;$/;"	m	class:corelab::CAMPInstaller
campInitialize	include/corelab/CAMP/CampPlain.h	/^			Constant *campInitialize;$/;"	m	class:corelab::CAMPPlain
campInitialize	lib/CAMP/CAMP.h	/^			Constant *campInitialize;$/;"	m	class:corelab::CAMPInstaller
campInitialize	lib/CAMP/CampPlain.h	/^			Constant *campInitialize;$/;"	m	class:corelab::CAMPPlain
campInitialize	tools/camp/campRuntime.cpp	/^void campInitialize (size_t ldrCnt, size_t strCnt, size_t callCnt, size_t loopCnt, size_t maxLoopDepth) {$/;"	f
campInitialize	tools/campSampling/campRuntime.cpp	/^void campInitialize (size_t ldrCnt, size_t strCnt, size_t callCnt, size_t loopCnt, size_t maxLoopDepth) {$/;"	f
campLoadInstr	include/corelab/CAMP/CAMP.h	/^			Constant *campLoadInstr;$/;"	m	class:corelab::CAMPInstaller
campLoadInstr	lib/CAMP/CAMP.h	/^			Constant *campLoadInstr;$/;"	m	class:corelab::CAMPInstaller
campLoadInstr	tools/camp/campRuntime.cpp	/^void campLoadInstr (void* addr, InstrID instrID) {$/;"	f
campLoadInstr	tools/campSampling/campRuntime.cpp	/^void campLoadInstr (void* addr, InstrID instrID) {$/;"	f
campLoopBegin	include/corelab/CAMP/CAMP.h	/^			Constant *campLoopBegin;$/;"	m	class:corelab::CAMPInstaller
campLoopBegin	lib/CAMP/CAMP.h	/^			Constant *campLoopBegin;$/;"	m	class:corelab::CAMPInstaller
campLoopBegin	tools/camp/campRuntime.cpp	/^void campLoopBegin (CntxID cntxID) {$/;"	f
campLoopBegin	tools/campSampling/campRuntime.cpp	/^void campLoopBegin (CntxID cntxID) {$/;"	f
campLoopEnd	include/corelab/CAMP/CAMP.h	/^			Constant *campLoopEnd;$/;"	m	class:corelab::CAMPInstaller
campLoopEnd	lib/CAMP/CAMP.h	/^			Constant *campLoopEnd;$/;"	m	class:corelab::CAMPInstaller
campLoopEnd	tools/camp/campRuntime.cpp	/^void campLoopEnd (CntxID cntxID) {$/;"	f
campLoopEnd	tools/campSampling/campRuntime.cpp	/^void campLoopEnd (CntxID cntxID) {$/;"	f
campLoopNext	include/corelab/CAMP/CAMP.h	/^			Constant *campLoopNext;$/;"	m	class:corelab::CAMPInstaller
campLoopNext	lib/CAMP/CAMP.h	/^			Constant *campLoopNext;$/;"	m	class:corelab::CAMPInstaller
campLoopNext	tools/camp/campRuntime.cpp	/^void campLoopNext () {$/;"	f
campLoopNext	tools/campSampling/campRuntime.cpp	/^void campLoopNext () {$/;"	f
campMalloc	include/corelab/CAMP/CAMP.h	/^			Constant *campMalloc;$/;"	m	class:corelab::CAMPInstaller
campMalloc	lib/CAMP/CAMP.h	/^			Constant *campMalloc;$/;"	m	class:corelab::CAMPInstaller
campMalloc	tools/camp/campRuntime.cpp	/^campMalloc (size_t size){$/;"	f
campMalloc	tools/campSampling/campRuntime.cpp	/^campMalloc (size_t size){$/;"	f
campRealloc	include/corelab/CAMP/CAMP.h	/^			Constant *campRealloc;$/;"	m	class:corelab::CAMPInstaller
campRealloc	lib/CAMP/CAMP.h	/^			Constant *campRealloc;$/;"	m	class:corelab::CAMPInstaller
campRealloc	tools/camp/campRuntime.cpp	/^campRealloc (void* addr, size_t size){$/;"	f
campRealloc	tools/campSampling/campRuntime.cpp	/^campRealloc (void* addr, size_t size){$/;"	f
campStoreInstr	include/corelab/CAMP/CAMP.h	/^			Constant *campStoreInstr;$/;"	m	class:corelab::CAMPInstaller
campStoreInstr	lib/CAMP/CAMP.h	/^			Constant *campStoreInstr;$/;"	m	class:corelab::CAMPInstaller
campStoreInstr	tools/camp/campRuntime.cpp	/^void campStoreInstr (void* addr, InstrID instrID) {$/;"	f
campStoreInstr	tools/campSampling/campRuntime.cpp	/^void campStoreInstr (void* addr, InstrID instrID) {$/;"	f
castTo	lib/CAMP/CAMP.cpp	/^Value* CAMPInstaller::castTo(Value* from, Value* to, InstInsertPt &out, const DataLayout *dl)$/;"	f	class:CAMPInstaller
castTo	lib/ObjTrace/CtxObjtrace.cpp	/^Value* CtxObjtrace::castTo(Value* from, Value* to, InstInsertPt &out, const DataLayout *dl)$/;"	f	class:CtxObjtrace
castTo	lib/ObjTrace/ObjTrace.cpp	/^Value* ObjTrace::castTo(Value* from, Value* to, InstInsertPt &out, const DataLayout *dl)$/;"	f	class:ObjTrace
checkCallHistoryAndMark	lib/AliasAnalysis/RecursiveFuncAnal.cpp	/^bool RecursiveFuncAnal::checkCallHistoryAndMark(Instruction *invokeOrCallInst, Function *callee){$/;"	f	class:RecursiveFuncAnal
checkCallInsts	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::checkCallInsts(Function* F, EsperantoNamer::DeviceEntry* dev) {	$/;"	f	class:corelab::EsperantoNamer
checkFunction	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::checkFunction() {$/;"	f	class:corelab::EsperantoNamer
checkUseDefChains	lib/Metadata/EsperantoNamer.cpp	/^	bool EsperantoNamer::checkUseDefChains() {$/;"	f	class:corelab::EsperantoNamer
checkedValueInFunction	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<Value*> checkedValueInFunction;$/;"	m	class:corelab::EsperantoNamer
children	include/corelab/CAMP/ContextTreeBuilder.h	/^			std::vector<ContextTree *> children;$/;"	m	class:corelab::ContextTree
children	lib/CAMP/ContextTreeBuilder.h	/^			std::vector<ContextTree *> children;$/;"	m	class:corelab::ContextTree
classNameList	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<std::string> classNameList;$/;"	m	class:corelab::EsperantoNamer
clocks_per_nanosecond	tools/camp/x86timer.hpp	/^double clocks_per_nanosecond;$/;"	m	class:x86timer
clocks_per_nanosecond	tools/objtrace/x86timer.hpp	/^double clocks_per_nanosecond;$/;"	m	class:x86timer
cntxID	include/corelab/CAMP/ContextTreeBuilder.h	/^			CntxID cntxID;	\/\/for Loop$/;"	m	class:corelab::ContextTree
cntxID	lib/CAMP/ContextTreeBuilder.h	/^			CntxID cntxID;	\/\/for Loop$/;"	m	class:corelab::ContextTree
collectAllIndirectCalls	lib/AliasAnalysis/IndirectCallAnal.cpp	/^void IndirectCallAnal::collectAllIndirectCalls(){$/;"	f	class:IndirectCallAnal
compname	include/corelab/Metadata/NamedMetadata.h	/^				char compname[256];$/;"	m	struct:corelab::EsperantoNamer::FunctionTableEntry
comptype	include/corelab/Metadata/NamedMetadata.h	/^				char comptype[256];$/;"	m	struct:corelab::EsperantoNamer::FunctionTableEntry
const_iterator	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef RecursiveFuncList::const_iterator const_iterator;$/;"	t	class:corelab::RecursiveFuncAnal
const_iterator	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef RecursiveFuncList::const_iterator const_iterator;$/;"	t	class:corelab::RecursiveFuncAnal
const_reccall_iterator	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef RecursiveCallList::const_iterator const_reccall_iterator;$/;"	t	class:corelab::RecursiveFuncAnal
const_reccall_iterator	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef RecursiveCallList::const_iterator const_reccall_iterator;$/;"	t	class:corelab::RecursiveFuncAnal
contextCount	include/corelab/Metadata/Metadata.h	/^			uint16_t contextCount;$/;"	m	class:corelab::Namer
contextTable	include/corelab/Metadata/LoadNamer.h	/^			std::map<uint16_t, ContextInfo*> contextTable; \/\/ ctxId -> ctxInfo$/;"	m	class:corelab::LoadNamer
contextTable	include/corelab/Metadata/Metadata.h	/^			std::map<uint16_t, ContextInfo*> contextTable; \/\/ ctxId -> ctxInfo$/;"	m	class:corelab::Namer
contextTreeDumpToFile	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTreeBuilder::contextTreeDumpToFile(std::string path){$/;"	f	class:ContextTreeBuilder
contextTreeDumpToGvfile	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTreeBuilder::contextTreeDumpToGvfile(std::string path){$/;"	f	class:ContextTreeBuilder
contextType	include/corelab/Metadata/Metadata.h	/^		CONTEXT_TYPE contextType;$/;"	m	struct:corelab::__anon8
corelab	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^namespace corelab$/;"	n
corelab	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^namespace corelab$/;"	n
corelab	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^namespace corelab$/;"	n
corelab	include/corelab/AliasAnalysis/TestClient.hpp	/^namespace corelab $/;"	n
corelab	include/corelab/CAMP/CAMP.h	/^namespace corelab$/;"	n
corelab	include/corelab/CAMP/CampCache.h	/^namespace corelab$/;"	n
corelab	include/corelab/CAMP/CampExectime.h	/^namespace corelab$/;"	n
corelab	include/corelab/CAMP/CampPlain.h	/^namespace corelab$/;"	n
corelab	include/corelab/CAMP/ContextTreeBuilder.h	/^namespace corelab$/;"	n
corelab	include/corelab/CAMP/RegiInterIterDepFinder.h	/^namespace corelab$/;"	n
corelab	include/corelab/CAMP/campCommon.h	/^namespace corelab$/;"	n
corelab	include/corelab/CAMP/campDebug.h	/^namespace corelab$/;"	n
corelab	include/corelab/CAMP/campTimer.h	/^namespace corelab$/;"	n
corelab	include/corelab/Metadata/LoadNamer.h	/^namespace corelab$/;"	n
corelab	include/corelab/Metadata/Metadata.h	/^namespace corelab { $/;"	n
corelab	include/corelab/Metadata/NamedMetadata.h	/^namespace corelab { $/;"	n
corelab	include/corelab/Metadata/typedefs.h	/^namespace corelab {$/;"	n
corelab	include/corelab/ObjTrace/CtxObjtrace.h	/^namespace corelab$/;"	n
corelab	include/corelab/ObjTrace/ObjTrace.h	/^namespace corelab {$/;"	n
corelab	include/corelab/Utilities/FindFunctionExitBB.hpp	/^namespace corelab {$/;"	n
corelab	include/corelab/Utilities/GlobalCtors.h	/^namespace corelab {$/;"	n
corelab	include/corelab/Utilities/InstInsertPt.h	/^namespace corelab {$/;"	n
corelab	include/corelab/Utilities/StandardLibraryFunctionsName.h	/^namespace corelab {$/;"	n
corelab	lib/AliasAnalysis/IndirectCallAnal.hpp	/^namespace corelab$/;"	n
corelab	lib/AliasAnalysis/LoopTraverse.hpp	/^namespace corelab$/;"	n
corelab	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^namespace corelab$/;"	n
corelab	lib/CAMP/CAMP.h	/^namespace corelab$/;"	n
corelab	lib/CAMP/CampCache.h	/^namespace corelab$/;"	n
corelab	lib/CAMP/CampExectime.h	/^namespace corelab$/;"	n
corelab	lib/CAMP/CampPlain.h	/^namespace corelab$/;"	n
corelab	lib/CAMP/ContextTreeBuilder.h	/^namespace corelab$/;"	n
corelab	lib/CAMP/RegiInterIterDepFinder.h	/^namespace corelab$/;"	n
corelab	lib/CAMP/campCommon.h	/^namespace corelab$/;"	n
corelab	lib/CAMP/campDebug.h	/^namespace corelab$/;"	n
corelab	lib/Metadata/EsperantoNamer.cpp	/^namespace corelab {$/;"	n	file:
corelab	lib/Metadata/LoadNamer.cpp	/^namespace corelab {$/;"	n	file:
corelab	lib/Metadata/Namer.cpp	/^namespace corelab{$/;"	n	file:
corelab	lib/ObjTrace/CtxObjtrace.h	/^namespace corelab$/;"	n
corelab	lib/ObjTrace/ObjTrace.h	/^namespace corelab {$/;"	n
corelab	lib/Utilities/GlobalCtors.cpp	/^namespace corelab {$/;"	n	file:
corelab	lib/Utilities/InstInsertPt.cpp	/^namespace corelab {$/;"	n	file:
ctxAllocIdMap	tools/objtrace/ctxObjtraceRuntime.cpp	/^AllocMap *ctxAllocIdMap;$/;"	v
ctxLoadIdMap	tools/objtrace/ctxObjtraceRuntime.cpp	/^LoadStoreMap *ctxLoadIdMap;$/;"	v
ctxObjCallSiteBegin	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjCallSiteBegin;$/;"	m	class:corelab::CtxObjtrace
ctxObjCallSiteBegin	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjCallSiteBegin;$/;"	m	class:corelab::CtxObjtrace
ctxObjCallSiteBegin	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjCallSiteBegin (CntxID cntxID) {$/;"	f
ctxObjCallSiteEnd	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjCallSiteEnd;$/;"	m	class:corelab::CtxObjtrace
ctxObjCallSiteEnd	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjCallSiteEnd;$/;"	m	class:corelab::CtxObjtrace
ctxObjCallSiteEnd	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjCallSiteEnd  (CntxID cntxID) {$/;"	f
ctxObjCalloc	include/corelab/ObjTrace/CtxObjtrace.h	/^      Constant *ctxObjCalloc;$/;"	m	class:corelab::CtxObjtrace
ctxObjCalloc	lib/ObjTrace/CtxObjtrace.h	/^      Constant *ctxObjCalloc;$/;"	m	class:corelab::CtxObjtrace
ctxObjCalloc	tools/objtrace/ctxObjtraceRuntime.cpp	/^void* ctxObjCalloc (size_t num, size_t size, InstrID instrId){$/;"	f
ctxObjDisableCtxtChange	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjDisableCtxtChange;$/;"	m	class:corelab::CtxObjtrace
ctxObjDisableCtxtChange	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjDisableCtxtChange;$/;"	m	class:corelab::CtxObjtrace
ctxObjDisableCtxtChange	tools/objtrace/ctxObjtraceRuntime.cpp	/^extern "C" void ctxObjDisableCtxtChange(){$/;"	f
ctxObjEnableCtxtChange	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjEnableCtxtChange;$/;"	m	class:corelab::CtxObjtrace
ctxObjEnableCtxtChange	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjEnableCtxtChange;$/;"	m	class:corelab::CtxObjtrace
ctxObjEnableCtxtChange	tools/objtrace/ctxObjtraceRuntime.cpp	/^extern "C" void ctxObjEnableCtxtChange(){$/;"	f
ctxObjFinalize	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjFinalize;$/;"	m	class:corelab::CtxObjtrace
ctxObjFinalize	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjFinalize;$/;"	m	class:corelab::CtxObjtrace
ctxObjFinalize	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjFinalize () {$/;"	f
ctxObjInitialize	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjInitialize;$/;"	m	class:corelab::CtxObjtrace
ctxObjInitialize	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjInitialize;$/;"	m	class:corelab::CtxObjtrace
ctxObjInitialize	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjInitialize () {$/;"	f
ctxObjLoadInstr	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjLoadInstr;$/;"	m	class:corelab::CtxObjtrace
ctxObjLoadInstr	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjLoadInstr;$/;"	m	class:corelab::CtxObjtrace
ctxObjLoadInstr	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjLoadInstr (void* addr, InstrID instrId) {$/;"	f
ctxObjLoopBegin	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjLoopBegin;$/;"	m	class:corelab::CtxObjtrace
ctxObjLoopBegin	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjLoopBegin;$/;"	m	class:corelab::CtxObjtrace
ctxObjLoopBegin	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjLoopBegin (CntxID cntxID) { \/\/arg is LocId and CntxID is uint16_t$/;"	f
ctxObjLoopEnd	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjLoopEnd;$/;"	m	class:corelab::CtxObjtrace
ctxObjLoopEnd	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjLoopEnd;$/;"	m	class:corelab::CtxObjtrace
ctxObjLoopEnd	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjLoopEnd (CntxID cntxID) {$/;"	f
ctxObjLoopNext	include/corelab/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjLoopNext;$/;"	m	class:corelab::CtxObjtrace
ctxObjLoopNext	lib/ObjTrace/CtxObjtrace.h	/^			Constant *ctxObjLoopNext;$/;"	m	class:corelab::CtxObjtrace
ctxObjLoopNext	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjLoopNext () {$/;"	f
ctxObjMalloc	include/corelab/ObjTrace/CtxObjtrace.h	/^      Constant *ctxObjMalloc;$/;"	m	class:corelab::CtxObjtrace
ctxObjMalloc	lib/ObjTrace/CtxObjtrace.h	/^      Constant *ctxObjMalloc;$/;"	m	class:corelab::CtxObjtrace
ctxObjMalloc	tools/objtrace/ctxObjtraceRuntime.cpp	/^void* ctxObjMalloc (size_t size, InstrID instrId){$/;"	f
ctxObjRealloc	include/corelab/ObjTrace/CtxObjtrace.h	/^      Constant *ctxObjRealloc;$/;"	m	class:corelab::CtxObjtrace
ctxObjRealloc	lib/ObjTrace/CtxObjtrace.h	/^      Constant *ctxObjRealloc;$/;"	m	class:corelab::CtxObjtrace
ctxObjRealloc	tools/objtrace/ctxObjtraceRuntime.cpp	/^void* ctxObjRealloc (void* addr, size_t size, InstrID instrId){$/;"	f
ctxObjShadowMemorySetting	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjShadowMemorySetting (void *addr, size_t size, FullID fullId){$/;"	f
ctxObjStoreInstr	include/corelab/ObjTrace/CtxObjtrace.h	/^      Constant *ctxObjStoreInstr;$/;"	m	class:corelab::CtxObjtrace
ctxObjStoreInstr	lib/ObjTrace/CtxObjtrace.h	/^      Constant *ctxObjStoreInstr;$/;"	m	class:corelab::CtxObjtrace
ctxObjStoreInstr	tools/objtrace/ctxObjtraceRuntime.cpp	/^void ctxObjStoreInstr (void* addr, InstrID instrId) {$/;"	f
ctxStoreIdMap	tools/objtrace/ctxObjtraceRuntime.cpp	/^LoadStoreMap *ctxStoreIdMap;$/;"	v
ctx_t	tools/objtrace/ctxObjtraceRuntime.cpp	/^x86timer ctx_t;$/;"	v
currentCtx	tools/camp/campRuntime.cpp	/^static CntxID currentCtx;$/;"	v	file:
currentCtx	tools/campSampling/campRuntime.cpp	/^static CntxID currentCtx;$/;"	v	file:
currentCtx	tools/objtrace/ctxObjtraceRuntime.cpp	/^static uint32_t currentCtx;$/;"	v	file:
cxtTree	include/corelab/CAMP/ContextTreeBuilder.h	/^			std::vector<ContextTreeNode *> cxtTree;$/;"	m	class:corelab::ContextTreeBuilder
cxtTree	lib/CAMP/ContextTreeBuilder.h	/^			std::vector<ContextTreeNode *> cxtTree;$/;"	m	class:corelab::ContextTreeBuilder
cxtTreeBuilder	include/corelab/CAMP/CAMP.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::CAMPInstaller
cxtTreeBuilder	include/corelab/CAMP/CampCache.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::CAMPCache
cxtTreeBuilder	include/corelab/CAMP/CampExectime.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::CAMPExectime
cxtTreeBuilder	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::RegiInterIterDepFinder
cxtTreeBuilder	include/corelab/ObjTrace/CtxObjtrace.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::CtxObjtrace
cxtTreeBuilder	lib/CAMP/CAMP.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::CAMPInstaller
cxtTreeBuilder	lib/CAMP/CampCache.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::CAMPCache
cxtTreeBuilder	lib/CAMP/CampExectime.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::CAMPExectime
cxtTreeBuilder	lib/CAMP/RegiInterIterDepFinder.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::RegiInterIterDepFinder
cxtTreeBuilder	lib/ObjTrace/CtxObjtrace.h	/^			ContextTreeBuilder *cxtTreeBuilder;$/;"	m	class:corelab::CtxObjtrace
defaultPlatform	include/corelab/Metadata/NamedMetadata.h	/^			EsperantoPlatform defaultPlatform;$/;"	m	class:corelab::EsperantoNamer
depTable	tools/camp/campRuntime.cpp	/^static std::unordered_map<DepID, IterRelation> *depTable=NULL;$/;"	v	file:
depTable	tools/campSampling/campRuntime.cpp	/^static std::unordered_map<DepID, IterRelation> *depTable=NULL;$/;"	v	file:
depth	lib/CAMP/ContextTreeBuilder.cpp	/^unsigned ContextTree::depth(){$/;"	f	class:ContextTree
dev	include/corelab/Metadata/NamedMetadata.h	/^				DeviceEntry* dev;$/;"	m	struct:corelab::EsperantoNamer::MetadataNode
deviceID	include/corelab/Metadata/NamedMetadata.h	/^				int deviceID;$/;"	m	struct:corelab::EsperantoNamer::FunctionTableEntry
deviceIdMap	include/corelab/Metadata/NamedMetadata.h	/^			std::map<DeviceEntry*, uint32_t> deviceIdMap;$/;"	m	class:corelab::EsperantoNamer
deviceList	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<DeviceEntry*> deviceList;$/;"	m	class:corelab::EsperantoNamer
deviceMap	include/corelab/Metadata/NamedMetadata.h	/^			DeviceMap deviceMap;$/;"	m	class:corelab::EsperantoNamer
deviceName	include/corelab/Metadata/NamedMetadata.h	/^			char deviceName[50];$/;"	m	class:corelab::DeviceMapEntry
die	autoconf/AutoRegen.sh	/^die () {$/;"	f
disableCtxtChange	tools/campSampling/campRuntime.cpp	/^static uint16_t disableCtxtChange;$/;"	v	file:
disableCxtChange	tools/camp/campRuntime.cpp	/^static uint16_t disableCxtChange; \/\/ enabled when 0$/;"	v	file:
disableCxtChange	tools/objtrace/ctxObjtraceRuntime.cpp	/^static uint16_t disableCxtChange; \/\/ enabled when 0$/;"	v	file:
done	include/corelab/CAMP/ContextTreeBuilder.h	/^			bool done; \/\/for cache grind$/;"	m	class:corelab::ContextTree
done	lib/CAMP/ContextTreeBuilder.h	/^			bool done; \/\/for cache grind$/;"	m	class:corelab::ContextTree
dstInstrID	include/corelab/CAMP/campCommon.h	/^			InstrID 	dstInstrID;												\/\/ Destination Instrction ID$/;"	m	struct:corelab::CAMP::__anon4
dstInstrID	lib/CAMP/campCommon.h	/^			InstrID 	dstInstrID;												\/\/ Destination Instrction ID$/;"	m	struct:corelab::CAMP::__anon1
dstStkCntxID	include/corelab/CAMP/campCommon.h	/^			CntxID 		dstStkCntxID[MAX_CNTX_LV + 1];		\/\/ Destination Context ID Stack$/;"	m	struct:corelab::CAMP::__anon4
dstStkCntxID	lib/CAMP/campCommon.h	/^			CntxID 		dstStkCntxID[MAX_CNTX_LV + 1];		\/\/ Destination Context ID Stack$/;"	m	struct:corelab::CAMP::__anon1
dump	include/corelab/Utilities/ProfileInfo.h	/^    void dump(FType *F = 0, bool real = true) {$/;"	f	class:llvm::ProfileInfoT
dump	lib/Utilities/InstInsertPt.cpp	/^  void InstInsertPt::dump() const {$/;"	f	class:corelab::InstInsertPt
dumpDependenceTable	tools/camp/campRuntime.cpp	/^void dumpDependenceTable() {$/;"	f
dumpDependenceTable	tools/campSampling/campRuntime.cpp	/^void dumpDependenceTable() {$/;"	f
empty	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      bool                    empty() const { return recFuncList.empty(); }$/;"	f	class:corelab::RecursiveFuncAnal
empty	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      bool                    empty() const { return recFuncList.empty(); }$/;"	f	class:corelab::RecursiveFuncAnal
end	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      const_iterator          end  () const { return recFuncList.end();   }$/;"	f	class:corelab::RecursiveFuncAnal
end	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      iterator                end  ()       { return recFuncList.end();   }$/;"	f	class:corelab::RecursiveFuncAnal
end	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      const_iterator          end  () const { return recFuncList.end();   }$/;"	f	class:corelab::RecursiveFuncAnal
end	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      iterator                end  ()       { return recFuncList.end();   }$/;"	f	class:corelab::RecursiveFuncAnal
end_	tools/camp/x86timer.hpp	/^uint64_t start_,end_;$/;"	m	class:x86timer
end_	tools/objtrace/x86timer.hpp	/^uint64_t start_,end_;$/;"	m	class:x86timer
end_count	tools/camp/armtimer.hpp	/^unsigned int end_count;$/;"	m	class:armtimer
end_time	tools/camp/armtimer.hpp	/^struct timeval start_time, end_time;$/;"	m	class:armtimer	typeref:struct:armtimer::
execTimeOfContext	tools/camp/campExecRuntime.cpp	/^std::unordered_map<CntxID, double> *execTimeOfContext;$/;"	v
execTimeOfContext	tools/camp/campExecRuntime.cpp	/^std::unordered_map<CntxID, unsigned int> *execTimeOfContext;$/;"	v
exec_currentCtx	tools/camp/campExecRuntime.cpp	/^static CntxID exec_currentCtx;$/;"	v	file:
exec_disableCxtChange	tools/camp/campExecRuntime.cpp	/^static uint16_t exec_disableCxtChange; \/\/ enabled when 0$/;"	v	file:
exitBBof	include/corelab/Utilities/FindFunctionExitBB.hpp	/^			ExitBBMap exitBBof;$/;"	m	struct:corelab::FindFunctionExitBB
externalCalls	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      ExternalCallList externalCalls;$/;"	m	class:corelab::LoopTraverse
externalCalls	include/corelab/CAMP/CAMP.h	/^			ExternalCallList externalCalls;$/;"	m	class:corelab::CAMPInstaller
externalCalls	include/corelab/CAMP/CampExectime.h	/^			ExternalCallList externalCalls;$/;"	m	class:corelab::CAMPExectime
externalCalls	include/corelab/ObjTrace/CtxObjtrace.h	/^			ExternalCallList externalCalls;$/;"	m	class:corelab::CtxObjtrace
externalCalls	lib/AliasAnalysis/LoopTraverse.hpp	/^      ExternalCallList externalCalls;$/;"	m	class:corelab::LoopTraverse
externalCalls	lib/CAMP/CAMP.h	/^			ExternalCallList externalCalls;$/;"	m	class:corelab::CAMPInstaller
externalCalls	lib/CAMP/CampExectime.h	/^			ExternalCallList externalCalls;$/;"	m	class:corelab::CAMPExectime
externalCalls	lib/ObjTrace/CtxObjtrace.h	/^			ExternalCallList externalCalls;$/;"	m	class:corelab::CtxObjtrace
fend	tools/camp/x86timer.hpp	/^uint64_t fstart,fend;$/;"	m	class:x86timer
fend	tools/objtrace/x86timer.hpp	/^uint64_t fstart,fend;$/;"	m	class:x86timer
findAllRecursiveFunction	lib/AliasAnalysis/RecursiveFuncAnal.cpp	/^void RecursiveFuncAnal::findAllRecursiveFunction()$/;"	f	class:RecursiveFuncAnal
findExitBBs	lib/Utilities/FindFunctionExitBB.cpp	/^void FindFunctionExitBB::findExitBBs(Function *fun){$/;"	f	class:FindFunctionExitBB
fstart	tools/camp/x86timer.hpp	/^uint64_t fstart,fend;$/;"	m	class:x86timer
fstart	tools/objtrace/x86timer.hpp	/^uint64_t fstart,fend;$/;"	m	class:x86timer
func	include/corelab/CAMP/ContextTreeBuilder.h	/^			Function *func;\/\/callee$/;"	m	class:corelab::ContextTree
func	lib/CAMP/ContextTreeBuilder.h	/^			Function *func;\/\/callee$/;"	m	class:corelab::ContextTree
func_extract_an_archive	autoconf/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	autoconf/ltmain.sh	/^func_extract_archives ()$/;"	f
func_infer_tag	autoconf/ltmain.sh	/^func_infer_tag ()$/;"	f
func_mktempdir	autoconf/ltmain.sh	/^func_mktempdir ()$/;"	f
func_win32_libid	autoconf/ltmain.sh	/^func_win32_libid ()$/;"	f
functionCount	include/corelab/Metadata/Metadata.h	/^			uint16_t functionCount;$/;"	m	class:corelab::Namer
functionId	include/corelab/Metadata/Metadata.h	/^		uint16_t functionId;$/;"	m	struct:corelab::__anon9
functionNodeTraverse	lib/CAMP/ContextTreeBuilder.cpp	/^bool ContextTreeBuilder::functionNodeTraverse(ContextTreeNode *callSiteNode){$/;"	f	class:ContextTreeBuilder
functionTable	include/corelab/Metadata/LoadNamer.h	/^			std::map<uint16_t, const char*> functionTable; \/\/ funcId -> name$/;"	m	class:corelab::LoadNamer
functionTable	include/corelab/Metadata/Metadata.h	/^			std::map<uint16_t, const char*> functionTable; \/\/ funcId -> name$/;"	m	class:corelab::Namer
functionTable	include/corelab/Metadata/NamedMetadata.h	/^			std::map<int, FunctionTableEntry*> functionTable;$/;"	m	class:corelab::EsperantoNamer
getAdjustedAnalysisPointer	include/corelab/Metadata/Metadata.h	/^			void *getAdjustedAnalysisPointer(AnalysisID PI)$/;"	f	class:corelab::Namer
getAnalysisUsage	include/corelab/AliasAnalysis/TestClient.hpp	/^			void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:corelab::TestAAClient
getAnalysisUsage	include/corelab/CAMP/CAMP.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CAMPInstaller
getAnalysisUsage	include/corelab/CAMP/CampCache.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CAMPCache
getAnalysisUsage	include/corelab/CAMP/CampExectime.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CAMPExectime
getAnalysisUsage	include/corelab/CAMP/CampPlain.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CAMPPlain
getAnalysisUsage	include/corelab/CAMP/ContextTreeBuilder.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::ContextTreeBuilder
getAnalysisUsage	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::RegiInterIterDepFinder
getAnalysisUsage	include/corelab/ObjTrace/CtxObjtrace.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CtxObjtrace
getAnalysisUsage	include/corelab/ObjTrace/ObjTrace.h	/^      virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:corelab::ObjTrace
getAnalysisUsage	include/corelab/Utilities/FindFunctionExitBB.hpp	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	struct:corelab::FindFunctionExitBB
getAnalysisUsage	lib/CAMP/CAMP.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CAMPInstaller
getAnalysisUsage	lib/CAMP/CampCache.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CAMPCache
getAnalysisUsage	lib/CAMP/CampExectime.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CAMPExectime
getAnalysisUsage	lib/CAMP/CampPlain.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CAMPPlain
getAnalysisUsage	lib/CAMP/ContextTreeBuilder.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::ContextTreeBuilder
getAnalysisUsage	lib/CAMP/RegiInterIterDepFinder.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::RegiInterIterDepFinder
getAnalysisUsage	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:corelab::EsperantoNamer
getAnalysisUsage	lib/Metadata/LoadNamer.cpp	/^	void LoadNamer::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:corelab::LoadNamer
getAnalysisUsage	lib/Metadata/Namer.cpp	/^	void Namer::getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:corelab::Namer
getAnalysisUsage	lib/ObjTrace/CtxObjtrace.h	/^			virtual void getAnalysisUsage(AnalysisUsage &AU) const$/;"	f	class:corelab::CtxObjtrace
getAnalysisUsage	lib/ObjTrace/ObjTrace.h	/^      virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:corelab::ObjTrace
getBlkId	lib/Metadata/Namer.cpp	/^	uint16_t Namer::getBlkId(const Instruction *I) {$/;"	f	class:corelab::Namer
getBlock	include/corelab/Utilities/InstInsertPt.h	/^      BasicBlock *getBlock() {$/;"	f	class:corelab::InstInsertPt
getCallInst	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline const Instruction* getCallInst(){return invokeOrCallInst;}$/;"	f	class:corelab::ContextTree
getCallInst	lib/CAMP/ContextTreeBuilder.h	/^			inline const Instruction* getCallInst(){return invokeOrCallInst;}$/;"	f	class:corelab::ContextTree
getCalledFunctionId	lib/Metadata/LoadNamer.cpp	/^	uint16_t LoadNamer::getCalledFunctionId(uint16_t id) {$/;"	f	class:corelab::LoadNamer
getCalledFunction_aux	lib/AliasAnalysis/IndirectCallAnal.cpp	/^Function *getCalledFunction_aux(Instruction* indCall){$/;"	f
getCalledFunction_aux	lib/CAMP/ContextTreeBuilder.cpp	/^Function *getCalledFunction_aux(Instruction* indCall){$/;"	f
getCalledFunction_aux	lib/ObjTrace/CtxObjtrace.cpp	/^static Function *getCalledFunction_aux(Instruction* indCall){$/;"	f	file:
getCalledFunction_aux	lib/ObjTrace/ObjTrace.cpp	/^static Function *getCalledFunction_aux(Instruction* indCall){$/;"	f	file:
getCalledValueOfIndCall	lib/AliasAnalysis/IndirectCallAnal.cpp	/^const Value *getCalledValueOfIndCall(const Instruction* indCall){$/;"	f
getCalledValueOfIndCall	lib/CAMP/ContextTreeBuilder.cpp	/^const Value *getCalledValueOfIndCall(const Instruction* indCall){$/;"	f
getCalledValueOfIndCall	lib/ObjTrace/CtxObjtrace.cpp	/^static const Value *getCalledValueOfIndCall(const Instruction* indCall){$/;"	f	file:
getCalledValueOfIndCall	lib/ObjTrace/ObjTrace.cpp	/^static const Value *getCalledValueOfIndCall(const Instruction* indCall){$/;"	f	file:
getCallee	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline Function* getCallee(){return func;}$/;"	f	class:corelab::ContextTree
getCallee	lib/CAMP/ContextTreeBuilder.h	/^			inline Function* getCallee(){return func;}$/;"	f	class:corelab::ContextTree
getCallingFunctionId	lib/Metadata/LoadNamer.cpp	/^	uint16_t LoadNamer::getCallingFunctionId(uint16_t id) {$/;"	f	class:corelab::LoadNamer
getChildren	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline std::vector<ContextTree *> *getChildren(){return &children;}$/;"	f	class:corelab::ContextTree
getChildren	lib/CAMP/ContextTreeBuilder.h	/^			inline std::vector<ContextTree *> *getChildren(){return &children;}$/;"	f	class:corelab::ContextTree
getClassNameInFunction	lib/Metadata/EsperantoNamer.cpp	/^	 std::string EsperantoNamer::getClassNameInFunction(StringRef functionName){$/;"	f	class:corelab::EsperantoNamer
getCntxIDforLoop	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline CntxID getCntxIDforLoop(){return cntxID;}$/;"	f	class:corelab::ContextTree
getCntxIDforLoop	lib/CAMP/ContextTreeBuilder.h	/^			inline CntxID getCntxIDforLoop(){return cntxID;}$/;"	f	class:corelab::ContextTree
getContextTree	include/corelab/CAMP/ContextTreeBuilder.h	/^			std::vector<ContextTreeNode *> *getContextTree() {return &cxtTree;}$/;"	f	class:corelab::ContextTreeBuilder
getContextTree	lib/CAMP/ContextTreeBuilder.h	/^			std::vector<ContextTreeNode *> *getContextTree() {return &cxtTree;}$/;"	f	class:corelab::ContextTreeBuilder
getCtxId	tools/objtrace/ctxObjtraceRuntime.cpp	30;"	d	file:
getDeviceInfo	lib/Metadata/EsperantoNamer.cpp	/^	EsperantoNamer::DeviceEntry* EsperantoNamer::getDeviceInfo(Function* F) {$/;"	f	class:corelab::EsperantoNamer
getEdge	include/corelab/Utilities/ProfileInfo.h	/^    static Edge getEdge(const BType *Src, const BType *Dest) {$/;"	f	class:llvm::ProfileInfoT
getEdgeWeight	include/corelab/Utilities/ProfileInfo.h	/^    double getEdgeWeight(Edge e) const {$/;"	f	class:llvm::ProfileInfoT
getEdgeWeights	include/corelab/Utilities/ProfileInfo.h	/^    EdgeWeights &getEdgeWeights (const FType *F) {$/;"	f	class:llvm::ProfileInfoT
getEntry	include/corelab/Metadata/NamedMetadata.h	/^			DeviceMapEntry* getEntry(DeviceMapEntry* source){$/;"	f	class:corelab::DeviceMap
getExitBB	lib/Utilities/FindFunctionExitBB.cpp	/^FindFunctionExitBB::ExitBBs& FindFunctionExitBB::getExitBB(Function *fun){$/;"	f	class:FindFunctionExitBB
getExitBBOfFunctionWithNoRetInst	lib/Utilities/FindFunctionExitBB.cpp	/^BasicBlock *FindFunctionExitBB::getExitBBOfFunctionWithNoRetInst(Function *fun){$/;"	f	class:FindFunctionExitBB
getFullId	lib/Metadata/Namer.cpp	/^	uint64_t Namer::getFullId(const Instruction *I) {$/;"	f	class:corelab::Namer
getFullId	tools/objtrace/ctxObjtraceRuntime.cpp	29;"	d	file:
getFuncId	lib/Metadata/Namer.cpp	/^	uint16_t Namer::getFuncId(const Instruction *I) {$/;"	f	class:corelab::Namer
getFunction	include/corelab/Utilities/InstInsertPt.h	/^      Function *getFunction() {$/;"	f	class:corelab::InstInsertPt
getFunction	include/corelab/Utilities/ProfileInfo.h	/^    static const FType* getFunction(Edge e) {$/;"	f	class:llvm::ProfileInfoT
getFunction	lib/Metadata/LoadNamer.cpp	/^	Function* LoadNamer::getFunction(Module &M, uint16_t funcId) {$/;"	f	class:corelab::LoadNamer
getFunctionId	lib/Metadata/LoadNamer.cpp	/^	uint16_t LoadNamer::getFunctionId(Function &F) {$/;"	f	class:corelab::LoadNamer
getFunctionId	lib/Metadata/LoadNamer.cpp	/^	uint16_t LoadNamer::getFunctionId(const char* fName) {$/;"	f	class:corelab::LoadNamer
getIdCount	lib/Metadata/EsperantoNamer.cpp	/^	int EsperantoNamer::getIdCount(CallInst* call) {$/;"	f	class:corelab::EsperantoNamer
getIdCount	lib/Metadata/EsperantoNamer.cpp	/^	int EsperantoNamer::getIdCount(DeviceEntry* dev) {$/;"	f	class:corelab::EsperantoNamer
getInstrId	lib/Metadata/Namer.cpp	/^	uint16_t Namer::getInstrId(const Instruction *I) {$/;"	f	class:corelab::Namer
getInstrId	tools/objtrace/ctxObjtraceRuntime.cpp	31;"	d	file:
getInstrType	lib/Metadata/Namer.cpp	/^	char Namer::getInstrType(const Instruction *I) {$/;"	f	class:corelab::Namer
getLocID	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline LocalContextID getLocID(){return locID;}$/;"	f	class:corelab::ContextTree
getLocID	lib/CAMP/ContextTreeBuilder.h	/^			inline LocalContextID getLocID(){return locID;}$/;"	f	class:corelab::ContextTree
getLocIDMapForCallSite	include/corelab/CAMP/ContextTreeBuilder.h	/^			LocIDMapForCallSite *getLocIDMapForCallSite(){return &locIdOf_callSite;}$/;"	f	class:corelab::ContextTreeBuilder
getLocIDMapForCallSite	lib/CAMP/ContextTreeBuilder.h	/^			LocIDMapForCallSite *getLocIDMapForCallSite(){return &locIdOf_callSite;}$/;"	f	class:corelab::ContextTreeBuilder
getLocIDMapForIndirectCalls	include/corelab/CAMP/ContextTreeBuilder.h	/^			LocIDMapForIndirectCalls *getLocIDMapForIndirectCalls(){return &locIdOf_indCall;}$/;"	f	class:corelab::ContextTreeBuilder
getLocIDMapForIndirectCalls	lib/CAMP/ContextTreeBuilder.h	/^			LocIDMapForIndirectCalls *getLocIDMapForIndirectCalls(){return &locIdOf_indCall;}$/;"	f	class:corelab::ContextTreeBuilder
getLocIDMapForLoop	include/corelab/CAMP/ContextTreeBuilder.h	/^			LocIDMapForLoop *getLocIDMapForLoop(){return &locIdOf_loop;}$/;"	f	class:corelab::ContextTreeBuilder
getLocIDMapForLoop	lib/CAMP/ContextTreeBuilder.h	/^			LocIDMapForLoop *getLocIDMapForLoop(){return &locIdOf_loop;}$/;"	f	class:corelab::ContextTreeBuilder
getLocalContextID	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline LocalContextID getLocalContextID(){return locID;}$/;"	f	class:corelab::ContextTree
getLocalContextID	lib/CAMP/ContextTreeBuilder.h	/^			inline LocalContextID getLocalContextID(){return locID;}$/;"	f	class:corelab::ContextTree
getLoop	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline const Loop* getLoop(){return loop;}$/;"	f	class:corelab::ContextTree
getLoop	lib/CAMP/ContextTreeBuilder.h	/^			inline const Loop* getLoop(){return loop;}$/;"	f	class:corelab::ContextTree
getLoopContextId	lib/Metadata/LoadNamer.cpp	/^	uint16_t LoadNamer::getLoopContextId(Loop *L, uint16_t functionId) {$/;"	f	class:corelab::LoadNamer
getLoopDepth	lib/AliasAnalysis/LoopTraverse.cpp	/^unsigned LoopTraverse::getLoopDepth(const Loop *loop) {$/;"	f	class:LoopTraverse
getLoopDepth_aux	lib/AliasAnalysis/LoopTraverse.cpp	/^unsigned LoopTraverse::getLoopDepth_aux(Function *func) {$/;"	f	class:LoopTraverse
getLoopIDMap	include/corelab/CAMP/ContextTreeBuilder.h	/^			LoopIdOf *getLoopIDMap(){return &loopIdOf;}$/;"	f	class:corelab::ContextTreeBuilder
getLoopIDMap	lib/CAMP/ContextTreeBuilder.h	/^			LoopIdOf *getLoopIDMap(){return &loopIdOf;}$/;"	f	class:corelab::ContextTreeBuilder
getLoopInfo	include/corelab/CAMP/ContextTreeBuilder.h	/^			LoopInfoOfFunc *getLoopInfo(){ return &loopInfoOf;}$/;"	f	class:corelab::ContextTreeBuilder
getLoopInfo	lib/CAMP/ContextTreeBuilder.h	/^			LoopInfoOfFunc *getLoopInfo(){ return &loopInfoOf;}$/;"	f	class:corelab::ContextTreeBuilder
getLoopMapOfCntxID	include/corelab/CAMP/ContextTreeBuilder.h	/^			LoopOfCntxID *getLoopMapOfCntxID(){return &loopOfCntxID;}$/;"	f	class:corelab::ContextTreeBuilder
getLoopMapOfCntxID	lib/CAMP/ContextTreeBuilder.h	/^			LoopOfCntxID *getLoopMapOfCntxID(){return &loopOfCntxID;}$/;"	f	class:corelab::ContextTreeBuilder
getMaxLoopDepth	lib/AliasAnalysis/LoopTraverse.cpp	/^unsigned LoopTraverse::getMaxLoopDepth(){$/;"	f	class:LoopTraverse
getModule	include/corelab/Utilities/InstInsertPt.h	/^      Module *getModule() {$/;"	f	class:corelab::InstInsertPt
getNameOfTarget	lib/AliasAnalysis/IndirectCallAnal.cpp	/^StringRef getNameOfTarget(const Value *calledVal){$/;"	f
getNextInstruction	lib/Utilities/InstInsertPt.cpp	/^	Instruction *getNextInstruction(Instruction *i){$/;"	f	namespace:corelab
getOrInsertDeviceList	lib/Metadata/EsperantoNamer.cpp	/^	EsperantoNamer::DeviceEntry* EsperantoNamer::getOrInsertDeviceList(const char* compName, const char* compType) {$/;"	f	class:corelab::EsperantoNamer
getParent	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline ContextTree* getParent(){return parent;}$/;"	f	class:corelab::ContextTree
getParent	lib/CAMP/ContextTreeBuilder.h	/^			inline ContextTree* getParent(){return parent;}$/;"	f	class:corelab::ContextTree
getParentUCID	include/corelab/CAMP/ContextTreeBuilder.h	/^			UniqueContextID getParentUCID (ContextTreeNode *myNode) $/;"	f	class:corelab::ContextTreeBuilder
getParentUCID	lib/CAMP/CampCache.cpp	/^UniqueContextID CAMPCache::getParentUCID ( ContextTreeNode *node )$/;"	f	class:CAMPCache
getParentUCID	lib/CAMP/ContextTreeBuilder.h	/^			UniqueContextID getParentUCID (ContextTreeNode *myNode) $/;"	f	class:corelab::ContextTreeBuilder
getPassName	include/corelab/AliasAnalysis/TestClient.hpp	/^			StringRef getPassName() const { return "TestAAClient"; }$/;"	f	class:corelab::TestAAClient
getPassName	include/corelab/CAMP/CAMP.h	/^			const char *getPassName() const { return "CAMP"; }$/;"	f	class:corelab::CAMPInstaller
getPassName	include/corelab/CAMP/CampCache.h	/^			const char *getPassName() const { return "CAMP"; }$/;"	f	class:corelab::CAMPCache
getPassName	include/corelab/CAMP/CampExectime.h	/^			const char *getPassName() const { return "CAMP"; }$/;"	f	class:corelab::CAMPExectime
getPassName	include/corelab/CAMP/CampPlain.h	/^			const char *getPassName() const { return "CAMP_Plain"; }$/;"	f	class:corelab::CAMPPlain
getPassName	include/corelab/CAMP/ContextTreeBuilder.h	/^			const char *getPassName() const { return "CAMP-context-tree-builder"; }$/;"	f	class:corelab::ContextTreeBuilder
getPassName	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			const char *getPassName() const { return "regi-inter-iter-dep-finder"; }$/;"	f	class:corelab::RegiInterIterDepFinder
getPassName	include/corelab/Metadata/LoadNamer.h	/^			const char *getPassName() const { return "LoadNamer"; }$/;"	f	class:corelab::LoadNamer
getPassName	include/corelab/Metadata/Metadata.h	/^			const char *getPassName() const { return "MetadataManager"; }$/;"	f	class:corelab::Namer
getPassName	include/corelab/Metadata/NamedMetadata.h	/^			const char *getPassName() const { return "EsperantoNamer"; }$/;"	f	class:corelab::EsperantoNamer
getPassName	include/corelab/ObjTrace/CtxObjtrace.h	/^			const char *getPassName() const { return "Cxt-Objtrace"; }$/;"	f	class:corelab::CtxObjtrace
getPassName	include/corelab/ObjTrace/ObjTrace.h	/^      const char *getPassName() const { return "ObjTrace"; }$/;"	f	class:corelab::ObjTrace
getPassName	lib/CAMP/CAMP.h	/^			const char *getPassName() const { return "CAMP"; }$/;"	f	class:corelab::CAMPInstaller
getPassName	lib/CAMP/CampCache.h	/^			const char *getPassName() const { return "CAMP"; }$/;"	f	class:corelab::CAMPCache
getPassName	lib/CAMP/CampExectime.h	/^			const char *getPassName() const { return "CAMP"; }$/;"	f	class:corelab::CAMPExectime
getPassName	lib/CAMP/CampPlain.h	/^			const char *getPassName() const { return "CAMP_Plain"; }$/;"	f	class:corelab::CAMPPlain
getPassName	lib/CAMP/ContextTreeBuilder.h	/^			const char *getPassName() const { return "CAMP-context-tree-builder"; }$/;"	f	class:corelab::ContextTreeBuilder
getPassName	lib/CAMP/RegiInterIterDepFinder.h	/^			const char *getPassName() const { return "regi-inter-iter-dep-finder"; }$/;"	f	class:corelab::RegiInterIterDepFinder
getPassName	lib/ObjTrace/CtxObjtrace.h	/^			const char *getPassName() const { return "Cxt-Objtrace"; }$/;"	f	class:corelab::CtxObjtrace
getPassName	lib/ObjTrace/ObjTrace.h	/^      const char *getPassName() const { return "ObjTrace"; }$/;"	f	class:corelab::ObjTrace
getPlatform	lib/Metadata/EsperantoNamer.cpp	/^	EsperantoNamer::EsperantoPlatform EsperantoNamer::getPlatform(const char* compType) {$/;"	f	class:corelab::EsperantoNamer
getPlatformAsString	lib/Metadata/EsperantoNamer.cpp	/^	const char* EsperantoNamer::getPlatformAsString(EsperantoNamer::EsperantoPlatform E) {$/;"	f	class:corelab::EsperantoNamer
getPosition	include/corelab/Utilities/InstInsertPt.h	/^      Instruction *getPosition() {$/;"	f	class:corelab::InstInsertPt
getProloguePosition	lib/CAMP/CAMP.cpp	/^Instruction *getProloguePosition(Instruction *inst){$/;"	f
getRecursiveFuncList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveFuncList &getRecursiveFuncList()       { return recFuncList; }$/;"	f	class:corelab::RecursiveFuncAnal
getRecursiveFuncList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      const RecursiveFuncList &getRecursiveFuncList() const { return recFuncList; }$/;"	f	class:corelab::RecursiveFuncAnal
getRecursiveFuncList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveFuncList &getRecursiveFuncList()       { return recFuncList; }$/;"	f	class:corelab::RecursiveFuncAnal
getRecursiveFuncList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      const RecursiveFuncList &getRecursiveFuncList() const { return recFuncList; }$/;"	f	class:corelab::RecursiveFuncAnal
getStandardLibFunNameList	include/corelab/Utilities/StandardLibraryFunctionsName.h	/^		void getStandardLibFunNameList(std::unordered_set<std::string> &stdLibFunli){$/;"	f	namespace:corelab::utilities
getTrueRecursiveCallList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveCallList &getTrueRecursiveCallList()       { return recursiveCalls; }$/;"	f	class:corelab::RecursiveFuncAnal
getTrueRecursiveCallList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      const RecursiveCallList &getTrueRecursiveCallList() const { return recursiveCalls; }$/;"	f	class:corelab::RecursiveFuncAnal
getTrueRecursiveCallList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveCallList &getTrueRecursiveCallList()       { return recursiveCalls; }$/;"	f	class:corelab::RecursiveFuncAnal
getTrueRecursiveCallList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      const RecursiveCallList &getTrueRecursiveCallList() const { return recursiveCalls; }$/;"	f	class:corelab::RecursiveFuncAnal
getTypeBasedMatching	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			void getTypeBasedMatching(Matching& matching){matching = typeBasedMatching;}$/;"	f	class:corelab::IndirectCallAnal
getTypeBasedMatching	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			void getTypeBasedMatching(Matching& matching){matching = typeBasedMatching;}$/;"	f	class:corelab::IndirectCallAnal
getUCID	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline UniqueContextID getUCID(){return ucID;}$/;"	f	class:corelab::ContextTree
getUCID	lib/CAMP/ContextTreeBuilder.h	/^			inline UniqueContextID getUCID(){return ucID;}$/;"	f	class:corelab::ContextTree
getValue	lib/Metadata/Namer.cpp	/^	Value* Namer::getValue(const Instruction *I) {$/;"	f	class:corelab::Namer
get_cyclecount	tools/camp/armtimer.hpp	/^unsigned int get_cyclecount (void)$/;"	f	class:armtimer
get_result_count	tools/camp/armtimer.hpp	/^unsigned int get_result_count (void)$/;"	f	class:armtimer
get_result_time	tools/camp/armtimer.hpp	/^double get_result_time (void)$/;"	f	class:armtimer
globalIterStack	tools/camp/campRuntime.cpp	/^static IterStack globalIterStack;$/;"	v	file:
globalIterStack	tools/campSampling/campRuntime.cpp	/^static IterStack globalIterStack;$/;"	v	file:
globalIterStack	tools/objtrace/ctxObjtraceRuntime.cpp	/^static IterStack globalIterStack;$/;"	v	file:
globalIterStackIdx	tools/camp/campRuntime.cpp	/^static int globalIterStackIdx;$/;"	v	file:
globalIterStackIdx	tools/campSampling/campRuntime.cpp	/^static int globalIterStackIdx;$/;"	v	file:
globalIterStackIdx	tools/objtrace/ctxObjtraceRuntime.cpp	/^static int globalIterStackIdx;$/;"	v	file:
globalIterStackIdx_overflow	tools/camp/campRuntime.cpp	/^static int globalIterStackIdx_overflow;$/;"	v	file:
globalIterStackIdx_overflow	tools/campSampling/campRuntime.cpp	/^static int globalIterStackIdx_overflow;$/;"	v	file:
globalIterStackIdx_overflow	tools/objtrace/ctxObjtraceRuntime.cpp	/^static int globalIterStackIdx_overflow;$/;"	v	file:
hasMI	include/corelab/Utilities/ProfileInfo.h	/^    bool hasMI() const {$/;"	f	class:llvm::ProfileInfoT
hookMallocFree	lib/CAMP/CAMP.cpp	/^void CAMPInstaller::hookMallocFree(){$/;"	f	class:CAMPInstaller
hookMallocFree	lib/ObjTrace/CtxObjtrace.cpp	/^void CtxObjtrace::hookMallocFree(){$/;"	f	class:CtxObjtrace
hookMallocFree	lib/ObjTrace/ObjTrace.cpp	/^void ObjTrace::hookMallocFree(){$/;"	f	class:ObjTrace
i64	tools/camp/campRuntime.h	/^	uint64_t i64[STK_MAX_SIZE_DIV_BY_8];$/;"	m	union:IterStack
i64	tools/campSampling/campRuntime.h	/^	uint64_t i64[STK_MAX_SIZE_DIV_BY_8];$/;"	m	union:IterStack
i64	tools/objtrace/ctxObjtraceRuntime.h	/^	uint64_t i64[STK_MAX_SIZE_DIV_BY_8];$/;"	m	union:IterStack
i8	tools/camp/campRuntime.h	/^	uint8_t i8[STK_MAX_SIZE];$/;"	m	union:IterStack
i8	tools/campSampling/campRuntime.h	/^	uint8_t i8[STK_MAX_SIZE];$/;"	m	union:IterStack
i8	tools/objtrace/ctxObjtraceRuntime.h	/^	uint8_t i8[STK_MAX_SIZE];$/;"	m	union:IterStack
id	include/corelab/Metadata/NamedMetadata.h	/^			int id;$/;"	m	class:corelab::DeviceMapEntry
includedFunctionId	include/corelab/Metadata/Metadata.h	/^		uint16_t includedFunctionId;$/;"	m	struct:corelab::__anon8
indirectCalls	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			IndirectCallList indirectCalls;$/;"	m	class:corelab::IndirectCallAnal
indirectCalls	include/corelab/CAMP/CAMP.h	/^			IndirectCallList indirectCalls;$/;"	m	class:corelab::CAMPInstaller
indirectCalls	include/corelab/CAMP/CampExectime.h	/^			IndirectCallList indirectCalls;$/;"	m	class:corelab::CAMPExectime
indirectCalls	include/corelab/ObjTrace/CtxObjtrace.h	/^			IndirectCallList indirectCalls;$/;"	m	class:corelab::CtxObjtrace
indirectCalls	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			IndirectCallList indirectCalls;$/;"	m	class:corelab::IndirectCallAnal
indirectCalls	lib/CAMP/CAMP.h	/^			IndirectCallList indirectCalls;$/;"	m	class:corelab::CAMPInstaller
indirectCalls	lib/CAMP/CampExectime.h	/^			IndirectCallList indirectCalls;$/;"	m	class:corelab::CAMPExectime
indirectCalls	lib/ObjTrace/CtxObjtrace.h	/^			IndirectCallList indirectCalls;$/;"	m	class:corelab::CtxObjtrace
indirectCallsWithNoTarget	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      IndirectCallList indirectCallsWithNoTarget;$/;"	m	class:corelab::LoopTraverse
indirectCallsWithNoTarget	lib/AliasAnalysis/LoopTraverse.hpp	/^      IndirectCallList indirectCallsWithNoTarget;$/;"	m	class:corelab::LoopTraverse
initUseDefChains	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::initUseDefChains() {$/;"	f	class:corelab::EsperantoNamer
init_perfcounter	tools/camp/armtimer.hpp	/^void init_perfcounter (int do_reset, int enable_divider)                               $/;"	f	class:armtimer
initialize	lib/Metadata/Namer.cpp	/^	void Namer::initialize() {$/;"	f	class:corelab::Namer
initialize	tools/camp/ShadowMemory.hpp	/^		static void initialize(){$/;"	f	class:ShadowMemoryManager
initialize	tools/campSampling/ShadowMemory.hpp	/^		static void initialize(){$/;"	f	class:ShadowMemoryManager
initialize	tools/objtrace/ShadowMemory.hpp	/^		static void initialize(){$/;"	f	class:ShadowMemoryManager
insert	lib/Utilities/InstInsertPt.cpp	/^  void InstInsertPt::insert(Instruction *i) {$/;"	f	class:corelab::InstInsertPt
insertDep	tools/camp/campRuntime.cpp	/^static void insertDep(CampID srcCampID, CampID dstCampID, uint8_t* oldIter){$/;"	f	file:
insertDep	tools/campSampling/campRuntime.cpp	/^static void insertDep(CampID srcCampID, CampID dstCampID, uint8_t* oldIter){$/;"	f	file:
insertEntry	include/corelab/Metadata/NamedMetadata.h	/^			void insertEntry(DeviceMapEntry* entry){$/;"	f	class:corelab::DeviceMap
inst	include/corelab/Metadata/NamedMetadata.h	/^				Instruction* inst;$/;"	m	struct:corelab::EsperantoNamer::MetadataNode
instructionCount	include/corelab/Metadata/Metadata.h	/^			uint16_t instructionCount;$/;"	m	class:corelab::Namer
instructionToBBId	include/corelab/Metadata/LoadNamer.h	/^			std::map<uint16_t, uint16_t> instructionToBBId;$/;"	m	class:corelab::LoadNamer
instructionToBBId	include/corelab/Metadata/Metadata.h	/^			std::map<uint16_t, uint16_t> instructionToBBId; $/;"	m	class:corelab::Namer
int64_t	tools/camp/x86timer.hpp	/^typedef __int64 int64_t;$/;"	t
int64_t	tools/objtrace/x86timer.hpp	/^typedef __int64 int64_t;$/;"	t
invalid	include/corelab/Utilities/InstInsertPt.h	/^      bool                                    invalid;$/;"	m	class:corelab::InstInsertPt
invokeOrCallInst	include/corelab/CAMP/ContextTreeBuilder.h	/^			const Instruction *invokeOrCallInst;$/;"	m	class:corelab::ContextTree
invokeOrCallInst	lib/CAMP/ContextTreeBuilder.h	/^			const Instruction *invokeOrCallInst;$/;"	m	class:corelab::ContextTree
isCallSite	include/corelab/CAMP/ContextTreeBuilder.h	/^			bool isCallSite;$/;"	m	class:corelab::ContextTree
isCallSite	lib/CAMP/ContextTreeBuilder.h	/^			bool isCallSite;$/;"	m	class:corelab::ContextTree
isCallSiteNode	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline bool isCallSiteNode(){return isCallSite;}$/;"	f	class:corelab::ContextTree
isCallSiteNode	lib/CAMP/ContextTreeBuilder.h	/^			inline bool isCallSiteNode(){return isCallSite;}$/;"	f	class:corelab::ContextTree
isCheckedOrEnroll	lib/Metadata/EsperantoNamer.cpp	/^	bool EsperantoNamer::isCheckedOrEnroll(Instruction* target) {$/;"	f	class:corelab::EsperantoNamer
isCheckedOrEnroll	lib/Metadata/EsperantoNamer.cpp	/^	bool EsperantoNamer::isCheckedOrEnroll(Value* v) {$/;"	f	class:corelab::EsperantoNamer
isEqual	lib/AliasAnalysis/IndirectCallAnal.cpp	/^bool IndirectCallAnal::isEqual(FunctionType *lhs, FunctionType *rhs){$/;"	f	class:IndirectCallAnal
isExistOrInsert	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::isExistOrInsert(std::string cName){$/;"	f	class:corelab::EsperantoNamer
isIndVar	lib/CAMP/RegiInterIterDepFinder.cpp	/^bool RegiInterIterDepFinder::isIndVar(Value *inVal, std::vector<Value *> orginalVal, const Loop *loop){$/;"	f	class:RegiInterIterDepFinder
isInter	tools/camp/campRuntime.cpp	31;"	d	file:
isInter	tools/campSampling/campRuntime.cpp	44;"	d	file:
isIntra	tools/camp/campRuntime.cpp	30;"	d	file:
isIntra	tools/campSampling/campRuntime.cpp	43;"	d	file:
isRecursiveCallSite	include/corelab/CAMP/ContextTreeBuilder.h	/^			bool isRecursiveCallSite;$/;"	m	class:corelab::ContextTree
isRecursiveCallSite	lib/CAMP/ContextTreeBuilder.h	/^			bool isRecursiveCallSite;$/;"	m	class:corelab::ContextTree
isRecursiveCallSiteNode	include/corelab/CAMP/ContextTreeBuilder.h	/^			inline bool isRecursiveCallSiteNode(){return isRecursiveCallSite;}$/;"	f	class:corelab::ContextTree
isRecursiveCallSiteNode	lib/CAMP/ContextTreeBuilder.h	/^			inline bool isRecursiveCallSiteNode(){return isRecursiveCallSite;}$/;"	f	class:corelab::ContextTree
isRetInst	lib/Utilities/FindFunctionExitBB.cpp	/^static inline bool isRetInst(const Instruction *I) {$/;"	f	file:
isUseOfGetElementPtrInst	lib/CAMP/CAMP.cpp	/^bool CAMPInstaller::isUseOfGetElementPtrInst(LoadInst *ld){$/;"	f	class:CAMPInstaller
isUseOfGetElementPtrInst	lib/ObjTrace/CtxObjtrace.cpp	/^bool CtxObjtrace::isUseOfGetElementPtrInst(LoadInst *ld){$/;"	f	class:CtxObjtrace
isUseOfGetElementPtrInst	lib/ObjTrace/ObjTrace.cpp	/^bool ObjTrace::isUseOfGetElementPtrInst(LoadInst *ld){$/;"	f	class:ObjTrace
iterStack	tools/camp/campRuntime.h	/^	IterStack iterStack;$/;"	m	struct:StoreHistoryElem
iterStack	tools/campSampling/campRuntime.h	/^	IterStack iterStack;$/;"	m	struct:StoreHistoryElem
iterator	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef RecursiveFuncList::iterator iterator;$/;"	t	class:corelab::RecursiveFuncAnal
iterator	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef RecursiveFuncList::iterator iterator;$/;"	t	class:corelab::RecursiveFuncAnal
last	include/corelab/CAMP/campTimer.h	/^			static double last;$/;"	m	namespace:corelab::CAMP::Timer
llvm	include/corelab/Utilities/ProfileInfo.h	/^namespace llvm {$/;"	n
loadCount	include/corelab/Metadata/Metadata.h	/^			uint16_t loadCount;$/;"	m	class:corelab::Namer
loadIdMap	tools/objtrace/objtraceruntime.cpp	/^LoadStoreMap *loadIdMap;$/;"	v
loadMetadata	lib/Metadata/LoadNamer.cpp	/^	bool LoadNamer::loadMetadata() {$/;"	f	class:corelab::LoadNamer
locID	include/corelab/CAMP/ContextTreeBuilder.h	/^			LocalContextID locID;$/;"	m	class:corelab::ContextTree
locID	lib/CAMP/ContextTreeBuilder.h	/^			LocalContextID locID;$/;"	m	class:corelab::ContextTree
locIdOf_callSite	include/corelab/CAMP/CAMP.h	/^			LocIDMapForCallSite *locIdOf_callSite;  \/\/ if key is instrID of indirect call, then value is -1$/;"	m	class:corelab::CAMPInstaller
locIdOf_callSite	include/corelab/CAMP/CampCache.h	/^			LocIDMapForCallSite *locIdOf_callSite;$/;"	m	class:corelab::CAMPCache
locIdOf_callSite	include/corelab/CAMP/CampExectime.h	/^			LocIDMapForCallSite *locIdOf_callSite;  \/\/ if key is instrID of indirect call, then value is -1$/;"	m	class:corelab::CAMPExectime
locIdOf_callSite	include/corelab/CAMP/ContextTreeBuilder.h	/^			LocIDMapForCallSite locIdOf_callSite;  \/\/ if key is instrID of indirect call, then value is -1$/;"	m	class:corelab::ContextTreeBuilder
locIdOf_callSite	include/corelab/ObjTrace/CtxObjtrace.h	/^			LocIDMapForCallSite *locIdOf_callSite;  \/\/ if key is instrID of indirect call, then value is -1$/;"	m	class:corelab::CtxObjtrace
locIdOf_callSite	lib/CAMP/CAMP.h	/^			LocIDMapForCallSite *locIdOf_callSite;  \/\/ if key is instrID of indirect call, then value is -1$/;"	m	class:corelab::CAMPInstaller
locIdOf_callSite	lib/CAMP/CampCache.h	/^			LocIDMapForCallSite *locIdOf_callSite;$/;"	m	class:corelab::CAMPCache
locIdOf_callSite	lib/CAMP/CampExectime.h	/^			LocIDMapForCallSite *locIdOf_callSite;  \/\/ if key is instrID of indirect call, then value is -1$/;"	m	class:corelab::CAMPExectime
locIdOf_callSite	lib/CAMP/ContextTreeBuilder.h	/^			LocIDMapForCallSite locIdOf_callSite;  \/\/ if key is instrID of indirect call, then value is -1$/;"	m	class:corelab::ContextTreeBuilder
locIdOf_callSite	lib/ObjTrace/CtxObjtrace.h	/^			LocIDMapForCallSite *locIdOf_callSite;  \/\/ if key is instrID of indirect call, then value is -1$/;"	m	class:corelab::CtxObjtrace
locIdOf_indCall	include/corelab/CAMP/CAMP.h	/^			LocIDMapForIndirectCalls *locIdOf_indCall;$/;"	m	class:corelab::CAMPInstaller
locIdOf_indCall	include/corelab/CAMP/CampCache.h	/^			LocIDMapForIndirectCalls *locIdOf_indCall;$/;"	m	class:corelab::CAMPCache
locIdOf_indCall	include/corelab/CAMP/CampExectime.h	/^			LocIDMapForIndirectCalls *locIdOf_indCall;$/;"	m	class:corelab::CAMPExectime
locIdOf_indCall	include/corelab/CAMP/ContextTreeBuilder.h	/^			LocIDMapForIndirectCalls locIdOf_indCall;$/;"	m	class:corelab::ContextTreeBuilder
locIdOf_indCall	include/corelab/ObjTrace/CtxObjtrace.h	/^			LocIDMapForIndirectCalls *locIdOf_indCall;$/;"	m	class:corelab::CtxObjtrace
locIdOf_indCall	lib/CAMP/CAMP.h	/^			LocIDMapForIndirectCalls *locIdOf_indCall;$/;"	m	class:corelab::CAMPInstaller
locIdOf_indCall	lib/CAMP/CampCache.h	/^			LocIDMapForIndirectCalls *locIdOf_indCall;$/;"	m	class:corelab::CAMPCache
locIdOf_indCall	lib/CAMP/CampExectime.h	/^			LocIDMapForIndirectCalls *locIdOf_indCall;$/;"	m	class:corelab::CAMPExectime
locIdOf_indCall	lib/CAMP/ContextTreeBuilder.h	/^			LocIDMapForIndirectCalls locIdOf_indCall;$/;"	m	class:corelab::ContextTreeBuilder
locIdOf_indCall	lib/ObjTrace/CtxObjtrace.h	/^			LocIDMapForIndirectCalls *locIdOf_indCall;$/;"	m	class:corelab::CtxObjtrace
locIdOf_loop	include/corelab/CAMP/CAMP.h	/^			LocIDMapForLoop *locIdOf_loop;$/;"	m	class:corelab::CAMPInstaller
locIdOf_loop	include/corelab/CAMP/CampExectime.h	/^			LocIDMapForLoop *locIdOf_loop;$/;"	m	class:corelab::CAMPExectime
locIdOf_loop	include/corelab/CAMP/ContextTreeBuilder.h	/^			LocIDMapForLoop locIdOf_loop;$/;"	m	class:corelab::ContextTreeBuilder
locIdOf_loop	include/corelab/ObjTrace/CtxObjtrace.h	/^			LocIDMapForLoop *locIdOf_loop;$/;"	m	class:corelab::CtxObjtrace
locIdOf_loop	lib/CAMP/CAMP.h	/^			LocIDMapForLoop *locIdOf_loop;$/;"	m	class:corelab::CAMPInstaller
locIdOf_loop	lib/CAMP/CampExectime.h	/^			LocIDMapForLoop *locIdOf_loop;$/;"	m	class:corelab::CAMPExectime
locIdOf_loop	lib/CAMP/ContextTreeBuilder.h	/^			LocIDMapForLoop locIdOf_loop;$/;"	m	class:corelab::ContextTreeBuilder
locIdOf_loop	lib/ObjTrace/CtxObjtrace.h	/^			LocIDMapForLoop *locIdOf_loop;$/;"	m	class:corelab::CtxObjtrace
loop	include/corelab/CAMP/ContextTreeBuilder.h	/^			Loop *loop;$/;"	m	class:corelab::ContextTree
loop	lib/CAMP/ContextTreeBuilder.h	/^			Loop *loop;$/;"	m	class:corelab::ContextTree
loopCount	include/corelab/Metadata/Metadata.h	/^			uint16_t loopCount;$/;"	m	class:corelab::Namer
loopDep	include/corelab/CAMP/campCommon.h	/^			uint32_t 	loopDep;						\/\/ Accumulative Loop Dependence Bit Vector$/;"	m	struct:corelab::CAMP::__anon4
loopDep	lib/CAMP/campCommon.h	/^			uint32_t 	loopDep;						\/\/ Accumulative Loop Dependence Bit Vector$/;"	m	struct:corelab::CAMP::__anon1
loopIdOf	include/corelab/CAMP/ContextTreeBuilder.h	/^			LoopIdOf loopIdOf;$/;"	m	class:corelab::ContextTreeBuilder
loopIdOf	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			ContextTreeBuilder::LoopIdOf *loopIdOf;$/;"	m	class:corelab::RegiInterIterDepFinder
loopIdOf	lib/CAMP/ContextTreeBuilder.h	/^			LoopIdOf loopIdOf;$/;"	m	class:corelab::ContextTreeBuilder
loopIdOf	lib/CAMP/RegiInterIterDepFinder.h	/^			ContextTreeBuilder::LoopIdOf *loopIdOf;$/;"	m	class:corelab::RegiInterIterDepFinder
loopInfoOf	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      LoopInfoOfFunc loopInfoOf;$/;"	m	class:corelab::LoopTraverse
loopInfoOf	include/corelab/CAMP/ContextTreeBuilder.h	/^			LoopInfoOfFunc loopInfoOf;$/;"	m	class:corelab::ContextTreeBuilder
loopInfoOf	lib/AliasAnalysis/LoopTraverse.hpp	/^      LoopInfoOfFunc loopInfoOf;$/;"	m	class:corelab::LoopTraverse
loopInfoOf	lib/CAMP/ContextTreeBuilder.h	/^			LoopInfoOfFunc loopInfoOf;$/;"	m	class:corelab::ContextTreeBuilder
loopOfCntxID	include/corelab/CAMP/ContextTreeBuilder.h	/^			LoopOfCntxID loopOfCntxID;$/;"	m	class:corelab::ContextTreeBuilder
loopOfCntxID	lib/CAMP/ContextTreeBuilder.h	/^			LoopOfCntxID loopOfCntxID;$/;"	m	class:corelab::ContextTreeBuilder
loopOfLoopID	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			ContextTreeBuilder::LoopOfCntxID *loopOfLoopID;$/;"	m	class:corelab::RegiInterIterDepFinder
loopOfLoopID	lib/CAMP/RegiInterIterDepFinder.h	/^			ContextTreeBuilder::LoopOfCntxID *loopOfLoopID;$/;"	m	class:corelab::RegiInterIterDepFinder
loopTable	include/corelab/Metadata/LoadNamer.h	/^			std::map<uint16_t, LoopEntry*> loopTable; \/\/ ctxId -> loopInfo$/;"	m	class:corelab::LoadNamer
loopTable	include/corelab/Metadata/Metadata.h	/^			std::map<uint16_t, LoopEntry*> loopTable; \/\/ ctxId -> loopInfo$/;"	m	class:corelab::Namer
lowestHeapSetting	tools/objtrace/objtraceruntime.cpp	/^void lowestHeapSetting (uint64_t addr){$/;"	f
lowest_heap	tools/objtrace/objtraceruntime.cpp	/^uint64_t lowest_heap;$/;"	v
main	autoconf/config.guess	/^		main()$/;"	f
main	autoconf/config.guess	/^	main ()$/;"	f
main	autoconf/config.guess	/^main ()$/;"	f
makeFunctionTable	lib/Metadata/Namer.cpp	/^	bool Namer::makeFunctionTable(Function &F)$/;"	f	class:corelab::Namer
makeMetadata	lib/Metadata/Namer.cpp	/^	void Namer::makeMetadata(Instruction* instruction, uint64_t Id) {$/;"	f	class:corelab::Namer
makeMetadata	lib/ObjTrace/CtxObjtrace.cpp	/^void CtxObjtrace::makeMetadata(Instruction* instruction, uint64_t Id) {$/;"	f	class:CtxObjtrace
makeMetadata	lib/ObjTrace/ObjTrace.cpp	/^void ObjTrace::makeMetadata(Instruction* instruction, uint64_t Id) {$/;"	f	class:ObjTrace
makeNodeOfCallSite	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTreeBuilder::makeNodeOfCallSite(Instruction *invokeOrCallinst, ContextTreeNode *parent){$/;"	f	class:ContextTreeBuilder
makeNodeOfCallSite_aux	lib/CAMP/ContextTreeBuilder.cpp	/^ContextTreeNode * ContextTreeBuilder::makeNodeOfCallSite_aux(Function *callee, Instruction *invokeOrCallinst, ContextTreeNode *parent){$/;"	f	class:ContextTreeBuilder
makeNodeOfLoop	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTreeBuilder::makeNodeOfLoop(Loop *loop, ContextTreeNode *parent){$/;"	f	class:ContextTreeBuilder
makeNonEmpty	include/corelab/Utilities/InstInsertPt.h	/^      static Instruction *makeNonEmpty(BasicBlock *bb) {$/;"	f	class:corelab::InstInsertPt
map	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<DeviceMapEntry*> map;$/;"	m	class:corelab::DeviceMap
markRecursive	include/corelab/CAMP/ContextTreeBuilder.h	/^			void markRecursive(){$/;"	f	class:corelab::ContextTree
markRecursive	lib/CAMP/ContextTreeBuilder.h	/^			void markRecursive(){$/;"	f	class:corelab::ContextTree
maxDepth	include/corelab/CAMP/ContextTreeBuilder.h	/^			unsigned maxDepth;$/;"	m	class:corelab::ContextTreeBuilder
maxDepth	lib/CAMP/ContextTreeBuilder.h	/^			unsigned maxDepth;$/;"	m	class:corelab::ContextTreeBuilder
maxDepthOf	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      FunToMaxDepth maxDepthOf;$/;"	m	class:corelab::LoopTraverse
maxDepthOf	lib/AliasAnalysis/LoopTraverse.hpp	/^      FunToMaxDepth maxDepthOf;$/;"	m	class:corelab::LoopTraverse
mdList	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<MetadataNode*> mdList;$/;"	m	class:corelab::EsperantoNamer
mdListBuild	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<MetadataNode*> mdListBuild;$/;"	m	class:corelab::EsperantoNamer
mergeID	lib/Metadata/Namer.cpp	26;"	d	file:
module	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			Module *module;$/;"	m	class:corelab::IndirectCallAnal
module	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      Module *module;$/;"	m	class:corelab::LoopTraverse
module	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      Module *module;$/;"	m	class:corelab::RecursiveFuncAnal
module	include/corelab/CAMP/CAMP.h	/^			Module *module;$/;"	m	class:corelab::CAMPInstaller
module	include/corelab/CAMP/CampCache.h	/^			Module *module;$/;"	m	class:corelab::CAMPCache
module	include/corelab/CAMP/CampExectime.h	/^			Module *module;$/;"	m	class:corelab::CAMPExectime
module	include/corelab/CAMP/ContextTreeBuilder.h	/^			Module *module;$/;"	m	class:corelab::ContextTreeBuilder
module	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			Module *module;$/;"	m	class:corelab::RegiInterIterDepFinder
module	include/corelab/ObjTrace/CtxObjtrace.h	/^			Module *module;$/;"	m	class:corelab::CtxObjtrace
module	include/corelab/ObjTrace/ObjTrace.h	/^      Module *module;$/;"	m	class:corelab::ObjTrace
module	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			Module *module;$/;"	m	class:corelab::IndirectCallAnal
module	lib/AliasAnalysis/LoopTraverse.hpp	/^      Module *module;$/;"	m	class:corelab::LoopTraverse
module	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      Module *module;$/;"	m	class:corelab::RecursiveFuncAnal
module	lib/CAMP/CAMP.h	/^			Module *module;$/;"	m	class:corelab::CAMPInstaller
module	lib/CAMP/CampCache.h	/^			Module *module;$/;"	m	class:corelab::CAMPCache
module	lib/CAMP/CampExectime.h	/^			Module *module;$/;"	m	class:corelab::CAMPExectime
module	lib/CAMP/ContextTreeBuilder.h	/^			Module *module;$/;"	m	class:corelab::ContextTreeBuilder
module	lib/CAMP/RegiInterIterDepFinder.h	/^			Module *module;$/;"	m	class:corelab::RegiInterIterDepFinder
module	lib/ObjTrace/CtxObjtrace.h	/^			Module *module;$/;"	m	class:corelab::CtxObjtrace
module	lib/ObjTrace/ObjTrace.h	/^      Module *module;$/;"	m	class:corelab::ObjTrace
nCallSiteNode	include/corelab/CAMP/ContextTreeBuilder.h	/^			unsigned nCallSiteNode;$/;"	m	class:corelab::ContextTreeBuilder
nCallSiteNode	lib/CAMP/ContextTreeBuilder.h	/^			unsigned nCallSiteNode;$/;"	m	class:corelab::ContextTreeBuilder
nLoadInvo	tools/campSampling/campRuntime.cpp	/^static uint64_t nLoadInvo; \/\/sampling ratio stat$/;"	v	file:
nLoopCarriedDepMap	include/corelab/CAMP/RegiInterIterDepFinder.h	/^			NumLoopCarriedDepMap nLoopCarriedDepMap;$/;"	m	class:corelab::RegiInterIterDepFinder
nLoopCarriedDepMap	lib/CAMP/RegiInterIterDepFinder.h	/^			NumLoopCarriedDepMap nLoopCarriedDepMap;$/;"	m	class:corelab::RegiInterIterDepFinder
nLoopNode	include/corelab/CAMP/ContextTreeBuilder.h	/^			unsigned nLoopNode;$/;"	m	class:corelab::ContextTreeBuilder
nLoopNode	lib/CAMP/ContextTreeBuilder.h	/^			unsigned nLoopNode;$/;"	m	class:corelab::ContextTreeBuilder
nSampledLoadInvo	tools/campSampling/campRuntime.cpp	/^static uint64_t nSampledLoadInvo; \/\/sampling ratio stat$/;"	v	file:
nSampledStoreInvo	tools/campSampling/campRuntime.cpp	/^static uint64_t nSampledStoreInvo; \/\/sampling ratio stat$/;"	v	file:
nStoreInvo	tools/campSampling/campRuntime.cpp	/^static uint64_t nStoreInvo; \/\/sampling ratio stat$/;"	v	file:
name	include/corelab/Metadata/Metadata.h	/^		const char* name;$/;"	m	struct:corelab::__anon9
name	include/corelab/Metadata/NamedMetadata.h	/^				char name[256];$/;"	m	struct:corelab::EsperantoNamer::DeviceEntry
nanosleep	tools/camp/x86timer.hpp	/^void nanosleep(uint64_t nanoseconds)$/;"	f	class:x86timer
nanosleep	tools/objtrace/x86timer.hpp	/^void nanosleep(uint64_t nanoseconds)$/;"	f	class:x86timer
nestingDepth	tools/camp/campExecRuntime.cpp	/^static unsigned nestingDepth;$/;"	v	file:
nestingDepth	tools/objtrace/ctxObjtraceRuntime.cpp	/^static unsigned nestingDepth;$/;"	v	file:
nonRecFuncList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      NonRecursiveFuncList nonRecFuncList;$/;"	m	class:corelab::RecursiveFuncAnal
nonRecFuncList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      NonRecursiveFuncList nonRecFuncList;$/;"	m	class:corelab::RecursiveFuncAnal
now	tools/camp/x86timer.hpp	/^double now()$/;"	f	class:x86timer
now	tools/objtrace/x86timer.hpp	/^double now()$/;"	f	class:x86timer
numBBs	include/corelab/Metadata/LoadNamer.h	/^			size_t numBBs;$/;"	m	class:corelab::LoadNamer
numCalls	include/corelab/Metadata/LoadNamer.h	/^			size_t numCalls;$/;"	m	class:corelab::LoadNamer
numContexts	include/corelab/Metadata/LoadNamer.h	/^			size_t numContexts;$/;"	m	class:corelab::LoadNamer
numDuplicationOnPathToRoot	lib/CAMP/ContextTreeBuilder.cpp	/^unsigned ContextTree::numDuplicationOnPathToRoot(bool isCallSiteCmp, const Instruction *instCmp, CntxID cntxIDCmp){$/;"	f	class:ContextTree
numFuncs	include/corelab/Metadata/LoadNamer.h	/^			size_t numFuncs;$/;"	m	class:corelab::LoadNamer
numLoads	include/corelab/Metadata/LoadNamer.h	/^			size_t numLoads;$/;"	m	class:corelab::LoadNamer
numLoops	include/corelab/Metadata/LoadNamer.h	/^			size_t numLoops;$/;"	m	class:corelab::LoadNamer
numStores	include/corelab/Metadata/LoadNamer.h	/^			size_t numStores;$/;"	m	class:corelab::LoadNamer
objTraceCalloc	include/corelab/ObjTrace/ObjTrace.h	/^      Constant *objTraceCalloc;$/;"	m	class:corelab::ObjTrace
objTraceCalloc	lib/ObjTrace/ObjTrace.h	/^      Constant *objTraceCalloc;$/;"	m	class:corelab::ObjTrace
objTraceCalloc	tools/objtrace/objtraceruntime.cpp	/^objTraceCalloc (size_t num, size_t size, FullID fullId){$/;"	f
objTraceFinalize	include/corelab/ObjTrace/ObjTrace.h	/^      Constant *objTraceFinalize;$/;"	m	class:corelab::ObjTrace
objTraceFinalize	lib/ObjTrace/ObjTrace.h	/^      Constant *objTraceFinalize;$/;"	m	class:corelab::ObjTrace
objTraceFinalize	tools/objtrace/objtraceruntime.cpp	/^void objTraceFinalize () {$/;"	f
objTraceFree	include/corelab/ObjTrace/ObjTrace.h	/^      Constant *objTraceFree;$/;"	m	class:corelab::ObjTrace
objTraceFree	lib/ObjTrace/ObjTrace.h	/^      Constant *objTraceFree;$/;"	m	class:corelab::ObjTrace
objTraceFree	tools/objtrace/objtraceruntime.cpp	/^objTraceFree (void* addr, FullID fullId){$/;"	f
objTraceInitialize	include/corelab/ObjTrace/ObjTrace.h	/^      Constant *objTraceInitialize;$/;"	m	class:corelab::ObjTrace
objTraceInitialize	lib/ObjTrace/ObjTrace.h	/^      Constant *objTraceInitialize;$/;"	m	class:corelab::ObjTrace
objTraceInitialize	tools/objtrace/objtraceruntime.cpp	/^void objTraceInitialize () {$/;"	f
objTraceLoadInstr	include/corelab/ObjTrace/ObjTrace.h	/^      Constant *objTraceLoadInstr;$/;"	m	class:corelab::ObjTrace
objTraceLoadInstr	lib/ObjTrace/ObjTrace.h	/^      Constant *objTraceLoadInstr;$/;"	m	class:corelab::ObjTrace
objTraceLoadInstr	tools/objtrace/objtraceruntime.cpp	/^void objTraceLoadInstr (void* addr, FullID fullId) { \/* FullID type is uint64_t *\/$/;"	f
objTraceMalloc	include/corelab/ObjTrace/ObjTrace.h	/^      Constant *objTraceMalloc;$/;"	m	class:corelab::ObjTrace
objTraceMalloc	lib/ObjTrace/ObjTrace.h	/^      Constant *objTraceMalloc;$/;"	m	class:corelab::ObjTrace
objTraceMalloc	tools/objtrace/objtraceruntime.cpp	/^objTraceMalloc (size_t size, FullID fullId){$/;"	f
objTraceRealloc	include/corelab/ObjTrace/ObjTrace.h	/^      Constant *objTraceRealloc;$/;"	m	class:corelab::ObjTrace
objTraceRealloc	lib/ObjTrace/ObjTrace.h	/^      Constant *objTraceRealloc;$/;"	m	class:corelab::ObjTrace
objTraceRealloc	tools/objtrace/objtraceruntime.cpp	/^objTraceRealloc (void* addr, size_t size, FullID fullId){$/;"	f
objTraceStoreInstr	include/corelab/ObjTrace/ObjTrace.h	/^      Constant *objTraceStoreInstr;$/;"	m	class:corelab::ObjTrace
objTraceStoreInstr	lib/ObjTrace/ObjTrace.h	/^      Constant *objTraceStoreInstr;$/;"	m	class:corelab::ObjTrace
objTraceStoreInstr	tools/objtrace/objtraceruntime.cpp	/^void objTraceStoreInstr (void* addr, FullID fullId) {   \/\/ FullID= uint64_t$/;"	f
operator !=	include/corelab/Metadata/NamedMetadata.h	/^			bool operator!=(const DeviceMapEntry& source) const{$/;"	f	class:corelab::DeviceMapEntry
operator <	include/corelab/Metadata/NamedMetadata.h	/^			bool operator<(const DeviceMapEntry& source) const{$/;"	f	class:corelab::DeviceMapEntry
operator <	include/corelab/Utilities/InstInsertPt.h	/^      bool operator<(const InstInsertPt& other) const {$/;"	f	class:corelab::InstInsertPt
operator <<	include/corelab/Utilities/InstInsertPt.h	/^      InstInsertPt &operator<<(Instruction *i) {$/;"	f	class:corelab::InstInsertPt
operator ==	include/corelab/Metadata/NamedMetadata.h	/^			bool operator==(const DeviceMapEntry& source) const{$/;"	f	class:corelab::DeviceMapEntry
override	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			bool runOnModule(Module &M)  override;$/;"	m	class:corelab::IndirectCallAnal
override	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      bool runOnModule(Module &M)  override;$/;"	m	class:corelab::LoopTraverse
override	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      bool runOnModule(Module &M)  override;$/;"	m	class:corelab::RecursiveFuncAnal
override	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			bool runOnModule(Module &M)  override;$/;"	m	class:corelab::IndirectCallAnal
override	lib/AliasAnalysis/LoopTraverse.hpp	/^      bool runOnModule(Module &M)  override;$/;"	m	class:corelab::LoopTraverse
override	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      bool runOnModule(Module &M)  override;$/;"	m	class:corelab::RecursiveFuncAnal
pCxtTree	include/corelab/CAMP/CAMP.h	/^			std::vector<ContextTreeNode *> *pCxtTree;$/;"	m	class:corelab::CAMPInstaller
pCxtTree	include/corelab/CAMP/CampCache.h	/^			std::vector<ContextTreeNode*> *pCxtTree;$/;"	m	class:corelab::CAMPCache
pCxtTree	include/corelab/CAMP/CampExectime.h	/^			std::vector<ContextTreeNode *> *pCxtTree;$/;"	m	class:corelab::CAMPExectime
pCxtTree	include/corelab/ObjTrace/CtxObjtrace.h	/^			std::vector<ContextTreeNode *> *pCxtTree;$/;"	m	class:corelab::CtxObjtrace
pCxtTree	lib/CAMP/CAMP.h	/^			std::vector<ContextTreeNode *> *pCxtTree;$/;"	m	class:corelab::CAMPInstaller
pCxtTree	lib/CAMP/CampCache.h	/^			std::vector<ContextTreeNode*> *pCxtTree;$/;"	m	class:corelab::CAMPCache
pCxtTree	lib/CAMP/CampExectime.h	/^			std::vector<ContextTreeNode *> *pCxtTree;$/;"	m	class:corelab::CAMPExectime
pCxtTree	lib/ObjTrace/CtxObjtrace.h	/^			std::vector<ContextTreeNode *> *pCxtTree;$/;"	m	class:corelab::CtxObjtrace
pLoadMap	tools/camp/campRuntime.h	/^	LoadHistoryMap *pLoadMap;$/;"	m	struct:HistoryElem
pLoadMap	tools/campSampling/campRuntime.h	/^	LoadHistoryMap *pLoadMap;$/;"	m	struct:HistoryElem
pLoadNamer	include/corelab/CAMP/CAMP.h	/^			LoadNamer *pLoadNamer;$/;"	m	class:corelab::CAMPInstaller
pLoadNamer	include/corelab/CAMP/CampExectime.h	/^			LoadNamer *pLoadNamer;$/;"	m	class:corelab::CAMPExectime
pLoadNamer	include/corelab/CAMP/ContextTreeBuilder.h	/^			LoadNamer *pLoadNamer;$/;"	m	class:corelab::ContextTreeBuilder
pLoadNamer	include/corelab/ObjTrace/CtxObjtrace.h	/^			LoadNamer *pLoadNamer;$/;"	m	class:corelab::CtxObjtrace
pLoadNamer	lib/CAMP/CAMP.h	/^			LoadNamer *pLoadNamer;$/;"	m	class:corelab::CAMPInstaller
pLoadNamer	lib/CAMP/CampExectime.h	/^			LoadNamer *pLoadNamer;$/;"	m	class:corelab::CAMPExectime
pLoadNamer	lib/CAMP/ContextTreeBuilder.h	/^			LoadNamer *pLoadNamer;$/;"	m	class:corelab::ContextTreeBuilder
pLoadNamer	lib/ObjTrace/CtxObjtrace.h	/^			LoadNamer *pLoadNamer;$/;"	m	class:corelab::CtxObjtrace
pM	include/corelab/Metadata/Metadata.h	/^			Module *pM;$/;"	m	class:corelab::Namer
pM	include/corelab/Metadata/NamedMetadata.h	/^			Module* pM;$/;"	m	class:corelab::EsperantoNamer
padding	tools/camp/campRuntime.h	/^	uint32_t padding; \/\/4byte padding to make StoreHistoryElem 24 byte$/;"	m	struct:StoreHistoryElem
padding	tools/campSampling/campRuntime.h	/^	uint32_t padding; \/\/4byte padding to make StoreHistoryElem 24 byte$/;"	m	struct:StoreHistoryElem
parent	include/corelab/CAMP/ContextTreeBuilder.h	/^			ContextTree *parent;$/;"	m	class:corelab::ContextTree
parent	lib/CAMP/ContextTreeBuilder.h	/^			ContextTree *parent;$/;"	m	class:corelab::ContextTree
perf_count	tools/camp/armtimer.hpp	/^unsigned int perf_count;$/;"	m	class:armtimer
perf_time	tools/camp/armtimer.hpp	/^double perf_time;$/;"	m	class:armtimer
plainFinalize	tools/camp/plainRuntime.cpp	/^void plainFinalize(void){$/;"	f
plainInitialize	tools/camp/plainRuntime.cpp	/^void plainInitialize(void){$/;"	f
plain_t	tools/camp/plainRuntime.cpp	/^x86timer plain_t;$/;"	v
platform	include/corelab/Metadata/NamedMetadata.h	/^				EsperantoPlatform platform;$/;"	m	struct:corelab::EsperantoNamer::DeviceEntry
pos	include/corelab/Utilities/InstInsertPt.h	/^      Instruction *                           pos;$/;"	m	class:corelab::InstInsertPt
possibleTargetOf	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      IndirectCallMap possibleTargetOf;$/;"	m	class:corelab::LoopTraverse
possibleTargetOf	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      IndirectCallMap possibleTargetOf;$/;"	m	class:corelab::RecursiveFuncAnal
possibleTargetOf	include/corelab/CAMP/ContextTreeBuilder.h	/^			IndirectCallMap possibleTargetOf;$/;"	m	class:corelab::ContextTreeBuilder
possibleTargetOf	lib/AliasAnalysis/LoopTraverse.hpp	/^      IndirectCallMap possibleTargetOf;$/;"	m	class:corelab::LoopTraverse
possibleTargetOf	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      IndirectCallMap possibleTargetOf;$/;"	m	class:corelab::RecursiveFuncAnal
possibleTargetOf	lib/CAMP/ContextTreeBuilder.h	/^			IndirectCallMap possibleTargetOf;$/;"	m	class:corelab::ContextTreeBuilder
print	include/corelab/Metadata/NamedMetadata.h	/^			void print(){$/;"	f	class:corelab::DeviceMap
print	lib/Utilities/InstInsertPt.cpp	/^  void InstInsertPt::print(llvm::raw_ostream &out) const{$/;"	f	class:corelab::InstInsertPt
printAllIndirectCalls	lib/AliasAnalysis/IndirectCallAnal.cpp	/^void IndirectCallAnal::printAllIndirectCalls(){$/;"	f	class:IndirectCallAnal
printAllRecursiveFunction	lib/AliasAnalysis/RecursiveFuncAnal.cpp	/^void RecursiveFuncAnal::printAllRecursiveFunction(){$/;"	f	class:RecursiveFuncAnal
printAllTargetCandidate	lib/AliasAnalysis/IndirectCallAnal.cpp	/^void IndirectCallAnal::printAllTargetCandidate(){$/;"	f	class:IndirectCallAnal
printAllTrueRecursiveCall	lib/AliasAnalysis/RecursiveFuncAnal.cpp	/^void RecursiveFuncAnal::printAllTrueRecursiveCall(){$/;"	f	class:RecursiveFuncAnal
printCallHistory	lib/AliasAnalysis/RecursiveFuncAnal.cpp	/^void RecursiveFuncAnal::printCallHistory(){$/;"	f	class:RecursiveFuncAnal
printCallsWithNoTarget	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTreeBuilder::printCallsWithNoTarget(){$/;"	f	class:ContextTreeBuilder
printContextTree	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTreeBuilder::printContextTree(){$/;"	f	class:ContextTreeBuilder
printMatching	lib/AliasAnalysis/IndirectCallAnal.cpp	/^void IndirectCallAnal::printMatching(Matching &matching){$/;"	f	class:IndirectCallAnal
printMaxLoopDepthOfFunctions	lib/AliasAnalysis/LoopTraverse.cpp	/^void LoopTraverse::printMaxLoopDepthOfFunctions()$/;"	f	class:LoopTraverse
printPathToRoot	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTree::printPathToRoot(){$/;"	f	class:ContextTree
printResult	lib/CAMP/RegiInterIterDepFinder.cpp	/^void RegiInterIterDepFinder::printResult(std::string path){$/;"	f	class:RegiInterIterDepFinder
printSpecs	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::printSpecs() {$/;"	f	class:corelab::EsperantoNamer
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
ptrInModule	include/corelab/AliasAnalysis/TestClient.hpp	/^			std::vector<Value *> ptrInModule;$/;"	m	class:corelab::TestAAClient
queryTreeNodeForCallSite	include/corelab/CAMP/ContextTreeBuilder.h	/^			ContextTreeNode *queryTreeNodeForCallSite(const Instruction *inst){$/;"	f	class:corelab::ContextTreeBuilder
queryTreeNodeForCallSite	lib/CAMP/ContextTreeBuilder.h	/^			ContextTreeNode *queryTreeNodeForCallSite(const Instruction *inst){$/;"	f	class:corelab::ContextTreeBuilder
randomSampling	tools/campSampling/campRuntime.cpp	/^static uint16_t randomSampling; \/\/DO sampling when (randomSampling == RANDOM_SAMPLING_CYCLE)$/;"	v	file:
randomSamplingTriggered	tools/campSampling/campRuntime.cpp	/^static uint64_t randomSamplingTriggered;$/;"	v	file:
rdtsc	tools/camp/x86timer.hpp	/^inline uint64_t rdtsc() {$/;"	f
rdtsc	tools/camp/x86timer.hpp	/^unsigned __int64 __cdecl rdtsc(void)$/;"	f
rdtsc	tools/objtrace/x86timer.hpp	/^inline uint64_t rdtsc() {$/;"	f
rdtsc	tools/objtrace/x86timer.hpp	/^unsigned __int64 __cdecl rdtsc(void)$/;"	f
recFuncList	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      std::unordered_set<const Function *> recFuncList;$/;"	m	class:corelab::LoopTraverse
recFuncList	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveFuncList recFuncList;$/;"	m	class:corelab::RecursiveFuncAnal
recFuncList	include/corelab/CAMP/ContextTreeBuilder.h	/^			std::unordered_set<const Function *> recFuncList;$/;"	m	class:corelab::ContextTreeBuilder
recFuncList	lib/AliasAnalysis/LoopTraverse.hpp	/^      std::unordered_set<const Function *> recFuncList;$/;"	m	class:corelab::LoopTraverse
recFuncList	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveFuncList recFuncList;$/;"	m	class:corelab::RecursiveFuncAnal
recFuncList	lib/CAMP/ContextTreeBuilder.h	/^			std::unordered_set<const Function *> recFuncList;$/;"	m	class:corelab::ContextTreeBuilder
reccall_iterator	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef RecursiveCallList::iterator reccall_iterator;$/;"	t	class:corelab::RecursiveFuncAnal
reccall_iterator	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      typedef RecursiveCallList::iterator reccall_iterator;$/;"	t	class:corelab::RecursiveFuncAnal
recordLoopIDforEachLoop	lib/CAMP/ContextTreeBuilder.cpp	/^void ContextTreeBuilder::recordLoopIDforEachLoop(){$/;"	f	class:ContextTreeBuilder
recurCount	tools/camp/campExecRuntime.cpp	/^static int recurCount = 0;$/;"	v	file:
recurDuplicateFunction	lib/CAMP/CampCache.cpp	/^bool CAMPCache::recurDuplicateFunction (ContextTreeNode *node, int oldIterator, Instruction* targetInst)$/;"	f	class:CAMPCache
recursiveCalls	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveCallList recursiveCalls;$/;"	m	class:corelab::RecursiveFuncAnal
recursiveCalls	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      RecursiveCallList recursiveCalls;$/;"	m	class:corelab::RecursiveFuncAnal
recursiveFunCalls	include/corelab/AliasAnalysis/LoopTraverse.hpp	/^      RecursiveFunCallList recursiveFunCalls; \/\/ call to recursive function$/;"	m	class:corelab::LoopTraverse
recursiveFunCalls	include/corelab/CAMP/ContextTreeBuilder.h	/^			RecursiveFunCallList recursiveFunCalls; \/\/ call to recursive function$/;"	m	class:corelab::ContextTreeBuilder
recursiveFunCalls	lib/AliasAnalysis/LoopTraverse.hpp	/^      RecursiveFunCallList recursiveFunCalls; \/\/ call to recursive function$/;"	m	class:corelab::LoopTraverse
recursiveFunCalls	lib/CAMP/ContextTreeBuilder.h	/^			RecursiveFunCallList recursiveFunCalls; \/\/ call to recursive function$/;"	m	class:corelab::ContextTreeBuilder
reload	lib/Metadata/LoadNamer.cpp	/^	void LoadNamer::reload() {$/;"	f	class:corelab::LoadNamer
remoteCallFunctionTable	include/corelab/Metadata/NamedMetadata.h	/^			std::map<Function*,bool> remoteCallFunctionTable;$/;"	m	class:corelab::EsperantoNamer
remoteCallFunctions	include/corelab/Metadata/NamedMetadata.h	/^			std::vector<Function*> remoteCallFunctions;$/;"	m	class:corelab::EsperantoNamer
reset	lib/Metadata/Namer.cpp	/^	void Namer::reset(Module& M) {$/;"	f	class:corelab::Namer
runOnCall	lib/Metadata/Namer.cpp	/^	bool Namer::runOnCall(uint16_t bbid, uint16_t includedFunctionId, uint16_t callingFunctionId) {$/;"	f	class:corelab::Namer
runOnFunction	lib/CAMP/CAMP.cpp	/^bool CAMPInstaller::runOnFunction(Function *F)$/;"	f	class:CAMPInstaller
runOnFunction	lib/Metadata/Namer.cpp	/^	bool Namer::runOnFunction(Function &F) {$/;"	f	class:corelab::Namer
runOnLoop	lib/CAMP/CAMP.cpp	/^bool CAMPInstaller::runOnLoop(Loop *L, FuncID functionId)$/;"	f	class:CAMPInstaller
runOnLoop	lib/Metadata/Namer.cpp	/^	bool Namer::runOnLoop(Loop *L, uint16_t functionId) {$/;"	f	class:corelab::Namer
runOnModule	lib/AliasAnalysis/IndirectCallAnal.cpp	/^bool IndirectCallAnal::runOnModule(Module &M) {$/;"	f	class:IndirectCallAnal
runOnModule	lib/AliasAnalysis/LoopTraverse.cpp	/^bool LoopTraverse::runOnModule(Module &M) {$/;"	f	class:LoopTraverse
runOnModule	lib/AliasAnalysis/RecursiveFuncAnal.cpp	/^bool RecursiveFuncAnal::runOnModule(Module &M) {$/;"	f	class:RecursiveFuncAnal
runOnModule	lib/CAMP/CAMP.cpp	/^bool CAMPInstaller::runOnModule(Module& M) {$/;"	f	class:CAMPInstaller
runOnModule	lib/CAMP/CampCache.cpp	/^bool CAMPCache::runOnModule(Module& M) {$/;"	f	class:CAMPCache
runOnModule	lib/CAMP/CampExectime.cpp	/^bool CAMPExectime::runOnModule(Module& M) {$/;"	f	class:CAMPExectime
runOnModule	lib/CAMP/CampPlain.cpp	/^bool CAMPPlain::runOnModule(Module& M) {$/;"	f	class:CAMPPlain
runOnModule	lib/CAMP/ContextTreeBuilder.cpp	/^bool ContextTreeBuilder::runOnModule(Module& M) {$/;"	f	class:ContextTreeBuilder
runOnModule	lib/CAMP/RegiInterIterDepFinder.cpp	/^bool RegiInterIterDepFinder::runOnModule(Module& M) {$/;"	f	class:RegiInterIterDepFinder
runOnModule	lib/Metadata/EsperantoNamer.cpp	/^	bool EsperantoNamer::runOnModule(Module &M) {$/;"	f	class:corelab::EsperantoNamer
runOnModule	lib/Metadata/LoadNamer.cpp	/^	bool LoadNamer::runOnModule(Module& M)$/;"	f	class:corelab::LoadNamer
runOnModule	lib/Metadata/Namer.cpp	/^	bool Namer::runOnModule(Module &M) {$/;"	f	class:corelab::Namer
runOnModule	lib/ObjTrace/CtxObjtrace.cpp	/^bool CtxObjtrace::runOnModule(Module& M) {$/;"	f	class:CtxObjtrace
runOnModule	lib/ObjTrace/ObjTrace.cpp	/^bool ObjTrace::runOnModule(Module& M) {$/;"	f	class:ObjTrace
runOnModule	lib/Utilities/FindFunctionExitBB.cpp	/^bool FindFunctionExitBB::runOnModule(Module &M) {$/;"	f	class:FindFunctionExitBB
runOnModuleImpl	lib/Metadata/Namer.cpp	/^	void Namer::runOnModuleImpl(Module &M)$/;"	f	class:corelab::Namer
sampling	tools/campSampling/campRuntime.cpp	/^static uint16_t sampling; \/\/doesn't do anything when it is not 0x0000;$/;"	v	file:
searchMaxLoopDepth	lib/AliasAnalysis/LoopTraverse.cpp	/^void LoopTraverse::searchMaxLoopDepth(){$/;"	f	class:LoopTraverse
segvAction	tools/camp/ShadowMemory.hpp	/^		static struct sigaction	segvAction;$/;"	m	class:ShadowMemoryManager	typeref:struct:ShadowMemoryManager::sigaction
segvAction	tools/camp/campRuntime.cpp	/^struct sigaction ShadowMemoryManager::segvAction; \/\/Page Fault hooking mechanism$/;"	m	class:ShadowMemoryManager	typeref:struct:ShadowMemoryManager::	file:
segvAction	tools/campSampling/ShadowMemory.hpp	/^		static struct sigaction	segvAction;$/;"	m	class:ShadowMemoryManager	typeref:struct:ShadowMemoryManager::sigaction
segvAction	tools/campSampling/campRuntime.cpp	/^struct sigaction ShadowMemoryManager::segvAction; \/\/Page Fault hooking mechanism$/;"	m	class:ShadowMemoryManager	typeref:struct:ShadowMemoryManager::	file:
setEdgeWeight	include/corelab/Utilities/ProfileInfo.h	/^    void setEdgeWeight(Edge e, double w) {$/;"	f	class:llvm::ProfileInfoT
setFunctions	lib/CAMP/CAMP.cpp	/^void CAMPInstaller::setFunctions(Module &M)$/;"	f	class:CAMPInstaller
setFunctions	lib/CAMP/CampExectime.cpp	/^void CAMPExectime::setFunctions(Module &M)$/;"	f	class:CAMPExectime
setFunctions	lib/CAMP/CampPlain.cpp	/^void CAMPPlain::setFunctions(Module &M)$/;"	f	class:CAMPPlain
setFunctions	lib/ObjTrace/CtxObjtrace.cpp	/^void CtxObjtrace::setFunctions(Module &M)$/;"	f	class:CtxObjtrace
setFunctions	lib/ObjTrace/ObjTrace.cpp	/^void ObjTrace::setFunctions(Module &M) {$/;"	f	class:ObjTrace
setID	include/corelab/Metadata/NamedMetadata.h	/^			void setID(int id_){$/;"	f	class:corelab::DeviceMapEntry
setIniFini	lib/CAMP/CAMP.cpp	/^void CAMPInstaller::setIniFini(Module& M)$/;"	f	class:CAMPInstaller
setIniFini	lib/CAMP/CampExectime.cpp	/^void CAMPExectime::setIniFini(Module& M)$/;"	f	class:CAMPExectime
setIniFini	lib/CAMP/CampPlain.cpp	/^void CAMPPlain::setIniFini(Module& M)$/;"	f	class:CAMPPlain
setIniFini	lib/ObjTrace/CtxObjtrace.cpp	/^void CtxObjtrace::setIniFini(Module& M)$/;"	f	class:CtxObjtrace
setIniFini	lib/ObjTrace/ObjTrace.cpp	/^void ObjTrace::setIniFini(Module& M) {$/;"	f	class:ObjTrace
setMaps	lib/Metadata/EsperantoNamer.cpp	/^	void EsperantoNamer::setMaps() {$/;"	f	class:corelab::EsperantoNamer
setName	include/corelab/Metadata/NamedMetadata.h	/^			void setName(const char* name){$/;"	f	class:corelab::DeviceMapEntry
shadowMemorySetting	tools/objtrace/objtraceruntime.cpp	/^void shadowMemorySetting (void *addr, size_t size, FullID fullId){$/;"	f
size	include/corelab/AliasAnalysis/RecursiveFuncAnal.hpp	/^      size_t                  size () const { return recFuncList.size();  }$/;"	f	class:corelab::RecursiveFuncAnal
size	lib/AliasAnalysis/RecursiveFuncAnal.hpp	/^      size_t                  size () const { return recFuncList.size();  }$/;"	f	class:corelab::RecursiveFuncAnal
srcInstrID	include/corelab/CAMP/campCommon.h	/^			InstrID 	srcInstrID;												\/\/ Source Instruction ID$/;"	m	struct:corelab::CAMP::__anon4
srcInstrID	lib/CAMP/campCommon.h	/^			InstrID 	srcInstrID;												\/\/ Source Instruction ID$/;"	m	struct:corelab::CAMP::__anon1
srcStkCntxID	include/corelab/CAMP/campCommon.h	/^			CntxID 		srcStkCntxID[MAX_CNTX_LV + 1];		\/\/ Source Context ID Stack$/;"	m	struct:corelab::CAMP::__anon4
srcStkCntxID	lib/CAMP/campCommon.h	/^			CntxID 		srcStkCntxID[MAX_CNTX_LV + 1];		\/\/ Source Context ID Stack$/;"	m	struct:corelab::CAMP::__anon1
start	tools/camp/x86timer.hpp	/^void start()$/;"	f	class:x86timer
start	tools/objtrace/x86timer.hpp	/^void start()$/;"	f	class:x86timer
start_	tools/camp/x86timer.hpp	/^uint64_t start_,end_;$/;"	m	class:x86timer
start_	tools/objtrace/x86timer.hpp	/^uint64_t start_,end_;$/;"	m	class:x86timer
start_count	tools/camp/armtimer.hpp	/^unsigned int start_count;$/;"	m	class:armtimer
start_time	tools/camp/armtimer.hpp	/^struct timeval start_time, end_time;$/;"	m	class:armtimer	typeref:struct:armtimer::timeval
start_total_time	tools/camp/campExecRuntime.cpp	/^static uint64_t start_total_time;$/;"	v	file:
stdLibFunCalls	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			IndirectCallList stdLibFunCalls;$/;"	m	class:corelab::IndirectCallAnal
stdLibFunCalls	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			IndirectCallList stdLibFunCalls;$/;"	m	class:corelab::IndirectCallAnal
stdLibFunList	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			std::unordered_set<std::string> stdLibFunList;$/;"	m	class:corelab::IndirectCallAnal
stdLibFunList	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			std::unordered_set<std::string> stdLibFunList;$/;"	m	class:corelab::IndirectCallAnal
stop	tools/camp/x86timer.hpp	/^uint64_t stop()$/;"	f	class:x86timer
stop	tools/objtrace/x86timer.hpp	/^uint64_t stop()$/;"	f	class:x86timer
stop_perfcounter	tools/camp/armtimer.hpp	/^void stop_perfcounter (void)$/;"	f	class:armtimer
storeCount	include/corelab/Metadata/Metadata.h	/^			uint16_t storeCount;$/;"	m	class:corelab::Namer
storeElem	tools/camp/campRuntime.h	/^	StoreHistoryElem storeElem;$/;"	m	struct:HistoryElem
storeElem	tools/campSampling/campRuntime.h	/^	StoreHistoryElem storeElem;$/;"	m	struct:HistoryElem
storeIdMap	tools/objtrace/objtraceruntime.cpp	/^LoadStoreMap *storeIdMap;$/;"	v
sum	tools/camp/x86timer.hpp	/^double sum;$/;"	m	class:x86timer
sum	tools/objtrace/x86timer.hpp	/^double sum;$/;"	m	class:x86timer
t	tools/camp/campExecRuntime.cpp	/^armtimer t;$/;"	v
t	tools/camp/campExecRuntime.cpp	/^x86timer t;$/;"	v
t	tools/objtrace/objtraceruntime.cpp	/^x86timer t;$/;"	v
testAndTraverse	lib/AliasAnalysis/LoopTraverse.cpp	/^unsigned LoopTraverse::testAndTraverse(Instruction *inst){$/;"	f	class:LoopTraverse
times	tools/camp/x86timer.hpp	/^int times;$/;"	m	class:x86timer
times	tools/objtrace/x86timer.hpp	/^int times;$/;"	m	class:x86timer
tmpSometime	tools/camp/campExecRuntime.cpp	/^static double tmpSometime = 0.0;$/;"	v	file:
tmpSometime	tools/camp/campExecRuntime.cpp	/^static unsigned int tmpSometime = 0.0;$/;"	v	file:
tmpTimeOfContext	tools/camp/campExecRuntime.cpp	/^std::unordered_map<CntxID, double> *tmpTimeOfContext;$/;"	v
tmpTimeOfContext	tools/camp/campExecRuntime.cpp	/^std::unordered_map<CntxID, unsigned int> *tmpTimeOfContext;$/;"	v
totalLooptime	tools/camp/campExecRuntime.cpp	/^static double totalLooptime = 0.0;$/;"	v	file:
totalSometime	tools/camp/campExecRuntime.cpp	/^static double totalSometime = 0.0;$/;"	v	file:
totalSometime	tools/camp/campExecRuntime.cpp	/^static unsigned int totalSometime = 0.0;$/;"	v	file:
totalfunctime	tools/camp/campExecRuntime.cpp	/^static double totalfunctime = 0.0;$/;"	v	file:
transform	lib/Utilities/FindFunctionExitBB.cpp	/^void FindFunctionExitBB::transform(Function *fun){$/;"	f	class:FindFunctionExitBB
traverseAndMarkRecCalls	lib/AliasAnalysis/RecursiveFuncAnal.cpp	/^void RecursiveFuncAnal::traverseAndMarkRecCalls(Function *curFun){$/;"	f	class:RecursiveFuncAnal
typeBasedMatching	include/corelab/AliasAnalysis/IndirectCallAnal.hpp	/^			Matching typeBasedMatching; \/\/matched by Function prototype (Function return type, and formal argument types)$/;"	m	class:corelab::IndirectCallAnal
typeBasedMatching	lib/AliasAnalysis/IndirectCallAnal.hpp	/^			Matching typeBasedMatching; \/\/matched by Function prototype (Function return type, and formal argument types)$/;"	m	class:corelab::IndirectCallAnal
ucID	include/corelab/CAMP/ContextTreeBuilder.h	/^			UniqueContextID ucID;$/;"	m	class:corelab::ContextTree
ucID	lib/CAMP/ContextTreeBuilder.h	/^			UniqueContextID ucID;$/;"	m	class:corelab::ContextTree
uint64_t	tools/camp/x86timer.hpp	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	tools/objtrace/x86timer.hpp	/^typedef unsigned __int64 uint64_t;$/;"	t
unix	tools/camp/x86timer.hpp	22;"	d
unix	tools/objtrace/x86timer.hpp	22;"	d
utilities	include/corelab/Utilities/StandardLibraryFunctionsName.h	/^	namespace utilities{$/;"	n	namespace:corelab
verifyUCID	lib/CAMP/ContextTreeBuilder.cpp	/^bool ContextTreeBuilder::verifyUCID(){$/;"	f	class:ContextTreeBuilder
x86timer	tools/camp/x86timer.hpp	/^class x86timer {$/;"	c
x86timer	tools/camp/x86timer.hpp	/^x86timer() {$/;"	f	class:x86timer
x86timer	tools/objtrace/x86timer.hpp	/^class x86timer {$/;"	c
x86timer	tools/objtrace/x86timer.hpp	/^x86timer() {$/;"	f	class:x86timer
